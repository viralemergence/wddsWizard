[{"path":"https://viralemergence.github.io/wddsWizard/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 wddsWizard authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/articles/disease_data.html","id":"required-fields","dir":"Articles","previous_headings":"","what":"Required fields","title":"Wildlife Disease Data","text":"following fields required data.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/articles/disease_data.html","id":"read-in-and-clean-up-the-excel-spreadsheet","dir":"Articles","previous_headings":"","what":"Read in and Clean up the excel spreadsheet","title":"Wildlife Disease Data","text":"","code":"## read becker_data <- wdds_example_data(version = \"latest\", file = \"Becker_demo_dataset.xlsx\") |>   readxl::read_xlsx()  becker_data_prelim <- janitor::clean_names(becker_data, case = \"lower_camel\")"},{"path":"https://viralemergence.github.io/wddsWizard/articles/disease_data.html","id":"check-for-required-fields","dir":"Articles","previous_headings":"Read in and Clean up the excel spreadsheet","what":"Check for required Fields","title":"Wildlife Disease Data","text":"","code":"# check that required fields are in dataset required_field_check <- wddsWizard::disease_data_required_fields %in% names(becker_data_prelim)  wddsWizard::disease_data_required_fields[!required_field_check] #> [1] \"sampleID\"               \"sampleCollectionMethod\""},{"path":"https://viralemergence.github.io/wddsWizard/articles/disease_data.html","id":"rename-fields-to-match-standard","dir":"Articles","previous_headings":"Read in and Clean up the excel spreadsheet","what":"Rename Fields to match standard","title":"Wildlife Disease Data","text":"","code":"becker_data_prelim$collectionMethod #> [1] \"Oral swab\"   \"Rectal swab\"  becker_data_clean <- becker_data_prelim |>   dplyr::rename(     \"sampleID\" = \"sampleId\",     \"animalID\" = \"animalId\",     \"collectionMethodAndOrTissue\" = \"collectionMethod\"   )  # check that all required fields are in the data all(wddsWizard::disease_data_required_fields %in% names(becker_data_clean)) #> [1] FALSE"},{"path":"https://viralemergence.github.io/wddsWizard/articles/disease_data.html","id":"prep-for-json","dir":"Articles","previous_headings":"","what":"Prep for JSON","title":"Wildlife Disease Data","text":"","code":"becker_prepped <- prep_data(becker_data_clean)  ## wrap the prepped data in list becker_data_json <- becker_prepped |>   jsonlite::toJSON(pretty = TRUE)"},{"path":"https://viralemergence.github.io/wddsWizard/articles/disease_data.html","id":"validate-disease-data","dir":"Articles","previous_headings":"","what":"Validate disease data","title":"Wildlife Disease Data","text":"","code":"## get the schema -- notice that you can set the version of the schema schema <- wdds_json(version = \"latest\", file = \"schemas/disease_data.json\")  dd_validator <- jsonvalidate::json_validator(schema, engine = \"ajv\")  dd_validation <- dd_validator(becker_data_json, verbose = TRUE)  ## check for errors!  errors <- attributes(dd_validation)  if (!dd_validation) {   errors$errors } else {   print(\"Valid project metadata!üòÅ\") } #>   instancePath schemaPath  keyword        missingProperty #> 1              #/required required sampleCollectionMethod #>                                                message #> 1 must have required property 'sampleCollectionMethod' #>                                                                                                                                                  schema #> 1 sampleID, latitude, longitude, sampleCollectionMethod, hostIdentification, detectionTarget, detectionMethod, detectionOutcome, parasiteIdentification #>                           parentSchema.$schema    parentSchema.title #> 1 https://json-schema.org/draft/2020-12/schema Wildlife Disease Data #>                                                         parentSchema.description #> 1 Schema for Wildlife Disease Data. This a general and extensible data standard. #>   parentSchema.type #> 1            object #>                                                                                                                                                                                                                                                                                                                                                                                                                                       parentSchema.properties.sampleID.description #> 1 A researcher-generated unique ID for the sample: usually a unique string of both characters and integers (e.g., OS BZ19-114 to indicate an oral swab taken from animal BZ19-114; see worked example below), to avoid conflicts that can arise when datasets are merged with number-only notation for samples. Ideally, sample names should be kept consistent across all online databases and physical resources (e.g., museum collections or project-specific sample archives). #>   parentSchema.properties.sampleID.type #> 1                                 array #>   parentSchema.properties.sampleID.items.type #> 1                                string, null #>   parentSchema.properties.sampleID.items.minItems #> 1                                               1 #>                                                                                                                                                                                                                                                                                       parentSchema.properties.animalID.description #> 1 A researcher-generated unique ID for the individual animal from which the sample was collected: usually a unique string of both characters and integers (e.g., BZ19-114 to indicate animal 114 sampled in 2019 in Belize). Ideally, animal names should again be kept consistent across online databases and physical resources. #>   parentSchema.properties.animalID.type #> 1                                 array #>   parentSchema.properties.animalID.items.type #> 1                                string, null #>   parentSchema.properties.animalID.items.minItems #> 1                                               1 #>                                                          parentSchema.properties.latitude.description #> 1 Latitude of the collection site in decimal format. See http://rs.tdwg.org/dwc/terms/decimalLatitude #>   parentSchema.properties.latitude.type #> 1                                 array #>   parentSchema.properties.latitude.items.type #> 1                                number, null #>   parentSchema.properties.latitude.items.minItems #> 1                                               1 #>   parentSchema.properties.latitude.items.maximum #> 1                                             90 #>   parentSchema.properties.latitude.items.minimum #> 1                                            -90 #>                                                            parentSchema.properties.longitude.description #> 1 Longitude of the collection site  in decimal format. See http://rs.tdwg.org/dwc/terms/decimalLongitude #>   parentSchema.properties.longitude.type #> 1                                  array #>   parentSchema.properties.longitude.items.type #> 1                                 number, null #>   parentSchema.properties.longitude.items.minItems #> 1                                                1 #>   parentSchema.properties.longitude.items.maximum #> 1                                             180 #>   parentSchema.properties.longitude.items.minimum #> 1                                            -180 #>                                                                                                                                                           parentSchema.properties.spatialUncertainty.description #> 1 Coordinate uncertainty from GPS recordings, post-hoc digitization, or systematic alterations (e.g., jittering or rounding) expressed in meters. See http://rs.tdwg.org/dwc/terms/coordinateUncertaintyInMeters #>   parentSchema.properties.spatialUncertainty.type #> 1                                           array #>   parentSchema.properties.spatialUncertainty.items.type #> 1                                          number, null #>   parentSchema.properties.spatialUncertainty.items.minItems #> 1                                                         1 #>   parentSchema.properties.spatialUncertainty.items.minimum #> 1                                                        0 #>                                                parentSchema.properties.collectionDay.description #> 1 The day of the month on which the specimen was collected. See http://rs.tdwg.org/dwc/terms/day #>   parentSchema.properties.collectionDay.type #> 1                                      array #>   parentSchema.properties.collectionDay.items.type #> 1                                    integer, null #>   parentSchema.properties.collectionDay.items.minItems #> 1                                                    1 #>   parentSchema.properties.collectionDay.items.minimum #> 1                                                   1 #>   parentSchema.properties.collectionDay.items.maximum #> 1                                                  31 #>                                     parentSchema.properties.collectionMonth.description #> 1 The month in which the specimen was collected. See http://rs.tdwg.org/dwc/terms/month #>   parentSchema.properties.collectionMonth.type #> 1                                        array #>   parentSchema.properties.collectionMonth.items.type #> 1                                      integer, null #>   parentSchema.properties.collectionMonth.items.minItems #> 1                                                      1 #>   parentSchema.properties.collectionMonth.items.minimum #> 1                                                     1 #>   parentSchema.properties.collectionMonth.items.maximum #> 1                                                    12 #>                                    parentSchema.properties.collectionYear.description #> 1 The year in which the specimen was collected. See http://rs.tdwg.org/dwc/terms/year #>   parentSchema.properties.collectionYear.type #> 1                                       array #>   parentSchema.properties.collectionYear.type #> 1                               integer, null #>                                                                                            parentSchema.properties.sampleCollectionMethod.description #> 1 The technique used to acquire the sample and/or the tissue from which the sample was acquired (e.g. visual inspection; swab; wing punch; necropsy). #>   parentSchema.properties.sampleCollectionMethod.examples #> 1           visual inspection, swab, wing punch, necropsy #>   parentSchema.properties.sampleCollectionMethod.type #> 1                                               array #>   parentSchema.properties.sampleCollectionMethod.items.type #> 1                                                    string #>   parentSchema.properties.sampleCollectionMethod.items.minItems #> 1                                                             1 #>                                            parentSchema.properties.sampleMaterial.description #> 1 Organic tissue or fluid being collected (e.g., ‚Äúliver‚Äù; ‚Äúblood‚Äù; ‚Äúskin‚Äù; ‚Äúwhole organism‚Äù). #>   parentSchema.properties.sampleMaterial.examples #> 1              liver, blood, skin, whole organism #>   parentSchema.properties.sampleMaterial.type #> 1                                       array #>   parentSchema.properties.sampleMaterial.items.type #> 1                                      string, null #>   parentSchema.properties.sampleMaterial.items.minItems #> 1                                                     1 #>                                     parentSchema.properties.sampleCollectionBodyPart.description #> 1 Part of the animal body that samples are generated or collected from (e.g., ‚Äúrectum‚Äù; ‚Äúwing‚Äù). #>   parentSchema.properties.sampleCollectionBodyPart.examples #> 1                                              rectum, wing #>   parentSchema.properties.sampleCollectionBodyPart.type #> 1                                                 array #>   parentSchema.properties.sampleCollectionBodyPart.items.type #> 1                                                string, null #>   parentSchema.properties.sampleCollectionBodyPart.items.minItems #> 1                                                               1 #>                                                                                                                                                                                                                                                                                                                                                                            parentSchema.properties.hostIdentification.description #> 1 The Linnaean classification of the animal from which the sample was collected, reported at the lowest possible level (ideally, species binomial name: e.g., Odocoileus virginianus or Ixodes scapularis). As necessary, researchers may also include an additional field indicating when uncertainty exists in the identification of the host organism (see Adding new fields). See http://rs.tdwg.org/dwc/terms/scientificName #>   parentSchema.properties.hostIdentification.type #> 1                                           array #>   parentSchema.properties.hostIdentification.items.type #> 1                                          string, null #>   parentSchema.properties.hostIdentification.items.minItems #> 1                                                         1 #>   parentSchema.properties.hostIdentification.items.pattern #> 1                        [HOMOhomo]{4} [SAPIENSsapiens]{7} #>                                                              parentSchema.properties.organismSex.description #> 1 The sex of the individual animal from which the sample was collected. See http://rs.tdwg.org/dwc/terms/sex #>   parentSchema.properties.organismSex.examples #> 1                  male, female, hermaphrodite #>   parentSchema.properties.organismSex.type #> 1                                    array #>   parentSchema.properties.organismSex.items.type #> 1                                   string, null #>   parentSchema.properties.organismSex.items.minItems #> 1                                                  1 #>                                                                                                                                                                                        parentSchema.properties.liveCapture.description #> 1 Whether the individual animal from which the sample was collected was alive at the time of capture. Should be TRUE or FALSE; lethal sampling should be recorded as TRUE as this field describes the organism at the time of capture. #>   parentSchema.properties.liveCapture.type #> 1                                    array #>   parentSchema.properties.liveCapture.items.type #> 1                                  boolean, null #>   parentSchema.properties.liveCapture.items.minItems #> 1                                                  1 #>                                                                                                                        parentSchema.properties.hostLifeStage.description #> 1 The life stage of the animal from which the sample was collected (as appropriate for the organism) (e.g., juvenile, adult). See http://rs.tdwg.org/dwc/terms/lifeStage #>   parentSchema.properties.hostLifeStage.examples #> 1                         juvenile, adult, larva #>   parentSchema.properties.hostLifeStage.type #> 1                                      array #>   parentSchema.properties.hostLifeStage.items.type #> 1                                     string, null #>   parentSchema.properties.hostLifeStage.items.minItems #> 1                                                    1 #>                                                                                                           parentSchema.properties.age.description #> 1 The numeric age of the animal from which the sample was collected, at the time of sample collection, if known (e.g., in monitored populations). #>   parentSchema.properties.age.type parentSchema.properties.age.items.type #> 1                            array                           number, null #>   parentSchema.properties.age.items.minItems #> 1                                          1 #>   parentSchema.properties.age.items.minimum #> 1                                         0 #>          parentSchema.properties.ageUnits.description #> 1 The units in which age is measured (usually years). #>   parentSchema.properties.ageUnits.type #> 1                                 array #>   parentSchema.properties.ageUnits.items.type #> 1                                string, null #>        parentSchema.properties.ageUnits.items.enum #> 1 years, months, days, hours, minutes, seconds, NA #>   parentSchema.properties.ageUnits.items.minItems #> 1                                               1 #>                                                        parentSchema.properties.mass.description #> 1 The mass of the animal from which the sample was collected, at the time of sample collection. #>   parentSchema.properties.mass.type parentSchema.properties.mass.items.type #> 1                             array                            number, null #>   parentSchema.properties.mass.items.minItems #> 1                                           1 #>   parentSchema.properties.mass.items.minimum #> 1                                          0 #>    parentSchema.properties.massUnits.description #> 1 The units that mass is recorded in (e.g., kg). #>   parentSchema.properties.massUnits.examples #> 1             kg, g, mg, kilogram, milligram #>   parentSchema.properties.massUnits.type #> 1                                  array #>   parentSchema.properties.massUnits.items.type #> 1                                 string, null #>   parentSchema.properties.massUnits.items.minItems #> 1                                                1 #>                                                                parentSchema.properties.length.description #> 1 The numeric length of the animal from which the sample was collected, at the time of sample collection. #>   parentSchema.properties.length.type parentSchema.properties.length.items.type #> 1                               array                              number, null #>   parentSchema.properties.length.items.minItems #> 1                                             1 #>   parentSchema.properties.length.items.minimum #> 1                                            0 #>                                                                          parentSchema.properties.lengthMeasurement.description #> 1 The axis of measurement for the organism being measured (e.g., snout-vent length or just SVL; wing length; primary feather). #>          parentSchema.properties.lengthMeasurement.examples #> 1 snout-vent length, intertegular distance, primary feather #>   parentSchema.properties.lengthMeasurement.type #> 1                                          array #>   parentSchema.properties.lengthMeasurement.items.type #> 1                                         string, null #>   parentSchema.properties.lengthMeasurement.items.minItems #> 1                                                        1 #>        parentSchema.properties.lengthUnits.description #> 1 The units that length is recorded in (e.g., meters). #>   parentSchema.properties.lengthUnits.examples #> 1                           mm, meters, cm, km #>   parentSchema.properties.lengthUnits.type #> 1                                    array #>   parentSchema.properties.lengthUnits.items.type #> 1                                   string, null #>   parentSchema.properties.lengthUnits.items.minItems #> 1                                                  1 #>                                                             parentSchema.properties.organismQuantity.description #> 1 A number or enumeration value for the quantity of organisms. See http://rs.tdwg.org/dwc/terms/organismQuantity #>   parentSchema.properties.organismQuantity.examples #> 1                                    1.0, 1.4, 12.0 #>   parentSchema.properties.organismQuantity.type #> 1                                         array #>   parentSchema.properties.organismQuantity.items.type #> 1                                        number, null #>   parentSchema.properties.organismQuantity.items.minItems #> 1                                                       1 #>   parentSchema.properties.organismQuantity.items.minimum #> 1                                                      0 #>                                                                   parentSchema.properties.organismQuantityUnits.description #> 1 The units that organism quantity is recorded in (e.g. ‚Äúindividuals‚Äù). See http://rs.tdwg.org/dwc/iri/organismQuantityType #>   parentSchema.properties.organismQuantityUnits.examples #> 1              individual, biomass, Braun-Blanquet scale #>   parentSchema.properties.organismQuantityUnits.type #> 1                                              array #>   parentSchema.properties.organismQuantityUnits.items.type #> 1                                             string, null #>   parentSchema.properties.organismQuantityUnits.items.minItemsparentSchema.properties.detectionTarget.description #> 1 The taxonomic identity of the parasite being screened for in the sample. This will often be coarser than the identity of a specific parasite identified in the sample: for example, in a study screening for novel bat coronaviruses, the entire family Coronaviridae might be the target; in a parasite dissection, the targets might be Acanthocephala, Cestoda, Nematoda, and Trematoda. For deep sequencing approaches (e.g., metagenomic and metatranscriptomic viral discovery), researchers should report each alignment target used as a new test to maximize reporting of negative data, or alternatively, select a subset that reflect specific study objectives and the focus of analysis (e.g., specific viral families). See http://rs.tdwg.org/dwc/terms/associatedOccurrences #>   parentSchema.properties.detectionTarget.type #> 1                                        array #>   parentSchema.properties.detectionTarget.items.type #> 1                                       string, null #>   parentSchema.properties.detectionTarget.items.minItems #> 1                                                      1 #>                                                       parentSchema.properties.detectionMethod.description #> 1 The type of test performed to detect the parasite or parasite-specific antibody (e.g., 'qPCR', ‚ÄòELISA‚Äô) #>   parentSchema.properties.detectionMethod.type #> 1                                        array #>   parentSchema.properties.detectionMethod.items.type #> 1                                       string, null #>   parentSchema.properties.detectionMethod.items.minItems #> 1                                                      1 #>                                                                                                                               parentSchema.properties.forwardPrimerSequence.description #> 1 The sequence of the forward primer used for parasite detection (e.g., for a pan-coronavirus primer: 5‚Äô CDCAYGARTTYTGYTCNCARC 3'). (Strongly encouraged if applicable, e.g., for PCR.) #>   parentSchema.properties.forwardPrimerSequence.examples #> 1                            5‚Äô CDCAYGARTTYTGYTCNCARC 3' #>   parentSchema.properties.forwardPrimerSequence.type #> 1                                              array #>   parentSchema.properties.forwardPrimerSequence.items.type #> 1                                             string, null #>   parentSchema.properties.forwardPrimerSequence.items.minItems #> 1                                                            1 #>                                                                                               parentSchema.properties.reversePrimerSequence.description #> 1 The sequence of the reverse primer used for parasite detection (e.g., 5‚Äô RHGGRTANGCRTCWATDGC 3'). (Strongly encouraged if applicable, e.g., for PCR.) #>   parentSchema.properties.reversePrimerSequence.examples #> 1                              5‚Äô RHGGRTANGCRTCWATDGC 3' #>   parentSchema.properties.reversePrimerSequence.type #> 1                                              array #>   parentSchema.properties.reversePrimerSequence.items.type #> 1                                             string, null #>   parentSchema.properties.reversePrimerSequence.items.minItems #> 1                                                            1 #>                     parentSchema.properties.geneTarget.description #> 1 The parasite gene targeted by the primer (e.g. ‚ÄúRdRp‚Äù for PCR.). #>   parentSchema.properties.geneTarget.examples #> 1                                        RdRp #>   parentSchema.properties.geneTarget.type #> 1                                   array #>   parentSchema.properties.geneTarget.items.type #> 1                                  string, null #>   parentSchema.properties.geneTarget.items.minItems #> 1                                                 1 #>                                                   parentSchema.properties.primerCitation.description #> 1 Citation(s) for the primer(s) (ideally doi, or other permanent identifier for a work, e.g. PMID).  #>                                                                                                                                                                                                                                      parentSchema.properties.primerCitation.examples #> 1 https://doi.org/10.1016/j.virol.2007.06.009, Complete genome sequence of bat coronavirus HKU2 from Chinese horseshoe bats revealed a much smaller spike gene with a different evolutionary lineage from the rest of the genome, PMC7103351, https://openalex.org/works/w2036144053 #>   parentSchema.properties.primerCitation.type #> 1                                       array #>   parentSchema.properties.primerCitation.items.type #> 1                                      string, null #>   parentSchema.properties.primerCitation.items.minItems #> 1                                                     1 #>                                                     parentSchema.properties.probeTarget.description #> 1 Antibody or antigen targeted for detection. (Strongly encouraged if applicable, e.g., for ELISA.) #>   parentSchema.properties.probeTarget.type #> 1                                    array #>   parentSchema.properties.probeTarget.items.type #> 1                                   string, null #>   parentSchema.properties.probeTarget.items.minItems #> 1                                                  1 #>                                                   parentSchema.properties.probeType.description #> 1 Antibody or antigen used for detection. (Strongly encouraged if applicable, e.g., for ELISA.) #>   parentSchema.properties.probeType.type #> 1                                  array #>   parentSchema.properties.probeType.items.type #> 1                                 string, null #>   parentSchema.properties.probeType.items.minItems #> 1                                                1 #>                                                   parentSchema.properties.probeCitation.description #> 1 Citation(s) for the probe(s) (ideally doi, or other permanent identifier for a work, e.g. PMID).  #>   parentSchema.properties.probeCitation.type #> 1                                      array #>   parentSchema.properties.probeCitation.items.type #> 1                                     string, null #>   parentSchema.properties.probeCitation.items.minItems #> 1                                                    1 #>                                                                                                                                                   parentSchema.properties.detectionOutcome.description #> 1 The test result (i.e., positive, negative, or inconclusive). To avoid ambiguity, these specific values are suggested over numeric values (0 or 1). See http://rs.tdwg.org/dwc/terms/occurrenceStatus #>   parentSchema.properties.detectionOutcome.type #> 1                                         array #>   parentSchema.properties.detectionOutcome.items.type #> 1                                        string, null #>   parentSchema.properties.detectionOutcome.items.minItems #> 1                                                       1 #>                                                                                                             parentSchema.properties.detectionMeasurement.description #> 1 Any numeric measurement of parasite detection that is more detailed than simple positive or negative results (e.g., viral titer, parasite counts, sequence reads). #>   parentSchema.properties.detectionMeasurement.type #> 1                                             array #>   parentSchema.properties.detectionMeasurement.items.type #> 1                                            number, null #>   parentSchema.properties.detectionMeasurement.items.minItems #> 1                                                           1 #>                                                         parentSchema.properties.detectionMeasurementUnits.description #> 1 Units for quantitative measurements of parasite intensity or test results (e.g., Ct, TCID50/mL, or parasite count). #>   parentSchema.properties.detectionMeasurementUnits.examples #> 1                              Ct, TCID50/mL, parasite count #>   parentSchema.properties.detectionMeasurementUnits.type #> 1                                                  array #>   parentSchema.properties.detectionMeasurementUnits.items.type #> 1                                                 string, null #>   parentSchema.properties.detectionMeasurementUnits.items.minItems #> 1                                                                1 #>                                                                                                                                                                                                                                                                          parentSchema.properties.parasiteIdentification.description #> 1 The identity of a parasite detected by the test, if any, reported to the lowest possible taxonomic level, either as a Linnaean binomial classification or within the convention of a relevant taxonomic authority (e.g., Borrelia burgdorferi or Zika virus). Parasite identification may be more specific than detection target. #>   parentSchema.properties.parasiteIdentification.examples #> 1   Zika virus, Borrelia burgdorferi, Onchocerca volvulus #>   parentSchema.properties.parasiteIdentification.type #> 1                                               array #>   parentSchema.properties.parasiteIdentification.items.type #> 1                                              string, null #>   parentSchema.properties.parasiteIdentification.items.minItems #> 1                                                             1 #>                                                                                                                                                                                                parentSchema.properties.parasiteID.description #> 1 A researcher-generated unique ID for an individual parasite (primarily useful in nested cases where this ID is used as an animal ID in another row, such as pathogen  testing of a blood-feeding arthropod removed from a vertebrate host). #>   parentSchema.properties.parasiteID.examples #> 1                             001, TICK201923 #>   parentSchema.properties.parasiteID.type #> 1                                   array #>   parentSchema.properties.parasiteID.items.type #> 1                                  string, null #>   parentSchema.properties.parasiteID.items.minItems #> 1                                                 1 #>                                                                           parentSchema.properties.parasiteLifeStage.description #> 1 The life stage of the parasite from which the sample was collected (as appropriate for the organism) (e.g., juvenile, adult). #>   parentSchema.properties.parasiteLifeStage.examples #> 1                        juvenile, adult, sporozoite #>   parentSchema.properties.parasiteLifeStage.type #> 1                                          array #>   parentSchema.properties.parasiteLifeStage.items.type #> 1                                         string, null #>   parentSchema.properties.parasiteLifeStage.items.minItems #> 1                                                        1 #>                                                                                                                                                                                                                                                     parentSchema.properties.genbankAccession.description #> 1 The GenBank accession for any parasite genetic sequence(s), if appropriate.  Accession numbers or other identifiers for related data stored on another platform should be added in a different field (e.g. GISAID Accession, Immport Accession). See http://rs.tdwg.org/dwc/terms/otherCatalogNumbers  #>   parentSchema.properties.genbankAccession.examples #> 1                           U49845 | U49846, U11111 #>   parentSchema.properties.genbankAccession.type #> 1                                         array #>   parentSchema.properties.genbankAccession.items.type #> 1                                        string, null #>   parentSchema.properties.genbankAccession.items.minItems #> 1                                                       1 #>                                                                                                                                   parentSchema.required #> 1 sampleID, latitude, longitude, sampleCollectionMethod, hostIdentification, detectionTarget, detectionMethod, detectionOutcome, parasiteIdentification #>   parentSchema.dependentRequired.mass parentSchema.dependentRequired.length #> 1                           massUnits        lengthUnits, lengthMeasurement #>   parentSchema.dependentRequired.organismQuantity #> 1                           organismQuantityUnits #>   parentSchema.dependentRequired.detectionMeasurement          data.sampleID #> 1                           detectionMeasurementUnits OS BZ19-95, RS BZ19-95 #>        data.animalID    data.latitude     data.longitude data.collectionDay #> 1 BZ19-114, BZ19-114 17.7643, 17.7643 -88.6521, -88.6521             23, 23 #>   data.collectionMonth data.collectionYear data.collectionMethodAndOrTissue #> 1                 4, 4          2019, 2019           Oral swab, Rectal swab #>                data.hostIdentification data.organismSex data.deadOrAlive #> 1 Desmodus rotundus, Desmodus rotundus       male, male     alive, alive #>   data.hostLifeStage    data.mass data.massUnits         data.detectionTarget #> 1 subadult, subadult 0.023, 0.023         kg, kg Coronaviridae, Coronaviridae #>               data.detectionMethod data.primerSequence #> 1 semi-nested PCR, semi-nested PCR          RdRp, RdRp #>                          data.primerCitation data.detectionOutcome #> 1 doi:10.3390/v9120364, doi:10.3390/v9120364    positive, negative #>   data.parasiteIdentification data.genBankAccession dataPath #> 1        Alphacoronavirus, NA          OM240578, NA"},{"path":"https://viralemergence.github.io/wddsWizard/articles/extending_wdds.html","id":"why-extend-the-standard","dir":"Articles","previous_headings":"","what":"Why extend the standard?","title":"Extending the Wildlife Disease Data Standard","text":"Since standard allows additional properties, extend standard ? extend standard help document additional properties ensure data valid. clearly formally describing additional properties json schema file, future users (likely ) better understanding values additional fields easier interpret data. Furthermore, data validated, users won‚Äôt find unexpected values fields (e.g.¬†field described schema values ‚Äú‚Äù, ‚ÄúB‚Äù, ‚ÄúC‚Äù also contain values ‚Äú‚Äù, ‚Äúb‚Äù, ‚Äú42‚Äù). Finally, extending modifying standard, validation code can found one place. makes easier understand corrections made data easier maintain code. extending data standard, ‚Äôre also demonstrating WDDS community additional properties value making easier argue inclusion property official WDDS schema.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/articles/extending_wdds.html","id":"before-you-extend-the-standard-review-it-","dir":"Articles","previous_headings":"","what":"Before you extend the standard, review it.","title":"Extending the Wildlife Disease Data Standard","text":"extending standard, make sure data elements plan add aren‚Äôt already included standard. terms standard broad design encourage use. narrow term fits broader term already data standard, consider modifying existing item. think term added standard questions term, consider opening issue WDDS github repo.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/articles/extending_wdds.html","id":"extending-the-disease-data-component","dir":"Articles","previous_headings":"","what":"Extending the Disease Data component","title":"Extending the Wildlife Disease Data Standard","text":"Lets pretend studying vertical transmission Orthoflaviviruses mosquitoes. Since disease data tabular, extending part standard straight forward. First, create copy wdds schema modify. Lets take look hostLifeStage property. accepts either string null values. extremely broad. study, use specific terms describe host life stages want make sure using terms. can modify part standard specific, still compliant original WDDS standard. can use enum keyword list specific values. classify larva first, second, third instar enumerate values JSON schema. using set enumerated string values, can ensure data hostLifeStage contain values first instar, second instar, third instar null. Since collecting wild mosquito larvae, may want include information trapping protocols validate field using JSON schema. reviewing terms, confirm specific term host organism collection method. can look equivalent term one trusted resources. case, might use darwincore term samplingProtocol: http://rs.tdwg.org/dwc/terms/samplingProtocol. can add new term genbankAccession JSON schema file. now schema compliant WDDS better job validating data project.","code":"# copy the schemas folder into a new place  wdds_json(version = \"latest\",\"wdds_schema.json\") |>   fs::path_dir()|>   fs::dir_copy(new_path = \"modified_schemas\")    file.edit(\"modified_schemas/schemas/disease_data.json\") \"hostLifeStage\":{             \"description\":\"The life stage of the animal from which the sample was collected (as appropriate for the organism) (e.g., juvenile, adult). See http://rs.tdwg.org/dwc/terms/lifeStage\",             \"examples\":[\"juvenile\",\"adult\",\"larva\"],             \"type\":\"array\",             \"items\":{               \"type\": [\"string\",\"null\"],               \"minItems\":1             }           } \"hostLifeStage\":{             \"description\":\"The life stage of the animal from which the sample was collected (as appropriate for the organism) (e.g., juvenile, adult). See http://rs.tdwg.org/dwc/terms/lifeStage\",             \"examples\":[\"juvenile\",\"adult\",\"larva\"],             \"type\":\"array\",             \"items\":{               \"type\": [\"string\",\"null\"],               \"enum\": [\"first instar\",\"second instar\",\"third instar\",\"null\"],               \"minItems\":1             }           } \"genbankAccession\":{             \"description\":\"The GenBank accession for any parasite genetic sequence(s), if appropriate.  Accession numbers or other identifiers for related data stored on another platform should be added in a different field (e.g. GISAID Accession, Immport Accession). See http://rs.tdwg.org/dwc/terms/otherCatalogNumbers \",             \"examples\":[\"U49845 | U49846\",\"U11111\"],             \"type\":\"array\",             \"items\":{               \"type\": [\"string\",\"null\"],               \"minItems\":1             }           },           \"samplingProtocol\":{             \"description\":\"The names of the methods used during a larval collection event. See http://rs.tdwg.org/dwc/terms/samplingProtocol. Protocol names from European Centre for Disease Prevention and Control; European Food Safety Authority. Field sampling methods for mosquitoes, sandflies, biting midges and ticks ‚Äì VectorNet project 2014‚Äì2018. Stockholm and Parma: ECDC and EFSA; 2018.\",             \"type\":\"array\",             \"items\":{               \"type\": [\"string\",\"null\"],               \"enum\": [\"complete submersion\",\"flow-in\",\"simple ladle\",\"null\"]\"],               \"minItems\":1             }           }"},{"path":"https://viralemergence.github.io/wddsWizard/articles/extending_wdds.html","id":"extending-the-project-metadata-component","dir":"Articles","previous_headings":"","what":"Extending the Project Metadata Component","title":"Extending the Wildlife Disease Data Standard","text":"Lets say part study sequenced viral material FASTA files like bundle disease data CSV deposit. give humans machines heads kinds file formats expect, can include datacite term formats. look datacite JSON Schema already included WDDS schema, can see formats looks like : array unique string values e.g.¬†[\"CSV\",\"FASTA\",\"JSON\"]. , confirm property already listed project metadata modify JSON schema file. Just like added samplingProtocol property, stick formats property end properties list. use $ref reference datacite schema file reuse formats property. Unlike disease data component schema, may need little work get data properly formatted prior validation. extend prep_methods list.","code":"\"formats\": {             \"type\": \"array\",             \"items\": {                 \"type\": \"string\"             },             \"uniqueItems\": true         } file.edit(\"modified_schemas/project_metadata.json\") \"relatedIdentifiers\":{           \"$ref\":\"datacite/datacite-v4.5.json#/properties/relatedIdentifiers\"         }, \"formats\":{           \"$ref\":\"datacite/datacite-v4.5.json#/properties/formats\" } # generate_metadata_csv(\"test_metadata.csv\",event_based = FALSE,archival = FALSE,num_creators = 1,num_titles = 1,identifier = \"hello.doi\",identifier_type = \"DOI\",num_subjects = 1,publication_year = \"2025\",rights = spdx_licenses$licenseId[129],language = \"en\",num_descriptions = 1,num_fundingReferences = 1,num_related_identifiers = 1,write_output = TRUE)  proj_metadata_df <- read.csv(file = \"test_metadata.csv\",row.names =NULL)  prep_methods_list <- prep_methods()  prep_methods_list$formats <- prep_array  schema_modified <- schema_obj$new(schema_path = \"modified_schemas/wdds_schema.json\", wdds_version = \"latest\")  schema_modified <- schema_modified$create_schema_list()  schema_properties_modified <- schema_modified |>   purrr::list_rbind() |>   dplyr::distinct_all() |>   dplyr::mutate(     is_array = dplyr::case_when(       stringr::str_detect(type, pattern = \"array\") ~ TRUE,       TRUE ~ FALSE     ),     is_object = dplyr::case_when(       stringr::str_detect(type, pattern = \"object\") ~ TRUE,       TRUE ~ FALSE     )   )   prepped_metadata <- prep_from_metadata_template(proj_metadata_df,prep_methods_list = prep_methods_list,schema_properties = schema_properties_modified, json_prep = TRUE)  jsonlite::toJSON(prepped_metadata,pretty = TRUE)"},{"path":"https://viralemergence.github.io/wddsWizard/articles/extending_wdds.html","id":"validate-with-your-extended-schema","dir":"Articles","previous_headings":"","what":"Validate with your extended schema","title":"Extending the Wildlife Disease Data Standard","text":"","code":"project_metadata_json<- jsonlite::toJSON(prepped_metadata,pretty = TRUE)  project_validator <- jsonvalidate::json_validator(\"modified_schemas/schemas/project_metadata.json\", engine = \"ajv\")  project_validation <- project_validator(project_metadata_json, verbose = TRUE)  ## check for errors!  errors <- attributes(project_validation)  if (!project_validation) {   errors$errors } else {   print(\"Valid project metadata!üòÅ\") }"},{"path":"https://viralemergence.github.io/wddsWizard/articles/extending_wdds.html","id":"how-to-communicate-your-changes","dir":"Articles","previous_headings":"","what":"How to communicate your changes?","title":"Extending the Wildlife Disease Data Standard","text":"now ‚Äôve made changes WDDS data standard, let people know version WDDS different standard version? Modify wdds_schema.json file. 1. Add dev id semantic version title. Since interested larval lifestages, going call v1.0.4-instar. 2. Update description reflect changes made. sure note data still valid unmodified version WDDS. Second, include modified JSON schema files deposit. can include files directly archived materials link related identifiers section project metadata. Finally, used controlled vocabularies enumerate fields borrowed properties metadata standards, include related identifiers project metadata.","code":"{   \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",   \"title\": \"Wildlife Disease Data Standard v1.0.4-instar\",   \"description\":\"Flexible data standard for wildlife disease data. This version of the schema has been modified in the following ways: added the property samplingProtocol from the DarwinCore schema and the property formats from the Datacite schema, and enumerated values for hostLifeStage. These changes increase the specificity of the standard without violating rules for required or suggested fields, there any data that meets this version of the standard should also be valid under v1.0.4.\",   \"type\": \"object\",   \"properties\": {     \"disease_data\":{       \"description\":\"Wildlife disease data. Stored in tidy form.\",       \"$ref\":\"schemas/disease_data.json\"     },     \"project_metadata\":{       \"description\":\"Metadata for a project that largely follows the Datacite data standard.\",       \"$ref\":\"schemas/project_metadata.json\"     }   },     \"required\":[\"disease_data\",\"project_metadata\"] }"},{"path":"https://viralemergence.github.io/wddsWizard/articles/project_metadata.html","id":"required-fields","dir":"Articles","previous_headings":"","what":"Required fields","title":"Project Metadata","text":"following fields required data.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/articles/project_metadata.html","id":"load-in-the-csv-and-clean-it-up","dir":"Articles","previous_headings":"","what":"Load in the CSV and clean it up","title":"Project Metadata","text":"example data requires light cleaning make transforming csv easier.","code":"project_metadata <- wdds_example_data(version = \"latest\", file = \"example_project_metadata.csv\") |> read.csv()  ## turn empty strings into NAs in the group field project_metadata <- project_metadata |>   dplyr::mutate(Group = dplyr::case_when(     Group != \"\" ~ Group,     TRUE ~ NA   ))  ## use `fill` to complete the items column and `mutate` to make groups a little ## more ergonomic  project_metadata_filled <- tidyr::fill(data = project_metadata, Group)"},{"path":"https://viralemergence.github.io/wddsWizard/articles/project_metadata.html","id":"restructure-data","dir":"Articles","previous_headings":"","what":"Restructure data","title":"Project Metadata","text":"validation schema expecting JSON, restructure data list can converted JSON. Creators, Resources, Funding References, possible multiple entities group. example data, two creators three funding references. need pull entity_ids creators funding references clean Group field can used general category Creators, Resources, Funding References.","code":"# get ids for components of a group. project_metadata_ids <- project_metadata_filled |>   dplyr::mutate(     entity_id = stringr::str_extract(string = Group, pattern = \"[0-9]{1,}\"),     # make sure that there are no NA entity IDs     entity_id = dplyr::case_when(       is.na(entity_id) ~ \"1\",       TRUE ~ entity_id     )   ) |>   # drop entity ids from group field and convert to camel case   dplyr::mutate(     Group = stringr::str_replace_all(string = Group, pattern = \" [0-9]{1,}\", replacement = \"\"),     Group = snakecase::to_lower_camel_case(Group)   )  ## split dataframe by Group for further processing  project_metadata_list <- split(project_metadata_ids, project_metadata_ids$Group)   # The `get_entity` function creates standard entities that will be easier to transform json  project_metadata_list_entities <- purrr::map(project_metadata_list, function(x) {      x_typed <- dplyr::left_join(x, wddsWizard::schema_properties, by = c(\"Group\" = \"name\")) |>         dplyr::mutate(to_split = dplyr::case_when(           is_array ~ TRUE,           TRUE ~ FALSE         ))        if (all(!x_typed$to_split)) {         out <- get_entity(x)         return(out)       }   #    # if (all(x$entity_id == \"1\")) {   #   out <- get_entity(x)   #   return(out)   # }    x_list <- split(x, x$entity_id)   names(x_list) <- NULL   out <- purrr::map(x_list, get_entity)   return(out) }) #> Warning in dplyr::left_join(x, wddsWizard::schema_properties, by = c(Group = \"name\")): Detected an unexpected many-to-many relationship between `x` and `y`. #> ‚Ñπ Row 1 of `x` matches multiple rows in `y`. #> ‚Ñπ Row 51 of `y` matches multiple rows in `x`. #> ‚Ñπ If a many-to-many relationship is expected, set `relationship = #>   \"many-to-many\"` to silence this warning."},{"path":"https://viralemergence.github.io/wddsWizard/articles/project_metadata.html","id":"make-the-json","dir":"Articles","previous_headings":"","what":"Make the json!","title":"Project Metadata","text":"simpler world - just run following code work. datacite‚Äôs structures complex, need prep. Luckily, host prep functions already exist package! mostly tag list items jsonlite::unbox /wrap things lists converted json, match data standard‚Äôs expected formats.","code":"## if only, if only the mockingbird sings jsonlite::toJSON(project_metadata_list_entities, pretty = TRUE, dataframe = \"columns\") project_metadata_json <- prep_for_json(project_metadata_list_entities) |>   jsonlite::toJSON(pretty = TRUE)"},{"path":"https://viralemergence.github.io/wddsWizard/articles/project_metadata.html","id":"validate-project-metadata","dir":"Articles","previous_headings":"","what":"Validate Project metadata","title":"Project Metadata","text":"can validate entire project metadata object using project_metadata.json schema.","code":"schema <- wdds_json(version = \"latest\", file = \"schemas/project_metadata.json\")  project_validator <- jsonvalidate::json_validator(schema, engine = \"ajv\")  project_validation <- project_validator(project_metadata_json, verbose = TRUE)  ## check for errors!  errors <- attributes(project_validation)  if (!project_validation) {   errors$errors } else {   print(\"Valid project metadata!üòÅ\") } #> [1] \"Valid project metadata!üòÅ\""},{"path":"https://viralemergence.github.io/wddsWizard/articles/project_metadata.html","id":"what-if-we-just-use-the-project-metadata-template","dir":"Articles","previous_headings":"","what":"What if we just use the project metadata template?","title":"Project Metadata","text":"Great question! use project metadata template, can following.","code":"project_metadata <- wdds_example_data(version = \"latest\", file = \"example_project_metadata.csv\") |> read.csv()  project_metadata_prepped <- prep_from_metadata_template(project_metadata) |>   jsonlite::toJSON(pretty = TRUE)"},{"path":"https://viralemergence.github.io/wddsWizard/articles/schema_overview.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Schema Overview","text":"document provides background information data standards, json-schemas general structure Wildlife Disease Data standard specifically. WDDS focused making easy store disease data consistent FAIR format.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/articles/schema_overview.html","id":"what-is-a-json-schema","dir":"Articles","previous_headings":"Summary","what":"What is a JSON-schema","title":"Schema Overview","text":"JSON-schema human machine readable document defines data standard describing structure, properties, constraints dataset. us accustomed thinking spreadsheet files data frames, property roughly equivalent field column. JSON-schema defines rules around type data used particular property (character, numeric, logical, etc), values (e.g.¬†massUnits must one kg, mg, g; latitude must -90 90; sampleID must unique). schema also describes fields combined coherent whole (.e.¬†structure dataset). JSON-schema, fields can parent child relationships. field may schema. example, data property standard defines data object flat table constraints, types, /requirements. way, JSON-schema allows construction modular schema documents can leverage existing schemas (e.g.¬†darwin core, datacite). created schema, can validate data . validation process happens via validation engine tells us data conform standard. data conform, validation engine tells us precisely data non-conformant data standard expected see. detailed information see JSON-Schema.org","code":""},{"path":"https://viralemergence.github.io/wddsWizard/articles/schema_overview.html","id":"wildlife-disease-data-standard-wdds-structure","dir":"Articles","previous_headings":"","what":"Wildlife Disease Data Standard (WDDS) Structure","title":"Schema Overview","text":"Wildlife Disease Data Standard composed two sub-schemas (1) disease_data (2) project_metadata. disease_data describes structure contents wildlife disease data. certain required fields extensible. data stored tidy dataset flat file like CSV. component standard relies heavily Darwin Core data standard. project_metadata describes structure contents descriptive metadata. , metadata project enables discovery, identification, attribution. component standard relies heavily Data Cite Metadata Schema. Researchers may validate data sub-schema separately, use tandem validate entire data package. term ‚Äúdata package‚Äù refers list JSON object contains disease_data project_metadata components.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/articles/schema_overview.html","id":"important-vocabulary","dir":"Articles","previous_headings":"","what":"Important vocabulary","title":"Schema Overview","text":"Property: synonymous field column table. property corresponds particular attribute (e.g.¬†age, collectedBy, latitude, etc) data.Required: property must included given schema object within schema.Type: Type data. Common values include array, object, string, number, integer, null, boolean.Array: comma separated group values. Similar vector R little flexible.Array Items: Array items define acceptable values array. - minItems - many items must present array - minimum - inclusive - smallest value allowed array - maximum - inclusive - largest value allowed array - enum - controlled vocabulary array","code":""},{"path":"https://viralemergence.github.io/wddsWizard/articles/schema_overview.html","id":"best-practices-for-free-text-fields","dir":"Articles","previous_headings":"","what":"Best practices for free text fields","title":"Schema Overview","text":"recommend data producers use controlled vocabularies ontologies filling free text fields. recognize selecting appropriate vocabulary can challenging recommend following platforms finding appropriate terms. Recommended ontology hosting search platforms distinct funding sources. Name | URL ‚Äì | ‚Äì Ontobee | https://ontobee.org/ Ontology Lookup Service | https://www.ebi.ac.uk/ols4/ BioPortal | https://bioportal.bioontology.org/ three platforms allow users search terms stored ontologies, explore relationships terms, find analogues. user explore given ontology find appropriate term. Table S2 list specific ontologies authorities may appropriate given field. Recommended ontologies authorities specific fields. Field | URL ‚Äì | ‚Äì Host Identification | https://www.gbif.org/species/search Gene Target | https://www.ebi.ac.uk/ols4/ontologies/go Sample Collection Method | http://purl.obolibrary.org/obo/OBI_0000659 Sample Collection Body Part | https://www.ebi.ac.uk/ols4/ontologies/uberon Sample Collection Material | http://purl.obolibrary.org/obo/OBI_0001479","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/articles/schema_overview.html","id":"disease_data","dir":"Articles","previous_headings":"","what":"disease_data","title":"Schema Overview","text":"Type: objectDescription: REQUIRED Wildlife disease data. Stored tidy form.Required Fields: sampleID, latitude, longitude, sampleCollectionMethod, hostIdentification, detectionTarget, detectionMethod, detectionOutcome, parasiteIdentificationReference: schemas/disease_data.json type: string, null minItems: 1 type: string, null minItems: 1 type: number, null minItems: 1 maximum: 90 minimum: -90 type: number, null minItems: 1 maximum: 180 minimum: -180 type: number, null minItems: 1 minimum: 0 type: integer, null minItems: 1 minimum: 1 maximum: 31 type: integer, null minItems: 1 minimum: 1 maximum: 12 type: integer, null type: string minItems: 1 type: string, null minItems: 1 type: string, null minItems: 1 type: string, null minItems: 1 : [HOMOhomo]{4} [SAPIENSsapiens]{7} type: string, null minItems: 1 type: boolean, null minItems: 1 type: string, null minItems: 1 type: number, null minItems: 1 minimum: 0 type: string, null enum: years, months, days, hours, minutes, seconds minItems: 1 type: number, null minItems: 1 minimum: 0 type: string, null minItems: 1 type: number, null minItems: 1 minimum: 0 type: string, null minItems: 1 type: string, null minItems: 1 type: number, null minItems: 1 minimum: 0 type: string, null minItems: 1 type: string, null minItems: 1 type: string, null minItems: 1 type: string, null minItems: 1 type: string, null minItems: 1 type: string, null minItems: 1 type: string, null minItems: 1 type: string, null minItems: 1 type: string, null minItems: 1 type: string, null minItems: 1 type: string, null minItems: 1 type: number, null minItems: 1 type: string, null minItems: 1 type: string, null minItems: 1 type: string, null minItems: 1 type: string, null minItems: 1 type: string, null minItems: 1","code":""},{"path":"https://viralemergence.github.io/wddsWizard/articles/schema_overview.html","id":"project_metadata","dir":"Articles","previous_headings":"","what":"project_metadata","title":"Schema Overview","text":"Type: objectDescription: REQUIRED Metadata project largely follows Datacite data standard.Required Fields: methodology, creators, titles, publicationYear, language, descriptions, fundingReferencesReference: schemas/project_metadata.json Type: objectDescription: REQUIRED broad categorization data collected.Properties: eventBased Type: booleanDescription: Whether research conducted response known suspected infectious disease outbreak, observed animal morbidity mortality, etc. archival Type: booleanDescription: Whether samples archival source (e.g., museum collections, biobanks). Type: arrayDescription: REQUIRED full names creators. format familyName, givenName.Array Items Type: stringDescription: REQUIRED DataCite name Type: stringDescription: DataCite nameType Type: stringDescription: DataCite givenName Type: stringDescription: DataCite familyName Type: arrayDescription: DataCite nameIdentifiersArray Items nameIdentifier Type: stringDescription: REQUIRED DataCite nameIdentifier nameIdentifierScheme Type: stringDescription: REQUIRED DataCite nameIdentifierScheme schemeUri Type: stringDescription: DataCite schemeUri Type: arrayDescription: DataCite affiliationArray Items name Type: stringDescription: REQUIRED DataCite name affiliationIdentifier Type: stringDescription: DataCite affiliationIdentifier affiliationIdentifierScheme Type: stringDescription: DataCite affiliationIdentifierScheme schemeUri Type: stringDescription: DataCite schemeUri Type: stringDescription: DataCite lang Type: arrayDescription: REQUIRED name title resource known.Array Items title Type: stringDescription: REQUIRED DataCite title titleType Type: stringDescription: DataCite titleType lang Type: stringDescription: DataCite lang Type: arrayDescription: unique string identifies resource.Array Items identifier Type: stringDescription: REQUIRED DataCite identifier identifierType Type: stringDescription: DataCite identifierType Type: arrayDescription: Subject, keyword, classification code, key phrase describing resource.Array Items subject Type: stringDescription: REQUIRED DataCite subject subjectScheme Type: stringDescription: DataCite subjectScheme schemeUri Type: stringDescription: DataCite schemeUri valueUri Type: stringDescription: DataCite valueUri classificationCode Type: stringDescription: DataCite classificationCode lang Type: stringDescription: DataCite lang Type: stringDescription: REQUIRED year data made publicly available. Type: arrayDescription: rights information resource.Array Items rights Type: stringDescription: DataCite rights rightsUri Type: stringDescription: DataCite rightsUri rightsIdentifier Type: stringDescription: DataCite rightsIdentifier rightsIdentifierScheme Type: stringDescription: DataCite rightsIdentifierScheme schemeUri Type: stringDescription: DataCite schemeUri lang Type: stringDescription: DataCite lang Type: arrayDescription: REQUIRED additional information fit categories. May used technical information detailed information associated scientific instrument.Array Items description Type: stringDescription: REQUIRED DataCite description descriptionType Type: stringDescription: REQUIRED DataCite descriptionType lang Type: stringDescription: DataCite lang Type: stringDescription: REQUIRED primary language resource. Type: arrayDescription: REQUIRED Name identifying information funding provider.Array Items funderName Type: stringDescription: REQUIRED DataCite funderName funderIdentifier Type: stringDescription: DataCite funderIdentifier funderIdentifierType Type: stringDescription: DataCite funderIdentifierType awardNumber Type: stringDescription: DataCite awardNumber awardUri Type: stringDescription: DataCite awardUri awardTitle Type: stringDescription: DataCite awardTitle Type: arrayDescription: DataCite relatedIdentifiersArray Items Type: stringDescription: REQUIRED DataCite relationType Type: stringDescription: DataCite relatedMetadataScheme Type: stringDescription: DataCite schemeUri Type: stringDescription: DataCite schemeType Type: stringDescription: DataCite resourceTypeGeneral Type: stringDescription: REQUIRED DataCite relatedIdentifier Type: stringDescription: REQUIRED DataCite relatedIdentifierType","code":""},{"path":"https://viralemergence.github.io/wddsWizard/articles/wddsWizard.html","id":"the-whole-game","dir":"Articles","previous_headings":"","what":"The Whole game","title":"Getting Started","text":"Flat data files (csv/xlsx) imported R, lightly restructured, converted JSON validated Wildlife Disease Data Standard. Data sets either pass (üéâ) fail informative errors.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/articles/wddsWizard.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting Started","title":"Getting Started","text":"data standard designed flexible accessible. composed two components: disease data project metadata. disease data component describes contents structure data related detection () parasite given host. project metadata component describes contents structure data related creation disease data component. disease data component allows us create collection datasets can re-used, aggregated, shared, project metadata component provides context data, makes easier find dataset, gives clear information attribution use (rights/license). Using package, can validate one components data standard. helpful open Data Standard Terms separate browser tab go vignette explore templates. use templates provided, can focus field descriptions largely ignore types array items.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/articles/wddsWizard.html","id":"templates","dir":"Articles","previous_headings":"Getting Started","what":"Templates","title":"Getting Started","text":"created several templates make easier get started using Wildlife Disease Data Standard. can make copies template files use_wdds_template function. templates may contain additional fields strictly required. Required fields clearly marked Data Standard Terms documentation. following fields required disease data: following fields required project metadata:","code":"# list templates use_wdds_template() #> ‚Ñπ Provide a value to `template_file` to use the template #> [1] \"disease_data_template.csv\"     \"disease_data_template.xlsx\"    #> [3] \"project_metadata_template.csv\" use_wdds_template(\"disease_data_template.csv\", file_name = \"my_interesting_disease_data.csv\", open = TRUE)  use_wdds_template(\"project_metadata_template.csv\", file_name = \"my_project_metadata.csv\", open = TRUE) wddsWizard::disease_data_required_fields #> [1] \"sampleID\"               \"latitude\"               \"longitude\"              #> [4] \"sampleCollectionMethod\" \"hostIdentification\"     \"detectionTarget\"        #> [7] \"detectionMethod\"        \"detectionOutcome\"       \"parasiteIdentification\" wddsWizard::project_metadata_required_fields #> [1] \"methodology\"       \"creators\"          \"titles\"            #> [4] \"publicationYear\"   \"language\"          \"descriptions\"      #> [7] \"fundingReferences\""},{"path":"https://viralemergence.github.io/wddsWizard/articles/wddsWizard.html","id":"disease-data","dir":"Articles","previous_headings":"Getting Started","what":"Disease Data","title":"Getting Started","text":"Disease data expected ‚Äútidy‚Äù form (think CSV XLS row observation column property). column table part standard validated. may include additional columns needed. Disease data project metadata can validated separately. code read csv file, light wrangling, transform data JSON, validate data.","code":"## read in the data my_disease_data <- wdds_example_data(version = \"latest\", file = \"my_interesting_disease_data.csv\") |>   read.csv()  # clean up field names to match JSON schema my_disease_data <- clean_field_names(my_disease_data)  ### Check for required Fields -  # check that all required fields are in the data all(wddsWizard::disease_data_required_fields %in% names(my_disease_data)) #> [1] TRUE  ## Prep for JSON  my_disease_data_prepped <- prep_data(my_disease_data)  ## make the JSON! my_disease_data_json <- my_disease_data_prepped |>   jsonlite::toJSON(pretty = TRUE)  ### validate the JSON  # get the schema file schema <- wdds_json(version = \"latest\", file = \"schemas/disease_data.json\")  # this creates a function that we can use to validate our data dd_validator <- jsonvalidate::json_validator(schema, engine = \"ajv\")  # use the validator to check if the disease data conforms to the disease_data component of the standard dd_validation <- dd_validator(my_disease_data_json, verbose = TRUE)  ## check for errors!  errors <- attributes(dd_validation)  if (!dd_validation) {   errors$errors } else {   print(\"Valid disease data!üòÅ\") } #> [1] \"Valid disease data!üòÅ\""},{"path":"https://viralemergence.github.io/wddsWizard/articles/wddsWizard.html","id":"project-metadata","dir":"Articles","previous_headings":"Getting Started","what":"Project Metadata","title":"Getting Started","text":"Project metadata largely follow Datacite Metadata Schema. , data standard allows include additional properties. Note comfortable JSON, may easier write project metadata directly JSON. example , use project metadata created project metadata template create JSON can validated project metadata component data standard. See vignettes Project Metadata Wildlife Disease Data details preparing components.","code":"# read in project metadata created from template  my_project_metadata <- wdds_example_data(version = \"latest\", file = \"my_project_metadata.csv\") |>   read.csv()  # prepare project metadata my_project_metadata_prepped <- prep_from_metadata_template(my_project_metadata)   # check that all required fields are in the project metadata all(wddsWizard::project_metadata_required_fields %in% names(my_project_metadata_prepped)) #> [1] TRUE  # convert to json  my_project_metadata_json <- my_project_metadata_prepped |>   jsonlite::toJSON(pretty = TRUE)  # validate against project metadata schema  schema <- wdds_json(version = \"latest\", file = \"schemas/project_metadata.json\")  pm_validator <- jsonvalidate::json_validator(schema, engine = \"ajv\")  pm_validation <- pm_validator(my_project_metadata_json, verbose = TRUE)  ## check for errors!  errors <- attributes(pm_validation)  if (!pm_validation) {   errors$errors } else {   print(\"Valid project metadata!üòÅ\") } #> [1] \"Valid project metadata!üòÅ\""},{"path":"https://viralemergence.github.io/wddsWizard/articles/wddsWizard.html","id":"combine-disease-data-and-project-metadata","dir":"Articles","previous_headings":"","what":"Combine disease data and project metadata","title":"Getting Started","text":"Finally check disease data project metadata standard.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/articles/wddsWizard.html","id":"combine-components","dir":"Articles","previous_headings":"Combine disease data and project metadata","what":"Combine components","title":"Getting Started","text":"first thing combine disease data project metadata components list check required fields.","code":"## use append so that you do not add levels to your list  data_package <- list(   disease_data = my_disease_data_prepped,   project_metadata = my_project_metadata_prepped )  # check that all required fields are in the data  req_field_check <- wddsWizard::schema_required_fields %in% names(data_package)  if (all(!req_field_check)) {   wddsWizard::schema_required_fields[!req_field_check] } else {   print(\"all required fields present ü•≥\") } #> [1] \"all required fields present ü•≥\""},{"path":"https://viralemergence.github.io/wddsWizard/articles/wddsWizard.html","id":"make-json","dir":"Articles","previous_headings":"Combine disease data and project metadata","what":"Make JSON","title":"Getting Started","text":"Next convert data_package can validated.","code":"# convert to json  data_package_json <- jsonlite::toJSON(data_package, pretty = TRUE)"},{"path":"https://viralemergence.github.io/wddsWizard/articles/wddsWizard.html","id":"validate-your-json","dir":"Articles","previous_headings":"Combine disease data and project metadata","what":"Validate your json!","title":"Getting Started","text":"use {jsonvalidate} package make sure data_package_json conforms wildlife disease data standard.","code":"schema <- wdds_json(version = \"latest\", file = \"wdds_schema.json\")  wdds_validator <- jsonvalidate::json_validator(schema, engine = \"ajv\")  project_validation <- wdds_validator(data_package_json, verbose = TRUE)  if (project_validation) {   print(\"Your data package is valid! üéä \") } else {   errors <- attributes(project_validation)   errors$errors } #> [1] \"Your data package is valid! üéä \""},{"path":"https://viralemergence.github.io/wddsWizard/articles/wddsWizard.html","id":"handling-errors","dir":"Articles","previous_headings":"Combine disease data and project metadata","what":"Handling Errors","title":"Getting Started","text":"‚Äôre likely going get errors interpretting can sometimes challenge. Lets dive modifying data_package create known issue. Looking data standard, can see language type: string. new version language array objects - square braces[] = array, curly braces {} = object. definitely type string. lets see happens go validate metadata.","code":"# the properly formatted language property should like this: data_package$project_metadata[\"language\"]|>jsonlite::toJSON(pretty = TRUE) #> { #>   \"language\": \"en\" #> } # lets make language a multi-row data frame data_package_error_lang <- data_package  data_package_error_lang$project_metadata$language <- data.frame(language = c(\"en\",\"fr\",\"cn\"))   jsonlite::toJSON(data_package_error_lang$project_metadata[\"language\"], pretty = TRUE)  #> { #>   \"language\": [ #>     { #>       \"language\": \"en\" #>     }, #>     { #>       \"language\": \"fr\" #>     }, #>     { #>       \"language\": \"cn\" #>     } #>   ] #> } data_package_error_lang_json <- jsonlite::toJSON(data_package_error_lang)  lang_issue <- wdds_validator(data_package_error_lang_json, verbose = TRUE)  errors_df <- attributes(lang_issue)$errors  errors_df #>                 instancePath #> 1 /project_metadata/language #>                                              schemaPath keyword   type #> 1 datacite/datacite-v4.5.json#/properties/language/type    type string #>          message schema parentSchema.type #> 1 must be string string            string #>                                                                                     parentSchema.$comment #> 1 Primary language of the resource. Allowed values are taken from  IETF BCP 47, ISO 639-1 language codes. #>         data                   dataPath #> 1 en, fr, cn /project_metadata/language"},{"path":"https://viralemergence.github.io/wddsWizard/articles/wddsWizard.html","id":"excuse-me-what-does-this-mean","dir":"Articles","previous_headings":"Combine disease data and project metadata","what":"Excuse me? What does this mean?","title":"Getting Started","text":"instancePath = schema find error? schemaPath = property come ? keyword = kind violation occurred? message = went wrong? params = parameters property schema? schema = property? parentSchema = type description schemaPath data = violating item provided dataPath = violation occur? interpret error really helpful start looking instancePath, keyword, message. OH project metadata must type string! notice tell interpreted object. can figure converting errors_df$data json. obviously string!","code":"errors_df[c(\"instancePath\",\"keyword\",\"message\")] #>                 instancePath keyword        message #> 1 /project_metadata/language    type must be string errors_df$data[[1]] |> jsonlite::toJSON(pretty = TRUE) #> [ #>   { #>     \"language\": \"en\" #>   }, #>   { #>     \"language\": \"fr\" #>   }, #>   { #>     \"language\": \"cn\" #>   } #> ]"},{"path":"https://viralemergence.github.io/wddsWizard/articles/wddsWizard.html","id":"how-do-i-correct-this-error","dir":"Articles","previous_headings":"Combine disease data and project metadata","what":"How do I correct this error?","title":"Getting Started","text":"Since work multi-lingual, might think c(\"en\",\"fr\",\"cn\") appropriate converted array JSON. lets try just \"en, fr, cn\" see works Yes ! take peek json object can see string converted array \"language\": [\"en, fr, cn\"]. ? jsonlite errors side wrapping things arrays. Thankfully authors package provided methods preparing items! use prep_language add item. Prep_language thin wrapper around prep_atomic - ensures jsonlite interpret R object numeric, string, boolean, NULL.","code":"data_package_correct_lang <- data_package_error_lang  data_package_correct_lang$project_metadata$language <- \"en, fr, cn\"  data_package_correct_lang_json <- jsonlite::toJSON(data_package_correct_lang, pretty = TRUE)  correct_lang_issue <- wdds_validator(data_package_correct_lang_json, verbose = TRUE)  if(!correct_lang_issue){   print(\"WHAT! I gave it a string!?\") } #> [1] \"WHAT! I gave it a string!?\" data_package_correct_lang <- data_package_error_lang  data_package_correct_lang$project_metadata$language <- prep_language(\"en, fr, cn\")   data_package_correct_lang_json <- jsonlite::toJSON(data_package_correct_lang, pretty = TRUE)   wdds_validator(data_package_correct_lang_json, verbose = TRUE) #> [1] TRUE"},{"path":"https://viralemergence.github.io/wddsWizard/articles/wddsWizard.html","id":"best-practices-for-free-text-fields","dir":"Articles","previous_headings":"","what":"Best practices for free text fields","title":"Getting Started","text":"recommend data producers use controlled vocabularies ontologies filling free text fields. recognize selecting appropriate vocabulary can challenging recommend following platforms finding appropriate terms. Recommended ontology hosting search platforms distinct funding sources. Name | URL ‚Äì | ‚Äì Ontobee | https://ontobee.org/ Ontology Lookup Service | https://www.ebi.ac.uk/ols4/ BioPortal | https://bioportal.bioontology.org/ three platforms allow users search terms stored ontologies, explore relationships terms, find analogues. user explore given ontology find appropriate term. Table S2 list specific ontologies authorities may appropriate given field. Recommended ontologies authorities specific fields. Field | URL ‚Äì | ‚Äì Host Identification | https://www.gbif.org/species/search Gene Target | https://www.ebi.ac.uk/ols4/ontologies/go Sample Collection Method | http://purl.obolibrary.org/obo/OBI_0000659 Sample Collection Body Part | https://www.ebi.ac.uk/ols4/ontologies/uberon Sample Collection Material | http://purl.obolibrary.org/obo/OBI_0001479","code":""},{"path":"https://viralemergence.github.io/wddsWizard/articles/wdds_to_pharos.html","id":"read-in-and-clean-up-the-excel-spreadsheet","dir":"Articles","previous_headings":"","what":"Read in and Clean up the excel spreadsheet","title":"WDDS to Pharos","text":"","code":"## read becker_data <- wdds_example_data(version = \"latest\", file = \"becker_demo_dataset.csv\") |>   readr::read_csv() #> Rows: 2 Columns: 22 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr (15): Sample ID, Animal ID, Sample collection method, Sample collection ... #> dbl  (6): Latitude, Longitude, Collection day, Collection month, Collection ... #> lgl  (1): Live capture #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message.  becker_data_prelim <- janitor::clean_names(becker_data, case = \"lower_camel\")  ### Check for required Fields  # check that required fields are in dataset required_field_check <- wddsWizard::disease_data_required_fields %in% names(becker_data_prelim)  wddsWizard::disease_data_required_fields[!required_field_check] #> [1] \"sampleID\"  ### Rename Fields to match standard  # see all field names in the disease data schema # wddsWizard::disease_data_schema$properties |> names()  becker_data_clean <- becker_data_prelim |>   dplyr::rename(     \"sampleID\" = \"sampleId\",     \"animalID\" = \"animalId\"   )"},{"path":"https://viralemergence.github.io/wddsWizard/articles/wdds_to_pharos.html","id":"differences-in-required-fields","dir":"Articles","previous_headings":"","what":"Differences in required fields","title":"WDDS to Pharos","text":"Unlike WDDS, Pharos data standard requires Collection month, Collection day, Collection year present blank records dataset. See Pharos data dictionary details.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/articles/wdds_to_pharos.html","id":"converting-wdds-data-to-pharos-data","dir":"Articles","previous_headings":"","what":"Converting WDDS Data to Pharos Data","title":"WDDS to Pharos","text":"WDDS Pharos conversion happens cross walking two data standards.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/articles/wdds_to_pharos.html","id":"convert-the-data","dir":"Articles","previous_headings":"Converting WDDS Data to Pharos Data","what":"Convert the data","title":"WDDS to Pharos","text":"extremely careful using function. aligned fields 1:1 match, following fields : wdds_to_pharos function takes shortcuts make reconciling fields easier. general, WDDS granular Pharos none multiple component fields condensed single field - e.g.¬†primer sequence fields combined Primer sequence sample collection fields condensed Collection method tissue. Certain fields technically different types can harmonized. instance liveCapture mapped directly dead alive even though different types. Another major difference Pharos, units certain measures fixed author data told data created, WDDS part disease data.","code":"wdds_to_pharos_map |>   dplyr::filter(wdds %in% c(\"forwardPrimerSequence\", \"liveCapture\",\"reversePrimerSequence\", \"sampleCollectionMethod\" ) | is.na(pharos)) |>   kableExtra::kable() |>     kableExtra::kable_styling() becker_pharos <- wdds_to_pharos(wdds_disease_data = becker_data_clean) #> `sampleCollectionMethod` does not map perfectly to `Collection method or tissue`. Please review those entries. #> `liveCapture` does not map perfectly to `Dead or alive`. Please review those entries.  # readr::write_csv(becker_pharos,file = \"wdds_to_pharos_example.csv\")"},{"path":"https://viralemergence.github.io/wddsWizard/articles/wdds_to_pharos.html","id":"upload-data-into-pharos","dir":"Articles","previous_headings":"Converting WDDS Data to Pharos Data","what":"Upload data into Pharos","title":"WDDS to Pharos","text":"Uploading data Pharos done via web portal. Pharos still beta testing, features like password reset clunky. strongly recommend using password manager like bitwarden store credentials. Click username Click New Project select existing project Click create new dataset - can see pre-determined units different measures Click add rows CSV adding rows, data validated PHAROS schema. Valid columns highlighted light green invalid columns light red. click publish, validation report generated issues noted. ## Improve data upload","code":"# fix dead or alive becker_pharos_da <- becker_pharos |>   dplyr::mutate(`Dead or alive` = dplyr::case_when(     FALSE ~ \"dead\",     TRUE ~ \"alive\"   ))  ## add in ncbi taxa ids because we like standardization :)   host_taxa <- taxize::get_uid(becker_pharos_da$`Host species`) #> No ENTREZ API key provided #>  Get one via taxize::use_entrez() #> See https://ncbiinsights.ncbi.nlm.nih.gov/2017/11/02/new-api-keys-for-the-e-utilities/ #> ‚ïê‚ïê  2 queries  ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê #>  #> Retrieving data for taxon 'Desmodus rotundus' #> ‚úî  Found:  Desmodus+rotundus #>  #> Retrieving data for taxon 'Desmodus rotundus' #> ‚úî  Found:  Desmodus+rotundus #> ‚ïê‚ïê  Results  ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê #>  #> ‚Ä¢ Total: 2  #> ‚Ä¢ Found: 2  #> ‚Ä¢ Not Found: 0 becker_pharos_da$`Host species NCBI tax ID` <- host_taxa  detection_target_taxa <- taxize::get_uid(becker_pharos_da$`Detection target`) #> No ENTREZ API key provided #>  Get one via taxize::use_entrez() #> See https://ncbiinsights.ncbi.nlm.nih.gov/2017/11/02/new-api-keys-for-the-e-utilities/ #> ‚ïê‚ïê  2 queries  ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê #>  #> Retrieving data for taxon 'Coronaviridae' #> ‚úî  Found:  Coronaviridae #>  #> Retrieving data for taxon 'Coronaviridae' #> ‚úî  Found:  Coronaviridae #> ‚ïê‚ïê  Results  ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê #>  #> ‚Ä¢ Total: 2  #> ‚Ä¢ Found: 2  #> ‚Ä¢ Not Found: 0 becker_pharos_da$`Detection target NCBI tax ID` <- detection_target_taxa  pathogen_taxa <- taxize::get_uid(becker_pharos_da$Pathogen) #> No ENTREZ API key provided #>  Get one via taxize::use_entrez() #> See https://ncbiinsights.ncbi.nlm.nih.gov/2017/11/02/new-api-keys-for-the-e-utilities/ #> ‚ïê‚ïê  2 queries  ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê #>  #> Retrieving data for taxon 'Alphacoronavirus' #> ‚úî  Found:  Alphacoronavirus #>  #> Retrieving data for taxon '' #> Not found. Consider checking the spelling or alternate classification #> ‚ïê‚ïê  Results  ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê #>  #> ‚Ä¢ Total: 2  #> ‚Ä¢ Found: 1  #> ‚Ä¢ Not Found: 0 becker_pharos_da$`Pathogen NCBI tax ID` <- pathogen_taxa  ### write the csv  # readr::write_csv(becker_pharos_da,file = \"wdds_to_pharos_example_corrected.csv\")"},{"path":"https://viralemergence.github.io/wddsWizard/articles/wdds_to_pharos.html","id":"pharos-doesnt-like-nas","dir":"Articles","previous_headings":"Converting WDDS Data to Pharos Data","what":"Pharos doesn‚Äôt like NA‚Äôs","title":"WDDS to Pharos","text":"Pharos says instead using NA items without values, leave blank. Get treat - just created dataset ready shared Pharos!","code":"# use the built in function na_to_blank  beck_pharos_drop_nas <- na_to_blank(becker_pharos_da)   # readr::write_csv(beck_pharos_drop_nas,file = \"wdds_to_pharos_example_final_final.csv\")"},{"path":"https://viralemergence.github.io/wddsWizard/articles/wdds_to_zenodo.html","id":"what-is-zenodo","dir":"Articles","previous_headings":"","what":"What is Zenodo?","title":"WDDS to Zenodo","text":"Zenodo generalist data repository long term support broad use across scientific disciplines. Key Features: Long term funding (50 year funding horizon) DOI minting Robust data versioning Users can upload files large 50 gb Robust metadata improve discovery Well documented API programmatic interaction like Zenodo provides stable place deposit data.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/articles/wdds_to_zenodo.html","id":"whats-the-difference-between-wdds-project-metadata-and-zenodo-deposit-metadata","dir":"Articles","previous_headings":"What is Zenodo?","what":"Whats the difference between WDDS project metadata and Zenodo deposit metadata?","title":"WDDS to Zenodo","text":"difference WDDS Zenodo WDDS uses datacite terms Zenodo API largely uses DCMI terms. can cause confusion certain terms false cognates - e.g.¬†rights vs license.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/articles/wdds_to_zenodo.html","id":"read-in-project-metadata","dir":"Articles","previous_headings":"What is Zenodo?","what":"Read in project metadata","title":"WDDS to Zenodo","text":"tutorial, assume ‚Äôve used project metadata template create metadata. Unlike validating WDDS template, want prep data JSON. deposits package essentially us. Make sure json_prep = FALSE.","code":"library(wddsWizard) library(deposits) project_metadata <- wdds_example_data(version = \"latest\", file = \"example_project_metadata.csv\") |> read.csv() # Do NOT prep the data for json!! The data is stored in a more consistent fashion if don't do the json prep, making it easier to convert to dcmi/zenodo form  project_metadata_prepped <- prep_from_metadata_template(project_metadata,json_prep = FALSE)  # The DOI is random and will cause problems # drop the identifier since its not actually related to our data # If you have a Zenodo issued DOI already for your data it should be fine. drop_identifier <- which(names(project_metadata_prepped) == \"identifier\")  project_metadata_prepped <- project_metadata_prepped[-drop_identifier]"},{"path":"https://viralemergence.github.io/wddsWizard/articles/wdds_to_zenodo.html","id":"map-fields-to-dcmi","dir":"Articles","previous_headings":"What is Zenodo?","what":"Map fields to DCMI","title":"WDDS to Zenodo","text":"done using wdds_to_dcmi function. curious, can look wdds_to_dcmi_map dataset wdds_zenodo_map.json file included package see properties mapped one standard . license abbreviation used ‚ÄúCC0‚Äù one accepted Zenodo. see licenses accepted Zenodo, check wddsWizard::spdx_licenses. Lets update rights property see conversion works.","code":"tryCatch( dcmi_metadata <- wdds_to_dcmi(metadata_to_translate = project_metadata_prepped, translation_map = wdds_to_dcmi_map), error = function(e){   print(e) } ) #> <error/purrr_error_indexed> #> Error in `map2()`: #> ‚Ñπ In index: 5. #> ‚Ñπ With name: rights. #> Caused by error in `purrr::map()`: #> ‚Ñπ In index: 1. #> --- #> Backtrace: #>      ‚ñÜ #>   1. ‚îú‚îÄbase::tryCatch(...) #>   2. ‚îÇ ‚îî‚îÄbase (local) tryCatchList(expr, classes, parentenv, handlers) #>   3. ‚îÇ   ‚îî‚îÄbase (local) tryCatchOne(expr, names, parentenv, handlers[[1L]]) #>   4. ‚îÇ     ‚îî‚îÄbase (local) doTryCatch(return(expr), name, parentenv, handler) #>   5. ‚îú‚îÄwddsWizard::wdds_to_dcmi(...) #>   6. ‚îÇ ‚îî‚îÄpurrr::imap(...) #>   7. ‚îÇ   ‚îî‚îÄpurrr::map2(.x, vec_index(.x), .f, ...) #>   8. ‚îÇ     ‚îî‚îÄpurrr:::map2_(\"list\", .x, .y, .f, ..., .progress = .progress) #>   9. ‚îÇ       ‚îú‚îÄpurrr:::with_indexed_errors(...) #>  10. ‚îÇ       ‚îÇ ‚îî‚îÄbase::withCallingHandlers(...) #>  11. ‚îÇ       ‚îú‚îÄpurrr:::call_with_cleanup(...) #>  12. ‚îÇ       ‚îî‚îÄwddsWizard (local) .f(.x[[i]], .y[[i]], ...) #>  13. ‚îÇ         ‚îî‚îÄwddsWizard::translate_to_dcmi(item = item, translation_map = x) #>  14. ‚îÇ           ‚îî‚îÄpurrr::map(...) #>  15. ‚îÇ             ‚îî‚îÄpurrr:::map_(\"list\", .x, .f, ..., .progress = .progress) #>  16. ‚îÇ               ‚îú‚îÄpurrr:::with_indexed_errors(...) #>  17. ‚îÇ               ‚îÇ ‚îî‚îÄbase::withCallingHandlers(...) #>  18. ‚îÇ               ‚îú‚îÄpurrr:::call_with_cleanup(...) #>  19. ‚îÇ               ‚îî‚îÄwddsWizard (local) .f(.x[[i]], ...) #>  20. ‚îÇ                 ‚îî‚îÄwddsWizard::wdds_to_dcmi(metadata_to_translate = x, translation_map = translation_map) #>  21. ‚îÇ                   ‚îî‚îÄrlang::abort(message = msg) #>  22. ‚îÇ                     ‚îî‚îÄrlang:::signal_abort(cnd, .file) #>  23. ‚îÇ                       ‚îî‚îÄbase::signalCondition(cnd) #>  24. ‚îî‚îÄpurrr (local) `<fn>`(`<rlng_rrr>`) #>  25.   ‚îî‚îÄcli::cli_abort(...) #> Caused by error in `wdds_to_dcmi()`: #> ! license - CC0 - not in wddsWizard::spdx_licenses$licenseId. #>  Update the rights property in your data. #>  Potential matches: CC0-1.0 #> --- #> Backtrace: #>      ‚ñÜ #>   1. ‚îú‚îÄbase::tryCatch(...) #>   2. ‚îÇ ‚îî‚îÄbase (local) tryCatchList(expr, classes, parentenv, handlers) #>   3. ‚îÇ   ‚îî‚îÄbase (local) tryCatchOne(expr, names, parentenv, handlers[[1L]]) #>   4. ‚îÇ     ‚îî‚îÄbase (local) doTryCatch(return(expr), name, parentenv, handler) #>   5. ‚îî‚îÄwddsWizard::wdds_to_dcmi(...) #>   6.   ‚îî‚îÄpurrr::imap(...) #>   7.     ‚îî‚îÄpurrr::map2(.x, vec_index(.x), .f, ...) #>   8.       ‚îî‚îÄpurrr:::map2_(\"list\", .x, .y, .f, ..., .progress = .progress) #>   9.         ‚îú‚îÄpurrr:::with_indexed_errors(...) #>  10.         ‚îÇ ‚îî‚îÄbase::withCallingHandlers(...) #>  11.         ‚îú‚îÄpurrr:::call_with_cleanup(...) #>  12.         ‚îî‚îÄwddsWizard (local) .f(.x[[i]], .y[[i]], ...) #>  13.           ‚îî‚îÄwddsWizard::translate_to_dcmi(item = item, translation_map = x) #>  14.             ‚îî‚îÄpurrr::map(...) #>  15.               ‚îî‚îÄpurrr:::map_(\"list\", .x, .f, ..., .progress = .progress) #>  16.                 ‚îú‚îÄpurrr:::with_indexed_errors(...) #>  17.                 ‚îÇ ‚îî‚îÄbase::withCallingHandlers(...) #>  18.                 ‚îú‚îÄpurrr:::call_with_cleanup(...) #>  19.                 ‚îî‚îÄwddsWizard (local) .f(.x[[i]], ...) #>  20.                   ‚îî‚îÄwddsWizard::wdds_to_dcmi(metadata_to_translate = x, translation_map = translation_map) project_metadata_prepped$rights$rights <- \"CC0-1.0\"  dcmi_metadata <- wdds_to_dcmi(metadata_to_translate = project_metadata_prepped, translation_map = wdds_to_dcmi_map)"},{"path":"https://viralemergence.github.io/wddsWizard/articles/wdds_to_zenodo.html","id":"getting-started-with-deposits","dir":"Articles","previous_headings":"What is Zenodo?","what":"Getting started with deposits","title":"WDDS to Zenodo","text":"Now lets make deposit Zenodo using deposits package. basic workflow looks like : Connect Zenodo server Create DRAFT deposit Upload files DRAFT deposit Review metadata data Publish deposit Zenodo provides two sites - production sandbox. production site mints real DOIs ultimately want data deposited. sandbox site provides testing ground practice depositing data. sites require API key order programmatically create deposits. Treat key extreme care allows access Zenodo account. - Sandbox API Key - Production API Key can stored securely number ways, use .Renviron file keys hard-coded scripts. .Renviron file look something like example . Remember file always end blank return. ‚Äôve added tokens environment, restart R session.","code":"usethis::edit_r_environ() ZENODO_SANDBOX_TOKEN=\"TokenFromZenodoSandbox\" ZENODO_TOKEN=\"TokenFromZenodoProduction\""},{"path":"https://viralemergence.github.io/wddsWizard/articles/wdds_to_zenodo.html","id":"create-deposit","dir":"Articles","previous_headings":"What is Zenodo?","what":"Create deposit","title":"WDDS to Zenodo","text":"Oh ! issue created property. appear properly formatted date! Looking dev guide Zenodo can see dates supposed ISO8601 need use YYYY-MM-DD format.","code":"tryCatch( deposits::depositsClient$new(service = \"zenodo\",metadata = dcmi_metadata,sandbox = TRUE),   error = function(e){print(e)} ) #>   instancePath                                  schemaPath keyword #> 1     /created #/properties/created/anyOf/0/anyOf/0/format  format #> 2     /created #/properties/created/anyOf/0/anyOf/1/format  format #> 3     /created          #/properties/created/anyOf/0/anyOf   anyOf #> 4     /created           #/properties/created/anyOf/1/type    type #> 5     /created                  #/properties/created/anyOf   anyOf #>   params.format params.type                       message #> 1          date        <NA>      must match format \"date\" #> 2     date-time        <NA> must match format \"date-time\" #> 3          <NA>        <NA>  must match a schema in anyOf #> 4          <NA>      object                must be object #> 5          <NA>        <NA>  must match a schema in anyOf #> <simpleError: Stopping because the DCMI metadata terms listed above do not conform with the expected schema.> # After reviewing my records, I realized we created this data on pi day. dcmi_metadata$created <- \"2022-03-14\"  cli <- deposits::depositsClient$new(service = \"zenodo\",metadata = dcmi_metadata,sandbox = TRUE)  cli$deposit_new()  cli$deposit_upload_file(\"data/disease_data.csv\")  cli$deposits$links$html[1]"},{"path":"https://viralemergence.github.io/wddsWizard/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Collin Schwantes. Author, maintainer.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schwantes CJ (2025). Data Wizard Minimal Wildlife Disease Data Standard. doi:10.5281/zenodo.15857143. Schwantes C (2025). ‚Äúviralemergence/wdds: v.1.0.3.‚Äù doi:10.5281/zenodo.15270582, https://doi.org/10.5281/zenodo.15270582. Schwantes CJ, S√°nchez CA, Stevens T, Zimmerman R, Albery G, Becker DJ, Brookson CB, Kading RC, Keiser CN, Khandelwal S, Kramer-Schadt S, Krut-Landau R, McKee C, Montecino-Latorre D, O‚ÄôDonoghue Z, Olson SH, O‚ÄôShea M, Poisot T, Robertson H, Ryan SJ, Seifert SN, Simons D, Vicente-Santos , Wood CL, Graeden E, Carlson CJ (2025). ‚Äúminimum data standard wildlife disease research surveillance.‚Äù Scientific Data, 12(1), 1054. ISSN 2052-4463, doi:10.1038/s41597-025-05332-x, Publisher: Nature Publishing Group, https://www.nature.com/articles/s41597-025-05332-x.","code":"@Manual{wddsWizard,   title = {Data Wizard for a Minimal Wildlife Disease Data Standard},   author = {Collin J. Schwantes},   year = {2025},   doi = {10.5281/zenodo.15857143}, } @Misc{schwantes_viralemergencewdds_2025,   author = {Collin Schwantes},   title = {viralemergence/wdds: v.1.0.3},   publisher = {Zenodo},   doi = {10.5281/zenodo.15270582},   url = {https://doi.org/10.5281/zenodo.15270582},   month = {apr},   year = {2025}, } @Article{schwantes_minimum_2025,   author = {Collin J. Schwantes and Cecilia A. S√°nchez and Tess Stevens and Ryan Zimmerman and Greg Albery and Daniel J. Becker and Cole B. Brookson and Rebekah C. Kading and Carl N. Keiser and Shashank Khandelwal and Stephanie Kramer-Schadt and Raphael Krut-Landau and Clifton McKee and Diego Montecino-Latorre and Zoe O‚ÄôDonoghue and Sarah H. Olson and Mika O‚ÄôShea and Timoth√©e Poisot and Hailey Robertson and Sadie J. Ryan and Stephanie N. Seifert and David Simons and Amanda Vicente-Santos and Chelsea L. Wood and Ellie Graeden and Colin J. Carlson},   title = {A minimum data standard for wildlife disease research and surveillance},   volume = {12},   number = {1},   abstract = {Rapid and comprehensive data sharing is vital to the transparency and actionability of wildlife infectious disease research and surveillance. Unfortunately, most best practices for publicly sharing these data are focused on pathogen determination and genetic sequence data. Other facets of wildlife disease data ‚Äì particularly negative results ‚Äì are often withheld or, at best, summarized in a descriptive table with limited metadata. Here, we propose a minimum data and metadata reporting standard for wildlife disease studies. Our data standard identifies a set of 40 data fields (9 required) and 24 metadata fields (7 required) sufficient to standardize and document a dataset consisting of records disaggregated to the finest possible spatial, temporal, and taxonomic scale. We illustrate how this standard is applied to an example study, which documented a novel alphacoronavirus found in bats in Belize. Finally, we outline best practices for how data should be formatted for optimal re-use, and how researchers can navigate potential safety concerns around data sharing.},   issn = {2052-4463},   doi = {10.1038/s41597-025-05332-x},   url = {https://www.nature.com/articles/s41597-025-05332-x},   url = {https://www.nature.com/articles/s41597-025-05332-x},   language = {en},   copyright = {2025 The Author(s)},   urldate = {2025-07-15},   journal = {Scientific Data},   month = {jun},   year = {2025},   note = {Publisher: Nature Publishing Group},   keywords = {Ecological epidemiology, Microbial ecology},   pages = {1054}, }"},{"path":"https://viralemergence.github.io/wddsWizard/index.html","id":"wddswizard-","dir":"","previous_headings":"","what":"Data Wizard for a Minimal Wildlife Disease Data Standard","title":"Data Wizard for a Minimal Wildlife Disease Data Standard","text":"R package validating data Wildlife Disease Data Standard. allows users access different versions data standard, restructure data, validate data sets. See paper minimum data standard wildlife disease research surveillance discussions appropriate use complex data structures (e.g.¬†pooled samples, parasites arthropod vector, etc.) data standard. See Getting Started tutorial information use package.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Data Wizard for a Minimal Wildlife Disease Data Standard","text":"Install github. Install Runiverse","code":"devtools::install_github(\"viralemergence/wddsWizard\") install.packages('wddsWizard', repos = c('https://viralemergence.r-universe.dev', 'https://cloud.r-project.org'))"},{"path":"https://viralemergence.github.io/wddsWizard/index.html","id":"briefest-of-demos","dir":"","previous_headings":"","what":"Briefest of demos","title":"Data Wizard for a Minimal Wildlife Disease Data Standard","text":"","code":"## assumes you made a data package. See getting started vignette  schema <- wdds_json(version = \"latest\", file = \"wdds_schema.json\")  wdds_validator <- jsonvalidate::json_validator(schema,engine = \"ajv\")  project_validation <- wdds_validator(data_package_json,verbose = TRUE)  if(project_validation){   print(\"Your data package is valid! üéä \") } else { errors <- attributes(project_validation) errors$errors }"},{"path":"https://viralemergence.github.io/wddsWizard/index.html","id":"why-do-we-need-a-data-standard","dir":"","previous_headings":"","what":"Why do we need a data standard?","title":"Data Wizard for a Minimal Wildlife Disease Data Standard","text":"Data standards facilitate sharing, (re)use, aggregation data humans machines use common structure, set properties, vocabulary. Using data standard makes easier share datasets reproduce results. Data standards facilitate sharing lowering effort takes document dataset. Sharing data makes easier reproduce results. Sharing data especially important disciplines like disease ecology producing datasets resource intensive limited, making unlikely someone able replicate field work sake verifying finding. able reproduce results increases confidence findings allows others (likely original dataset producers) build results. Compliance data standard eases data interpretation. data validated standard, researcher knows fields dataset meet set definitions data conform certain structure. Researchers can also identify deviations standard readily descriptions examples provided standard. Compliant datasets can aggregated datasets meet data standard. number datasets use standard grows, questions researchers can ask data changes. example, datasets describing disease incidence pathogen dozens locations across multiple regions, can explore general modeling frameworks pathogen using unified dataset. using data standard can contribute virtuous cycle promotes high quality open reproducible science sharing, reuse, aggregation datasets.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/index.html","id":"how-do-i-use-this-package-and-the-wildlife-disease-data-standard","dir":"","previous_headings":"","what":"How do I use this package and the Wildlife Disease Data Standard?","title":"Data Wizard for a Minimal Wildlife Disease Data Standard","text":"package can used explore Wildlife Disease Data Standard validate data. See paper minimum data standard wildlife disease research surveillance discussions appropriate use complex data structures (e.g.¬†pooled samples, parasites arthropod vector, etc.). See Getting Started vignette code examples hands approach getting familiar package.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/index.html","id":"starting-from-scratch---dont-have-any-data-yet","dir":"","previous_headings":"How do I use this package and the Wildlife Disease Data Standard?","what":"Starting from scratch - don‚Äôt have any data, yet!","title":"Data Wizard for a Minimal Wildlife Disease Data Standard","text":"strongly recommend creating Data Management Plan (DMP) beginning project seriously considering data life cycle project. Use CSV templates data standard guide storing data. Make sure least minimum required fields captured data collection, match data standard. Lab field data may immediately come ‚Äútidy‚Äù format long properties captured data remain disaggregated (1 row = 1 observation), possible reshape data compatible standard.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/index.html","id":"starting-from-an-existing-project---ive-got-data","dir":"","previous_headings":"How do I use this package and the Wildlife Disease Data Standard?","what":"Starting from an existing project - I‚Äôve got data!?","title":"Data Wizard for a Minimal Wildlife Disease Data Standard","text":"potentially challenging starting scratch requires harmonizing data data standard. First, check data can disaggregated 1 row = 1 observation tidy data model. , cross-walk fields data properties standard make sure data contain required fields. Next, start reshape single, tidy, table. need re-name fields correspond standard.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/index.html","id":"validating-your-data","dir":"","previous_headings":"How do I use this package and the Wildlife Disease Data Standard?","what":"Validating your data","title":"Data Wizard for a Minimal Wildlife Disease Data Standard","text":"package vignettes describing move CSV/excel JSON project metadata wildlife disease data.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/index.html","id":"how-does-validation-work","dir":"","previous_headings":"","what":"How does validation work?","title":"Data Wizard for a Minimal Wildlife Disease Data Standard","text":"package uses JSON schemas AJV engine validation. See Schema Overview information data standard json schemas.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/index.html","id":"best-practices-for-free-text-fields","dir":"","previous_headings":"","what":"Best practices for free text fields","title":"Data Wizard for a Minimal Wildlife Disease Data Standard","text":"recommend data producers use controlled vocabularies ontologies filling free text fields. recognize selecting appropriate vocabulary can challenging recommend following platforms finding appropriate terms. Recommended ontology hosting search platforms distinct funding sources. Name | URL ‚Äì | ‚Äì Ontobee | https://ontobee.org/ Ontology Lookup Service | https://www.ebi.ac.uk/ols4/ BioPortal | https://bioportal.bioontology.org/ three platforms allow users search terms stored ontologies, explore relationships terms, find analogues. user explore given ontology find appropriate term. Table S2 list specific ontologies authorities may appropriate given field. Recommended ontologies authorities specific fields. Field | URL ‚Äì | ‚Äì Host Identification | https://www.gbif.org/species/search Gene Target | https://www.ebi.ac.uk/ols4/ontologies/go Sample Collection Method | http://purl.obolibrary.org/obo/OBI_0000659 Sample Collection Body Part | https://www.ebi.ac.uk/ols4/ontologies/uberon Sample Collection Material | http://purl.obolibrary.org/obo/OBI_0001479","code":""},{"path":"https://viralemergence.github.io/wddsWizard/index.html","id":"related-packages","dir":"","previous_headings":"","what":"Related Packages","title":"Data Wizard for a Minimal Wildlife Disease Data Standard","text":"jsonvalidate - JSON schema validation deposits package - universal client accessing data different scientific repositories. zen4R package - zenodo specific client accessing data","code":""},{"path":"https://viralemergence.github.io/wddsWizard/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Data Wizard for a Minimal Wildlife Disease Data Standard","text":"authors package grateful support Verena Institute, Carlson Lab, Yale School Public Health. work supported NSF Biology Integration Institute grant (NSF DBI 2021909, 2213854, 2515340).","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/batch_download_deposit_versions.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch download deposit versions ‚Äî batch_download_deposit_versions","title":"Batch download deposit versions ‚Äî batch_download_deposit_versions","text":"download_deposit_version wrapped purr::pmap call.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/batch_download_deposit_versions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch download deposit versions ‚Äî batch_download_deposit_versions","text":"","code":"batch_download_deposit_versions(df = list_deposit_versions(), dir_path)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/batch_download_deposit_versions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch download deposit versions ‚Äî batch_download_deposit_versions","text":"df Data frame. structure output list_deposit_versions(). Default list_deposit_versions() downloads versions deposit. dir_path Character. Path folder files downloaded.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/batch_download_deposit_versions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch download deposit versions ‚Äî batch_download_deposit_versions","text":"List download locations.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/batch_download_deposit_versions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch download deposit versions ‚Äî batch_download_deposit_versions","text":"","code":"if (FALSE) { # \\dontrun{ # download all versions batch_download_deposit_versions(dir_path = \"data\") } # }"},{"path":"https://viralemergence.github.io/wddsWizard/reference/becker_disease_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Becker et al. dataset ‚Äî becker_disease_data","title":"Becker et al. dataset ‚Äî becker_disease_data","text":"bat coronavirus dataset conforms wildlife disease data standard. See data standard field descriptions","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/becker_disease_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Becker et al. dataset ‚Äî becker_disease_data","text":"","code":"becker_disease_data"},{"path":"https://viralemergence.github.io/wddsWizard/reference/becker_disease_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Becker et al. dataset ‚Äî becker_disease_data","text":"object class tbl_df (inherits tbl, data.frame) 2 rows 21 columns.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/becker_disease_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Becker et al. dataset ‚Äî becker_disease_data","text":"https://pharos.viralemergence.org/projects/?prj=prjRPayEvMecN","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/becker_project_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Becker et al. project metadata ‚Äî becker_project_metadata","title":"Becker et al. project metadata ‚Äî becker_project_metadata","text":"project metadata bat coronavirus dataset conforms wildlife disease data standard. See data standard field descriptions.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/becker_project_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Becker et al. project metadata ‚Äî becker_project_metadata","text":"","code":"becker_project_metadata"},{"path":"https://viralemergence.github.io/wddsWizard/reference/becker_project_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Becker et al. project metadata ‚Äî becker_project_metadata","text":"object class list length 11.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/becker_project_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Becker et al. project metadata ‚Äî becker_project_metadata","text":"https://www.ebi.ac.uk/pride/archive/projects/PXD031075","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/clean_field_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Field Names ‚Äî clean_field_names","title":"Clean Field Names ‚Äî clean_field_names","text":"Clean Field Names","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/clean_field_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Field Names ‚Äî clean_field_names","text":"","code":"clean_field_names(x)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/clean_field_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Field Names ‚Äî clean_field_names","text":"x Data frame named object","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/clean_field_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Field Names ‚Äî clean_field_names","text":"object names snakecase::to_lower_camel_case format","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/clean_field_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean Field Names ‚Äî clean_field_names","text":"","code":"df <- data.frame(\"Sample ID\" = 1:10, \"Name\" = \"Fred\", \"Host Identification\" = \"Pinus strobus\")  clean_field_names(df) #>    sampleID name hostIdentification #> 1         1 Fred      Pinus strobus #> 2         2 Fred      Pinus strobus #> 3         3 Fred      Pinus strobus #> 4         4 Fred      Pinus strobus #> 5         5 Fred      Pinus strobus #> 6         6 Fred      Pinus strobus #> 7         7 Fred      Pinus strobus #> 8         8 Fred      Pinus strobus #> 9         9 Fred      Pinus strobus #> 10       10 Fred      Pinus strobus"},{"path":"https://viralemergence.github.io/wddsWizard/reference/create_object_docs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Docs Section for a schema object ‚Äî create_object_docs","title":"Create Docs Section for a schema object ‚Äî create_object_docs","text":"Create Docs Section schema object","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/create_object_docs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Docs Section for a schema object ‚Äî create_object_docs","text":"","code":"create_object_docs(x, idx, required_fields, schema_dir)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/create_object_docs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Docs Section for a schema object ‚Äî create_object_docs","text":"x List. Schema property definition idx Name schema property required_fields Character. Vector required fields schema_dir Character. directory schema stored","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/create_object_docs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Docs Section for a schema object ‚Äî create_object_docs","text":"Character formatted markdown text","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/create_schema_docs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Documentation for a schema ‚Äî create_schema_docs","title":"Create Documentation for a schema ‚Äî create_schema_docs","text":"Produces nested markdown documents schema. recursive set function","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/create_schema_docs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Documentation for a schema ‚Äî create_schema_docs","text":"","code":"create_schema_docs(schema_path = the$current_schema_path, sep = \"\\n\")"},{"path":"https://viralemergence.github.io/wddsWizard/reference/create_schema_docs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Documentation for a schema ‚Äî create_schema_docs","text":"schema_path Character. Path json-schema. Default current schema path set package environment . sep Character. separator used paste_reduce(). Default \"\\n\" create line breaks.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/create_schema_docs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Documentation for a schema ‚Äî create_schema_docs","text":"character vector markdown text","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/create_schema_docs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Documentation for a schema ‚Äî create_schema_docs","text":"","code":"if (FALSE) { # \\dontrun{ create_schema_docs() } # }"},{"path":"https://viralemergence.github.io/wddsWizard/reference/datacite_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Datacite Data Stadnard ‚Äî datacite_schema","title":"Datacite Data Stadnard ‚Äî datacite_schema","text":"See data standard JSON file field descriptions.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/datacite_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Datacite Data Stadnard ‚Äî datacite_schema","text":"","code":"datacite_schema"},{"path":"https://viralemergence.github.io/wddsWizard/reference/datacite_schema.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Datacite Data Stadnard ‚Äî datacite_schema","text":"object class list length 9.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/disease_data_required_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Required fields in the disease data object ‚Äî disease_data_required_fields","title":"Required fields in the disease data object ‚Äî disease_data_required_fields","text":"See data standard JSON file field descriptions.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/disease_data_required_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Required fields in the disease data object ‚Äî disease_data_required_fields","text":"","code":"disease_data_required_fields"},{"path":"https://viralemergence.github.io/wddsWizard/reference/disease_data_required_fields.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Required fields in the disease data object ‚Äî disease_data_required_fields","text":"object class character length 9.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/disease_data_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Wildlife Disease Data Standard - data ‚Äî disease_data_schema","title":"Wildlife Disease Data Standard - data ‚Äî disease_data_schema","text":"See data standard JSON file field descriptions.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/disease_data_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wildlife Disease Data Standard - data ‚Äî disease_data_schema","text":"","code":"disease_data_schema"},{"path":"https://viralemergence.github.io/wddsWizard/reference/disease_data_schema.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Wildlife Disease Data Standard - data ‚Äî disease_data_schema","text":"object class list length 7.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/download_deposit_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Download deposit version ‚Äî download_deposit_version","title":"Download deposit version ‚Äî download_deposit_version","text":"Downloads extracts version deposit. function specific structure wdds repo.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/download_deposit_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download deposit version ‚Äî download_deposit_version","text":"","code":"download_deposit_version(zenodo_id, version, latest_version, dir_path)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/download_deposit_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download deposit version ‚Äî download_deposit_version","text":"zenodo_id String. ID Zenodo deposit. correspond version deposit. version String. Version number/id deposit (e.g. v.1.1.1). latest_version Logical. Indicates work designated latest version. dir_path String. Path directory files downloaded e.g. \"inst/extdata/wdds_archive\" note trailing slash path.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/download_deposit_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download deposit version ‚Äî download_deposit_version","text":"String. Path downloaded version.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/download_deposit_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download deposit version ‚Äî download_deposit_version","text":"","code":"# list all deposit versions list_deposit_versions() #>   zenodo_id version latest_version #> 1  17095076 v.1.0.4           TRUE #> 2  15270582 v.1.0.3          FALSE #> 3  15257971 v.1.0.2          FALSE #> 4  15133410 v.1.0.1          FALSE #> 5  15020050 v.1.0.0          FALSE  # download the deposit  if (FALSE) { # \\dontrun{ download_deposit_version(\"15270582\", \"v.1.0.3\", TRUE, \"data\") } # }"},{"path":"https://viralemergence.github.io/wddsWizard/reference/download_oa_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Rate limited download of OA items ‚Äî download_oa_item","title":"Rate limited download of OA items ‚Äî download_oa_item","text":"Checks file exists directory, downloads file found. Sleeps given amount time respect rate limits openalex servers.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/download_oa_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rate limited download of OA items ‚Äî download_oa_item","text":"","code":"download_oa_item(entity, oa_id, dir_temp = tempdir(), sleep_time = 1)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/download_oa_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rate limited download of OA items ‚Äî download_oa_item","text":"entity Character. kind openalex item ? oa_id Character. ID openalex dir_temp Character. path directory jons stored. sleep_time Numeric. Seconds sleep.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/download_oa_item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rate limited download of OA items ‚Äî download_oa_item","text":"Character. File path json file","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/expand_tidy_dfs.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand tidy dataframes to project metadata template format ‚Äî expand_tidy_dfs","title":"Expand tidy dataframes to project metadata template format ‚Äî expand_tidy_dfs","text":"Creates JSON-like structure csv can processed using established workflows package.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/expand_tidy_dfs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand tidy dataframes to project metadata template format ‚Äî expand_tidy_dfs","text":"","code":"expand_tidy_dfs(tidy_df, group_prefix)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/expand_tidy_dfs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand tidy dataframes to project metadata template format ‚Äî expand_tidy_dfs","text":"tidy_df data frame. row corresponds complete entry. group_prefix character. repeatable metadata property project metadata section WDDS. See https://viralemergence.github.io/wddsWizard/articles/schema_overview.html#project_metadata","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/expand_tidy_dfs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand tidy dataframes to project metadata template format ‚Äî expand_tidy_dfs","text":"Data frame. data frame contains fields Group, Variable, Value.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/expand_tidy_dfs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand tidy dataframes to project metadata template format ‚Äî expand_tidy_dfs","text":"","code":"# a nice tidy dataset creators_tidy <- data.frame(\"Name\" = paste(letters[1:10],LETTERS[1:10]),          \"Given Name\" = letters[1:10],          \"Family Name\" = LETTERS[1:10],          \"Name Identifier\" = sample(1:100,10,FALSE),          \"Affiliation\" = letters[11:20],          \"Affiliation Identifier\" = 11:20,          check.names =FALSE)  # an expanded dataset that matches the template format. creators_tidy |>  expand_tidy_dfs(group_prefix = \"Creators\") #>          Group               Variable Value #> 1   Creators 1                   Name   a A #> 2                          Given Name     a #> 3                         Family Name     A #> 4                     Name Identifier    73 #> 5                         Affiliation     k #> 6              Affiliation Identifier    11 #> 7   Creators 2                   Name   b B #> 8                          Given Name     b #> 9                         Family Name     B #> 10                    Name Identifier    69 #> 11                        Affiliation     l #> 12             Affiliation Identifier    12 #> 13  Creators 3                   Name   c C #> 14                         Given Name     c #> 15                        Family Name     C #> 16                    Name Identifier     5 #> 17                        Affiliation     m #> 18             Affiliation Identifier    13 #> 19  Creators 4                   Name   d D #> 20                         Given Name     d #> 21                        Family Name     D #> 22                    Name Identifier    24 #> 23                        Affiliation     n #> 24             Affiliation Identifier    14 #> 25  Creators 5                   Name   e E #> 26                         Given Name     e #> 27                        Family Name     E #> 28                    Name Identifier    79 #> 29                        Affiliation     o #> 30             Affiliation Identifier    15 #> 31  Creators 6                   Name   f F #> 32                         Given Name     f #> 33                        Family Name     F #> 34                    Name Identifier    77 #> 35                        Affiliation     p #> 36             Affiliation Identifier    16 #> 37  Creators 7                   Name   g G #> 38                         Given Name     g #> 39                        Family Name     G #> 40                    Name Identifier     2 #> 41                        Affiliation     q #> 42             Affiliation Identifier    17 #> 43  Creators 8                   Name   h H #> 44                         Given Name     h #> 45                        Family Name     H #> 46                    Name Identifier    62 #> 47                        Affiliation     r #> 48             Affiliation Identifier    18 #> 49  Creators 9                   Name   i I #> 50                         Given Name     i #> 51                        Family Name     I #> 52                    Name Identifier    55 #> 53                        Affiliation     s #> 54             Affiliation Identifier    19 #> 55 Creators 10                   Name   j J #> 56                         Given Name     j #> 57                        Family Name     J #> 58                    Name Identifier    43 #> 59                        Affiliation     t #> 60             Affiliation Identifier    20"},{"path":"https://viralemergence.github.io/wddsWizard/reference/extract_metadata_from_doi.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Project Metadata from DOI ‚Äî extract_metadata_from_doi","title":"Extract Project Metadata from DOI ‚Äî extract_metadata_from_doi","text":"works explicitly connected publication metadata publication fairly complete. Instead re-writing metadata, better extract transform .","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/extract_metadata_from_doi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Project Metadata from DOI ‚Äî extract_metadata_from_doi","text":"","code":"extract_metadata_from_doi(doi, file_path, write_output = TRUE)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/extract_metadata_from_doi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Project Metadata from DOI ‚Äî extract_metadata_from_doi","text":"doi String. DOI published work file_path String. output written? write_output Logical. output written file?","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/extract_metadata_from_doi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Project Metadata from DOI ‚Äî extract_metadata_from_doi","text":"data frame. data frame structured way metadata template csv.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/extract_metadata_from_doi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Project Metadata from DOI ‚Äî extract_metadata_from_doi","text":"","code":"doi <-\"doi.org/10.1038/s41597-025-05332-x\" extract_metadata_from_doi(doi = doi,write_output=FALSE) #> ‚Üí Starting now, at 2025-10-07 14:48:33.726148 #> Getting Affiliations ‚ñ†‚ñ†‚ñ†‚ñ†                              12% |  ETA: 17s #> Getting Affiliations ‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†                        31% |  ETA: 10s #> Getting Affiliations ‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†                    42% |  ETA: 11s #> Getting Affiliations ‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†             65% |  ETA:  6s #> Getting Affiliations ‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†         81% |  ETA:  3s #>                     Group                Variable #> 1              Creators 1                    Name #> 2                                     Family Name #> 3                                      Given Name #> 4                                 Name Identifier #> 5                                     Affiliation #> 6                          Affiliation Identifier #> 7              Creators 2                    Name #> 8                                     Family Name #> 9                                      Given Name #> 10                                Name Identifier #> 11                                    Affiliation #> 12                         Affiliation Identifier #> 13             Creators 3                    Name #> 14                                    Family Name #> 15                                     Given Name #> 16                                Name Identifier #> 17                                    Affiliation #> 18                         Affiliation Identifier #> 19             Creators 4                    Name #> 20                                    Family Name #> 21                                     Given Name #> 22                                Name Identifier #> 23                                    Affiliation #> 24                         Affiliation Identifier #> 25             Creators 5                    Name #> 26                                    Family Name #> 27                                     Given Name #> 28                                Name Identifier #> 29                                    Affiliation #> 30                         Affiliation Identifier #> 31             Creators 6                    Name #> 32                                    Family Name #> 33                                     Given Name #> 34                                Name Identifier #> 35                                    Affiliation #> 36                         Affiliation Identifier #> 37             Creators 7                    Name #> 38                                    Family Name #> 39                                     Given Name #> 40                                Name Identifier #> 41                                    Affiliation #> 42                         Affiliation Identifier #> 43             Creators 8                    Name #> 44                                    Family Name #> 45                                     Given Name #> 46                                Name Identifier #> 47                                    Affiliation #> 48                         Affiliation Identifier #> 49             Creators 9                    Name #> 50                                    Family Name #> 51                                     Given Name #> 52                                Name Identifier #> 53                                    Affiliation #> 54                         Affiliation Identifier #> 55            Creators 10                    Name #> 56                                    Family Name #> 57                                     Given Name #> 58                                Name Identifier #> 59                                    Affiliation #> 60                         Affiliation Identifier #> 61            Creators 11                    Name #> 62                                    Family Name #> 63                                     Given Name #> 64                                Name Identifier #> 65                                    Affiliation #> 66                         Affiliation Identifier #> 67            Creators 12                    Name #> 68                                    Family Name #> 69                                     Given Name #> 70                                Name Identifier #> 71                                    Affiliation #> 72                         Affiliation Identifier #> 73            Creators 13                    Name #> 74                                    Family Name #> 75                                     Given Name #> 76                                Name Identifier #> 77                                    Affiliation #> 78                         Affiliation Identifier #> 79            Creators 14                    Name #> 80                                    Family Name #> 81                                     Given Name #> 82                                Name Identifier #> 83                                    Affiliation #> 84                         Affiliation Identifier #> 85            Creators 15                    Name #> 86                                    Family Name #> 87                                     Given Name #> 88                                Name Identifier #> 89                                    Affiliation #> 90                         Affiliation Identifier #> 91            Creators 16                    Name #> 92                                    Family Name #> 93                                     Given Name #> 94                                Name Identifier #> 95                                    Affiliation #> 96                         Affiliation Identifier #> 97            Creators 17                    Name #> 98                                    Family Name #> 99                                     Given Name #> 100                               Name Identifier #> 101                                   Affiliation #> 102                        Affiliation Identifier #> 103           Creators 18                    Name #> 104                                   Family Name #> 105                                    Given Name #> 106                               Name Identifier #> 107                                   Affiliation #> 108                        Affiliation Identifier #> 109           Creators 19                    Name #> 110                                   Family Name #> 111                                    Given Name #> 112                               Name Identifier #> 113                                   Affiliation #> 114                        Affiliation Identifier #> 115           Creators 20                    Name #> 116                                   Family Name #> 117                                    Given Name #> 118                               Name Identifier #> 119                                   Affiliation #> 120                        Affiliation Identifier #> 121           Creators 21                    Name #> 122                                   Family Name #> 123                                    Given Name #> 124                               Name Identifier #> 125                                   Affiliation #> 126                        Affiliation Identifier #> 127           Creators 22                    Name #> 128                                   Family Name #> 129                                    Given Name #> 130                               Name Identifier #> 131                                   Affiliation #> 132                        Affiliation Identifier #> 133           Creators 23                    Name #> 134                                   Family Name #> 135                                    Given Name #> 136                               Name Identifier #> 137                                   Affiliation #> 138                        Affiliation Identifier #> 139           Creators 24                    Name #> 140                                   Family Name #> 141                                    Given Name #> 142                               Name Identifier #> 143                                   Affiliation #> 144                        Affiliation Identifier #> 145           Creators 25                    Name #> 146                                   Family Name #> 147                                    Given Name #> 148                               Name Identifier #> 149                                   Affiliation #> 150                        Affiliation Identifier #> 151           Creators 26                    Name #> 152                                   Family Name #> 153                                    Given Name #> 154                               Name Identifier #> 155                                   Affiliation #> 156                        Affiliation Identifier #> 157              Titles 1                   title #> 158       publicationYear         publicationYear #> 159              language                language #> 160        Descriptions 1             Description #> 161                              Description Type #> 162  Funding References 1             Funder Name #> 163                             Funder Identifier #> 164                                  Award Number #> 165                                     Award URI #> 166                                      Award ID #> 167  Funding References 2             Funder Name #> 168                             Funder Identifier #> 169                                  Award Number #> 170                                     Award URI #> 171                                      Award ID #> 172            Subjects 1                 Subject #> 173            Subjects 2                 Subject #> 174            Subjects 3                 Subject #> 175            Subjects 4                 Subject #> 176 Related Identifiers 1      Related Identifier #> 177                       Related Identifier Type #> 178                                 Relation Type #>                                                                                                                                                     Value #> 1                                                                                                                                      Collin J Schwantes #> 2                                                                                                                                               Schwantes #> 3                                                                                                                                               Collin J  #> 4                                                                                                                   https://orcid.org/0000-0002-9882-941X #> 5                                       Department of Epidemiology of Microbial Diseases, Yale University, New Haven, CT, USA. collin.schwantes@yale.edu. #> 6                                                                                                                               https://ror.org/03v76x132 #> 7                                                                                                                                       Cecilia A S√°nchez #> 8                                                                                                                                                 S√°nchez #> 9                                                                                                                                              Cecilia A  #> 10                                                                                                                  https://orcid.org/0000-0002-1141-6816 #> 11                                       Department of Epidemiology of Microbial Diseases, Yale University, New Haven, CT, USA. cecilia.sanchez@yale.edu. #> 12                                                                                                                              https://ror.org/03v76x132 #> 13                                                                                                                                           Tess Stevens #> 14                                                                                                                                                Stevens #> 15                                                                                                                                                  Tess  #> 16                                                                                                                                                   <NA> #> 17                                                             Center for Global Health Science and Security, Georgetown University, Washington, DC, USA. #> 18                                                                                                                              https://ror.org/05vzafd60 #> 19                                                                                                                                         Ryan Zimmerman #> 20                                                                                                                                              Zimmerman #> 21                                                                                                                                                  Ryan  #> 22                                                                                                                  https://orcid.org/0000-0002-4376-7418 #> 23                                                             Center for Global Health Science and Security, Georgetown University, Washington, DC, USA. #> 24                                                                                                                              https://ror.org/05vzafd60 #> 25                                                                                                                                            Greg Albery #> 26                                                                                                                                                 Albery #> 27                                                                                                                                                  Greg  #> 28                                                                                                                  https://orcid.org/0000-0001-6260-2662 #> 29                                                                                     Department of Biology, Georgetown University, Washington, DC, USA. #> 30                                                                                                                              https://ror.org/05vzafd60 #> 31                                                                                                                                        Daniel J Becker #> 32                                                                                                                                                 Becker #> 33                                                                                                                                              Daniel J  #> 34                                                                                                                  https://orcid.org/0000-0003-4315-8628 #> 35                                                                                School of Biological Sciences, University of Oklahoma, Norman, OK, USA. #> 36                                                                                                                              https://ror.org/02aqsxs83 #> 37                                                                                                                                        Cole B Brookson #> 38                                                                                                                                               Brookson #> 39                                                                                                                                                Cole B  #> 40                                                                                                                  https://orcid.org/0000-0003-1237-4096 #> 41                                                                 Department of Epidemiology of Microbial Diseases, Yale University, New Haven, CT, USA. #> 42                                                                                                                              https://ror.org/03v76x132 #> 43                                                                                                                                       Rebekah C Kading #> 44                                                                                                                                                 Kading #> 45                                                                                                                                             Rebekah C  #> 46                                                                                                                  https://orcid.org/0000-0002-4996-915X #> 47  Center for Vector-borne Infectious Diseases, Department of Microbiology, Immunology, and Pathology, Colorado State University, Fort Collins, CO, USA. #> 48                                                                                                                              https://ror.org/03k1gpj17 #> 49                                                                                                                                          Carl N Keiser #> 50                                                                                                                                                 Keiser #> 51                                                                                                                                                Carl N  #> 52                                                                                                                  https://orcid.org/0000-0002-4936-7810 #> 53                                                                             Emerging Pathogens Institute, University of Florida, Gainesville, FL, USA. #> 54                                                                                                                              https://ror.org/02y3ad647 #> 55                                                                                                                                    Shashank Khandelwal #> 56                                                                                                                                             Khandelwal #> 57                                                                                                                                              Shashank  #> 58                                                                                                                                                   <NA> #> 59                                                                                                                    Blue Tiger, LLC, Timonium, MD, USA. #> 60                                                                                                                              https://ror.org/01mzcg363 #> 61                                                                                                                                Stephanie Kramer-Schadt #> 62                                                                                                                                          Kramer-Schadt #> 63                                                                                                                                             Stephanie  #> 64                                                                                                                  https://orcid.org/0000-0002-9269-4446 #> 65                                                   Department of Ecological Dynamics, Leibniz Institute for Zoo and Wildlife Research, Berlin, Germany. #> 66                                                                                                                              https://ror.org/05nywn832 #> 67                                                                                                                                    Raphael Krut-Landau #> 68                                                                                                                                            Krut-Landau #> 69                                                                                                                                               Raphael  #> 70                                                                                                                                                   <NA> #> 71                                                                                                                    Blue Tiger, LLC, Timonium, MD, USA. #> 72                                                                                                                              https://ror.org/01mzcg363 #> 73                                                                                                                                          Clifton McKee #> 74                                                                                                                                                  McKee #> 75                                                                                                                                               Clifton  #> 76                                                                                                                  https://orcid.org/0000-0002-6149-0598 #> 77                                                       Department of Epidemiology, Johns Hopkins Bloomberg School of Public Health, Baltimore, MD, USA. #> 78                                                                                                                              https://ror.org/00za53h95 #> 79                                                                                                                                Diego Montecino-Latorre #> 80                                                                                                                                      Montecino-Latorre #> 81                                                                                                                                                 Diego  #> 82                                                                                                                  https://orcid.org/0000-0002-5009-5939 #> 83                                                                                      Wildlife Conservation Society, Health Program, New York, NY, USA. #> 84                                                                                                                              https://ror.org/01xnsst08 #> 85                                                                                                                                         Zoe O'Donoghue #> 86                                                                                                                                             O'Donoghue #> 87                                                                                                                                                   Zoe  #> 88                                                                                                                                                   <NA> #> 89                                                                 Department of Epidemiology of Microbial Diseases, Yale University, New Haven, CT, USA. #> 90                                                                                                                              https://ror.org/03v76x132 #> 91                                                                                                                                          Sarah H Olson #> 92                                                                                                                                                  Olson #> 93                                                                                                                                               Sarah H  #> 94                                                                                                                  https://orcid.org/0000-0002-8484-9006 #> 95                                                                                      Wildlife Conservation Society, Health Program, New York, NY, USA. #> 96                                                                                                                              https://ror.org/01xnsst08 #> 97                                                                                                                                            Mika O'Shea #> 98                                                                                                                                                 O'Shea #> 99                                                                                                                                                  Mika  #> 100                                                                                                                                                  <NA> #> 101                                                              Department of Ecology and Evolutionary Biology, Tulane University, New Orleans, LA, USA. #> 102                                                                                                                             https://ror.org/04vmvtb21 #> 103                                                                                                                                       Timoth√©e Poisot #> 104                                                                                                                                                Poisot #> 105                                                                                                                                             Timoth√©e  #> 106                                                                                                                 https://orcid.org/0000-0002-0735-5184 #> 107                                                                    D√©partement de Sciences Biologiques, Universit√© de Montr√©al, Montreal, QC, Canada. #> 108                                                                                                                             https://ror.org/0161xgx34 #> 109                                                                                                                                      Hailey Robertson #> 110                                                                                                                                             Robertson #> 111                                                                                                                                               Hailey  #> 112                                                                                                                 https://orcid.org/0009-0007-2988-307X #> 113                                                                Department of Epidemiology of Microbial Diseases, Yale University, New Haven, CT, USA. #> 114                                                                                                                             https://ror.org/03v76x132 #> 115                                                                                                                                          Sadie J Ryan #> 116                                                                                                                                                  Ryan #> 117                                                                                                                                              Sadie J  #> 118                                                                                                                 https://orcid.org/0000-0002-4308-6321 #> 119                                                                            Emerging Pathogens Institute, University of Florida, Gainesville, FL, USA. #> 120                                                                                                                             https://ror.org/02y3ad647 #> 121                                                                                                                                   Stephanie N Seifert #> 122                                                                                                                                               Seifert #> 123                                                                                                                                          Stephanie N  #> 124                                                                                                                 https://orcid.org/0000-0002-4397-6156 #> 125                                                                   Paul G. Allen School for Global Health, University of Washington, Pullman, WA, USA. #> 126                                                                                                                             https://ror.org/00cvxb145 #> 127                                                                                                                                          David Simons #> 128                                                                                                                                                Simons #> 129                                                                                                                                                David  #> 130                                                                                                                                                  <NA> #> 131                                                                    Department of Anthropology, Pennsylvania State University, State College, PA, USA. #> 132                                                                                                                             https://ror.org/04p491231 #> 133                                                                                                                                 Amanda Vicente-Santos #> 134                                                                                                                                        Vicente-Santos #> 135                                                                                                                                               Amanda  #> 136                                                                                                                 https://orcid.org/0000-0001-6012-2059 #> 137                                                                               School of Biological Sciences, University of Oklahoma, Norman, OK, USA. #> 138                                                                                                                             https://ror.org/02aqsxs83 #> 139                                                                                                                                        Chelsea L Wood #> 140                                                                                                                                                  Wood #> 141                                                                                                                                            Chelsea L  #> 142                                                                                                                 https://orcid.org/0000-0003-2738-3139 #> 143                                                                   School of Aquatic and Fishery Sciences, University of Washington, Seattle, WA, USA. #> 144                                                                                                                             https://ror.org/00cvxb145 #> 145                                                                                                                                         Ellie Graeden #> 146                                                                                                                                               Graeden #> 147                                                                                                                                                Ellie  #> 148                                                                                                                 https://orcid.org/0000-0002-1265-9756 #> 149                                                            Center for Global Health Science and Security, Georgetown University, Washington, DC, USA. #> 150                                                                                                                             https://ror.org/05vzafd60 #> 151                                                                                                                                       Colin J Carlson #> 152                                                                                                                                               Carlson #> 153                                                                                                                                              Colin J  #> 154                                                                                                                 https://orcid.org/0000-0001-6960-8434 #> 155                                        Department of Epidemiology of Microbial Diseases, Yale University, New Haven, CT, USA. colin.carlson@yale.edu. #> 156                                                                                                                             https://ror.org/03v76x132 #> 157                                                                                A minimum data standard for wildlife disease research and surveillance #> 158                                                                                                                                                  2025 #> 159                                                                                                                                                    en #> 160                                                                                                                                            FILL ME IN #> 161                                                                                                                                              abstract #> 162                                                                                                                           National Science Foundation #> 163                                                                                                                             https://ror.org/021nxhr62 #> 164                                                                                                                                               2213854 #> 165                                                                                                                                                       #> 166                                                                                                                                                       #> 167                                                                                                                           National Science Foundation #> 168                                                                                                                             https://ror.org/021nxhr62 #> 169                                                                                                                                               2515340 #> 170                                                                                                                                                       #> 171                                                                                                                                                       #> 172                                                                                                                                          Data Sharing #> 173                                                                                                                                      Wildlife disease #> 174                                                                                                                                         Best practice #> 175                                                                                                                                      Table (database) #> 176                                                                                                                         A valid Identifier like a DOI #> 177    see accepted values here https://datacite-metadata-schema.readthedocs.io/en/4.5/appendices/appendix-1/relatedIdentifierType/#relatedidentifiertype #> 178                     see accepted values here: https://datacite-metadata-schema.readthedocs.io/en/4.5/appendices/appendix-1/relationType/#relationtype"},{"path":"https://viralemergence.github.io/wddsWizard/reference/extract_metadata_oa.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Metadata from Open Alex record ‚Äî extract_metadata_oa","title":"Extract Metadata from Open Alex record ‚Äî extract_metadata_oa","text":"Uses DOI work extract metadata OpenAlex - https://openalex.org/. OpenAlex data model included fields part wdds project metadata  related identifiers.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/extract_metadata_oa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Metadata from Open Alex record ‚Äî extract_metadata_oa","text":"","code":"extract_metadata_oa(doi)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/extract_metadata_oa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Metadata from Open Alex record ‚Äî extract_metadata_oa","text":"doi Character. digital object identifier published work.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/extract_metadata_oa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Metadata from Open Alex record ‚Äî extract_metadata_oa","text":"data frame. data frame structured way metadata template CSV.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/extract_metadata_oa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Metadata from Open Alex record ‚Äî extract_metadata_oa","text":"Carefully review edit metadata produced. recommend writing metadata csv, editing csv, processing demonstrated project metadata tutorial.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/extract_metadata_oa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Metadata from Open Alex record ‚Äî extract_metadata_oa","text":"","code":"doi <- \"doi.org/10.1038/s41597-025-05332-x\" extract_metadata_oa(doi = doi) #> ‚Üí Starting now, at 2025-10-07 14:48:50.793488 #>                     Group                Variable #> 1              Creators 1                    Name #> 2                                     Family Name #> 3                                      Given Name #> 4                                 Name Identifier #> 5                                     Affiliation #> 6                          Affiliation Identifier #> 7              Creators 2                    Name #> 8                                     Family Name #> 9                                      Given Name #> 10                                Name Identifier #> 11                                    Affiliation #> 12                         Affiliation Identifier #> 13             Creators 3                    Name #> 14                                    Family Name #> 15                                     Given Name #> 16                                Name Identifier #> 17                                    Affiliation #> 18                         Affiliation Identifier #> 19             Creators 4                    Name #> 20                                    Family Name #> 21                                     Given Name #> 22                                Name Identifier #> 23                                    Affiliation #> 24                         Affiliation Identifier #> 25             Creators 5                    Name #> 26                                    Family Name #> 27                                     Given Name #> 28                                Name Identifier #> 29                                    Affiliation #> 30                         Affiliation Identifier #> 31             Creators 6                    Name #> 32                                    Family Name #> 33                                     Given Name #> 34                                Name Identifier #> 35                                    Affiliation #> 36                         Affiliation Identifier #> 37             Creators 7                    Name #> 38                                    Family Name #> 39                                     Given Name #> 40                                Name Identifier #> 41                                    Affiliation #> 42                         Affiliation Identifier #> 43             Creators 8                    Name #> 44                                    Family Name #> 45                                     Given Name #> 46                                Name Identifier #> 47                                    Affiliation #> 48                         Affiliation Identifier #> 49             Creators 9                    Name #> 50                                    Family Name #> 51                                     Given Name #> 52                                Name Identifier #> 53                                    Affiliation #> 54                         Affiliation Identifier #> 55            Creators 10                    Name #> 56                                    Family Name #> 57                                     Given Name #> 58                                Name Identifier #> 59                                    Affiliation #> 60                         Affiliation Identifier #> 61            Creators 11                    Name #> 62                                    Family Name #> 63                                     Given Name #> 64                                Name Identifier #> 65                                    Affiliation #> 66                         Affiliation Identifier #> 67            Creators 12                    Name #> 68                                    Family Name #> 69                                     Given Name #> 70                                Name Identifier #> 71                                    Affiliation #> 72                         Affiliation Identifier #> 73            Creators 13                    Name #> 74                                    Family Name #> 75                                     Given Name #> 76                                Name Identifier #> 77                                    Affiliation #> 78                         Affiliation Identifier #> 79            Creators 14                    Name #> 80                                    Family Name #> 81                                     Given Name #> 82                                Name Identifier #> 83                                    Affiliation #> 84                         Affiliation Identifier #> 85            Creators 15                    Name #> 86                                    Family Name #> 87                                     Given Name #> 88                                Name Identifier #> 89                                    Affiliation #> 90                         Affiliation Identifier #> 91            Creators 16                    Name #> 92                                    Family Name #> 93                                     Given Name #> 94                                Name Identifier #> 95                                    Affiliation #> 96                         Affiliation Identifier #> 97            Creators 17                    Name #> 98                                    Family Name #> 99                                     Given Name #> 100                               Name Identifier #> 101                                   Affiliation #> 102                        Affiliation Identifier #> 103           Creators 18                    Name #> 104                                   Family Name #> 105                                    Given Name #> 106                               Name Identifier #> 107                                   Affiliation #> 108                        Affiliation Identifier #> 109           Creators 19                    Name #> 110                                   Family Name #> 111                                    Given Name #> 112                               Name Identifier #> 113                                   Affiliation #> 114                        Affiliation Identifier #> 115           Creators 20                    Name #> 116                                   Family Name #> 117                                    Given Name #> 118                               Name Identifier #> 119                                   Affiliation #> 120                        Affiliation Identifier #> 121           Creators 21                    Name #> 122                                   Family Name #> 123                                    Given Name #> 124                               Name Identifier #> 125                                   Affiliation #> 126                        Affiliation Identifier #> 127           Creators 22                    Name #> 128                                   Family Name #> 129                                    Given Name #> 130                               Name Identifier #> 131                                   Affiliation #> 132                        Affiliation Identifier #> 133           Creators 23                    Name #> 134                                   Family Name #> 135                                    Given Name #> 136                               Name Identifier #> 137                                   Affiliation #> 138                        Affiliation Identifier #> 139           Creators 24                    Name #> 140                                   Family Name #> 141                                    Given Name #> 142                               Name Identifier #> 143                                   Affiliation #> 144                        Affiliation Identifier #> 145           Creators 25                    Name #> 146                                   Family Name #> 147                                    Given Name #> 148                               Name Identifier #> 149                                   Affiliation #> 150                        Affiliation Identifier #> 151           Creators 26                    Name #> 152                                   Family Name #> 153                                    Given Name #> 154                               Name Identifier #> 155                                   Affiliation #> 156                        Affiliation Identifier #> 157              Titles 1                   title #> 158       publicationYear         publicationYear #> 159              language                language #> 160        Descriptions 1             Description #> 161                              Description Type #> 162  Funding References 1             Funder Name #> 163                             Funder Identifier #> 164                                  Award Number #> 165                                     Award URI #> 166                                      Award ID #> 167  Funding References 2             Funder Name #> 168                             Funder Identifier #> 169                                  Award Number #> 170                                     Award URI #> 171                                      Award ID #> 172            Subjects 1                 Subject #> 173            Subjects 2                 Subject #> 174            Subjects 3                 Subject #> 175            Subjects 4                 Subject #> 176 Related Identifiers 1      Related Identifier #> 177                       Related Identifier Type #> 178                                 Relation Type #>                                                                                                                                                     Value #> 1                                                                                                                                      Collin J Schwantes #> 2                                                                                                                                               Schwantes #> 3                                                                                                                                               Collin J  #> 4                                                                                                                   https://orcid.org/0000-0002-9882-941X #> 5                                       Department of Epidemiology of Microbial Diseases, Yale University, New Haven, CT, USA. collin.schwantes@yale.edu. #> 6                                                                                                                               https://ror.org/03v76x132 #> 7                                                                                                                                       Cecilia A S√°nchez #> 8                                                                                                                                                 S√°nchez #> 9                                                                                                                                              Cecilia A  #> 10                                                                                                                  https://orcid.org/0000-0002-1141-6816 #> 11                                       Department of Epidemiology of Microbial Diseases, Yale University, New Haven, CT, USA. cecilia.sanchez@yale.edu. #> 12                                                                                                                              https://ror.org/03v76x132 #> 13                                                                                                                                           Tess Stevens #> 14                                                                                                                                                Stevens #> 15                                                                                                                                                  Tess  #> 16                                                                                                                                                   <NA> #> 17                                                             Center for Global Health Science and Security, Georgetown University, Washington, DC, USA. #> 18                                                                                                                              https://ror.org/05vzafd60 #> 19                                                                                                                                         Ryan Zimmerman #> 20                                                                                                                                              Zimmerman #> 21                                                                                                                                                  Ryan  #> 22                                                                                                                  https://orcid.org/0000-0002-4376-7418 #> 23                                                             Center for Global Health Science and Security, Georgetown University, Washington, DC, USA. #> 24                                                                                                                              https://ror.org/05vzafd60 #> 25                                                                                                                                            Greg Albery #> 26                                                                                                                                                 Albery #> 27                                                                                                                                                  Greg  #> 28                                                                                                                  https://orcid.org/0000-0001-6260-2662 #> 29                                                                                     Department of Biology, Georgetown University, Washington, DC, USA. #> 30                                                                                                                              https://ror.org/05vzafd60 #> 31                                                                                                                                        Daniel J Becker #> 32                                                                                                                                                 Becker #> 33                                                                                                                                              Daniel J  #> 34                                                                                                                  https://orcid.org/0000-0003-4315-8628 #> 35                                                                                School of Biological Sciences, University of Oklahoma, Norman, OK, USA. #> 36                                                                                                                              https://ror.org/02aqsxs83 #> 37                                                                                                                                        Cole B Brookson #> 38                                                                                                                                               Brookson #> 39                                                                                                                                                Cole B  #> 40                                                                                                                  https://orcid.org/0000-0003-1237-4096 #> 41                                                                 Department of Epidemiology of Microbial Diseases, Yale University, New Haven, CT, USA. #> 42                                                                                                                              https://ror.org/03v76x132 #> 43                                                                                                                                       Rebekah C Kading #> 44                                                                                                                                                 Kading #> 45                                                                                                                                             Rebekah C  #> 46                                                                                                                  https://orcid.org/0000-0002-4996-915X #> 47  Center for Vector-borne Infectious Diseases, Department of Microbiology, Immunology, and Pathology, Colorado State University, Fort Collins, CO, USA. #> 48                                                                                                                              https://ror.org/03k1gpj17 #> 49                                                                                                                                          Carl N Keiser #> 50                                                                                                                                                 Keiser #> 51                                                                                                                                                Carl N  #> 52                                                                                                                  https://orcid.org/0000-0002-4936-7810 #> 53                                                                             Emerging Pathogens Institute, University of Florida, Gainesville, FL, USA. #> 54                                                                                                                              https://ror.org/02y3ad647 #> 55                                                                                                                                    Shashank Khandelwal #> 56                                                                                                                                             Khandelwal #> 57                                                                                                                                              Shashank  #> 58                                                                                                                                                   <NA> #> 59                                                                                                                    Blue Tiger, LLC, Timonium, MD, USA. #> 60                                                                                                                              https://ror.org/01mzcg363 #> 61                                                                                                                                Stephanie Kramer-Schadt #> 62                                                                                                                                          Kramer-Schadt #> 63                                                                                                                                             Stephanie  #> 64                                                                                                                  https://orcid.org/0000-0002-9269-4446 #> 65                                                   Department of Ecological Dynamics, Leibniz Institute for Zoo and Wildlife Research, Berlin, Germany. #> 66                                                                                                                              https://ror.org/05nywn832 #> 67                                                                                                                                    Raphael Krut-Landau #> 68                                                                                                                                            Krut-Landau #> 69                                                                                                                                               Raphael  #> 70                                                                                                                                                   <NA> #> 71                                                                                                                    Blue Tiger, LLC, Timonium, MD, USA. #> 72                                                                                                                              https://ror.org/01mzcg363 #> 73                                                                                                                                          Clifton McKee #> 74                                                                                                                                                  McKee #> 75                                                                                                                                               Clifton  #> 76                                                                                                                  https://orcid.org/0000-0002-6149-0598 #> 77                                                       Department of Epidemiology, Johns Hopkins Bloomberg School of Public Health, Baltimore, MD, USA. #> 78                                                                                                                              https://ror.org/00za53h95 #> 79                                                                                                                                Diego Montecino-Latorre #> 80                                                                                                                                      Montecino-Latorre #> 81                                                                                                                                                 Diego  #> 82                                                                                                                  https://orcid.org/0000-0002-5009-5939 #> 83                                                                                      Wildlife Conservation Society, Health Program, New York, NY, USA. #> 84                                                                                                                              https://ror.org/01xnsst08 #> 85                                                                                                                                         Zoe O'Donoghue #> 86                                                                                                                                             O'Donoghue #> 87                                                                                                                                                   Zoe  #> 88                                                                                                                                                   <NA> #> 89                                                                 Department of Epidemiology of Microbial Diseases, Yale University, New Haven, CT, USA. #> 90                                                                                                                              https://ror.org/03v76x132 #> 91                                                                                                                                          Sarah H Olson #> 92                                                                                                                                                  Olson #> 93                                                                                                                                               Sarah H  #> 94                                                                                                                  https://orcid.org/0000-0002-8484-9006 #> 95                                                                                      Wildlife Conservation Society, Health Program, New York, NY, USA. #> 96                                                                                                                              https://ror.org/01xnsst08 #> 97                                                                                                                                            Mika O'Shea #> 98                                                                                                                                                 O'Shea #> 99                                                                                                                                                  Mika  #> 100                                                                                                                                                  <NA> #> 101                                                              Department of Ecology and Evolutionary Biology, Tulane University, New Orleans, LA, USA. #> 102                                                                                                                             https://ror.org/04vmvtb21 #> 103                                                                                                                                       Timoth√©e Poisot #> 104                                                                                                                                                Poisot #> 105                                                                                                                                             Timoth√©e  #> 106                                                                                                                 https://orcid.org/0000-0002-0735-5184 #> 107                                                                    D√©partement de Sciences Biologiques, Universit√© de Montr√©al, Montreal, QC, Canada. #> 108                                                                                                                             https://ror.org/0161xgx34 #> 109                                                                                                                                      Hailey Robertson #> 110                                                                                                                                             Robertson #> 111                                                                                                                                               Hailey  #> 112                                                                                                                 https://orcid.org/0009-0007-2988-307X #> 113                                                                Department of Epidemiology of Microbial Diseases, Yale University, New Haven, CT, USA. #> 114                                                                                                                             https://ror.org/03v76x132 #> 115                                                                                                                                          Sadie J Ryan #> 116                                                                                                                                                  Ryan #> 117                                                                                                                                              Sadie J  #> 118                                                                                                                 https://orcid.org/0000-0002-4308-6321 #> 119                                                                            Emerging Pathogens Institute, University of Florida, Gainesville, FL, USA. #> 120                                                                                                                             https://ror.org/02y3ad647 #> 121                                                                                                                                   Stephanie N Seifert #> 122                                                                                                                                               Seifert #> 123                                                                                                                                          Stephanie N  #> 124                                                                                                                 https://orcid.org/0000-0002-4397-6156 #> 125                                                                   Paul G. Allen School for Global Health, University of Washington, Pullman, WA, USA. #> 126                                                                                                                             https://ror.org/00cvxb145 #> 127                                                                                                                                          David Simons #> 128                                                                                                                                                Simons #> 129                                                                                                                                                David  #> 130                                                                                                                                                  <NA> #> 131                                                                    Department of Anthropology, Pennsylvania State University, State College, PA, USA. #> 132                                                                                                                             https://ror.org/04p491231 #> 133                                                                                                                                 Amanda Vicente-Santos #> 134                                                                                                                                        Vicente-Santos #> 135                                                                                                                                               Amanda  #> 136                                                                                                                 https://orcid.org/0000-0001-6012-2059 #> 137                                                                               School of Biological Sciences, University of Oklahoma, Norman, OK, USA. #> 138                                                                                                                             https://ror.org/02aqsxs83 #> 139                                                                                                                                        Chelsea L Wood #> 140                                                                                                                                                  Wood #> 141                                                                                                                                            Chelsea L  #> 142                                                                                                                 https://orcid.org/0000-0003-2738-3139 #> 143                                                                   School of Aquatic and Fishery Sciences, University of Washington, Seattle, WA, USA. #> 144                                                                                                                             https://ror.org/00cvxb145 #> 145                                                                                                                                         Ellie Graeden #> 146                                                                                                                                               Graeden #> 147                                                                                                                                                Ellie  #> 148                                                                                                                 https://orcid.org/0000-0002-1265-9756 #> 149                                                            Center for Global Health Science and Security, Georgetown University, Washington, DC, USA. #> 150                                                                                                                             https://ror.org/05vzafd60 #> 151                                                                                                                                       Colin J Carlson #> 152                                                                                                                                               Carlson #> 153                                                                                                                                              Colin J  #> 154                                                                                                                 https://orcid.org/0000-0001-6960-8434 #> 155                                        Department of Epidemiology of Microbial Diseases, Yale University, New Haven, CT, USA. colin.carlson@yale.edu. #> 156                                                                                                                             https://ror.org/03v76x132 #> 157                                                                                A minimum data standard for wildlife disease research and surveillance #> 158                                                                                                                                                  2025 #> 159                                                                                                                                                    en #> 160                                                                                                                                            FILL ME IN #> 161                                                                                                                                              abstract #> 162                                                                                                                           National Science Foundation #> 163                                                                                                                             https://ror.org/021nxhr62 #> 164                                                                                                                                               2213854 #> 165                                                                                                                                                       #> 166                                                                                                                                                       #> 167                                                                                                                           National Science Foundation #> 168                                                                                                                             https://ror.org/021nxhr62 #> 169                                                                                                                                               2515340 #> 170                                                                                                                                                       #> 171                                                                                                                                                       #> 172                                                                                                                                          Data Sharing #> 173                                                                                                                                      Wildlife disease #> 174                                                                                                                                         Best practice #> 175                                                                                                                                      Table (database) #> 176                                                                                                                         A valid Identifier like a DOI #> 177    see accepted values here https://datacite-metadata-schema.readthedocs.io/en/4.5/appendices/appendix-1/relatedIdentifierType/#relatedidentifiertype #> 178                     see accepted values here: https://datacite-metadata-schema.readthedocs.io/en/4.5/appendices/appendix-1/relationType/#relationtype"},{"path":"https://viralemergence.github.io/wddsWizard/reference/generate_metadata_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate minimal project metadata template ‚Äî generate_metadata_csv","title":"Generate minimal project metadata template ‚Äî generate_metadata_csv","text":"function allows generate minimal metadata template project. provide certain values generates csv based values. parameter starts num takes integer creates repeat entries metadata csv. values take string logical input prepopulate section metadata csv.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/generate_metadata_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate minimal project metadata template ‚Äî generate_metadata_csv","text":"","code":"generate_metadata_csv(   file_path,   event_based,   archival,   num_creators,   num_titles,   identifier,   identifier_type,   num_subjects,   publication_year,   rights,   language,   num_descriptions,   num_fundingReferences,   num_related_identifiers,   write_output = TRUE )"},{"path":"https://viralemergence.github.io/wddsWizard/reference/generate_metadata_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate minimal project metadata template ‚Äî generate_metadata_csv","text":"file_path String. CSV file saved? event_based Logical. Whether research conducted response known suspected infectious disease outbreak, observed animal morbidity mortality, etc. archival Logical. Whether samples archival source (e.g., museum collections, biobanks). num_creators Integer. Number creators work. num_titles Integer. Number titles work. identifier String. unique string identifies resource. DOI identifier_type String. DOI num_subjects Integer. Number subjects. Subject, keyword, classification code, key phrase describing resource publication_year String. Year work published rights String. Use one rights identifiers found https://spdx.org/licenses/ language String. primary language resource. num_descriptions Integer. Number descriptions add csv. additional information fit categories. May used technical information detailed information associated scientific instrument num_fundingReferences Integer. Number funders add csv. Name identifying information funding provider num_related_identifiers Integer. Number works like link . write_output Logical. file written?","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/generate_metadata_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate minimal project metadata template ‚Äî generate_metadata_csv","text":"data.frame","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/generate_metadata_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate minimal project metadata template ‚Äî generate_metadata_csv","text":"","code":"generate_metadata_csv(file_path = \"test.csv\", event_based = TRUE, archival = FALSE, num_creators = 10, num_titles = 1, identifier = \"https://doi.org/10.1080/example.doi\", identifier_type = \"doi\", num_subjects = 5, publication_year = \"2025\", rights = \"cc-by\", language = \"en\", num_descriptions = 1, num_fundingReferences = 4, num_related_identifiers= 5, write_output = FALSE) # change to TRUE to write the csv #>                     Group                Variable #> 1             Methodology             Event Based #> 2                                        Archival #> 3              Creators 1                    Name #> 4                                      Given Name #> 5                                     Family Name #> 6                                 Name Identifier #> 7                                     Affiliation #> 8                          Affiliation Identifier #> 9              Creators 2                    Name #> 10                                     Given Name #> 11                                    Family Name #> 12                                Name Identifier #> 13                                    Affiliation #> 14                         Affiliation Identifier #> 15             Creators 3                    Name #> 16                                     Given Name #> 17                                    Family Name #> 18                                Name Identifier #> 19                                    Affiliation #> 20                         Affiliation Identifier #> 21             Creators 4                    Name #> 22                                     Given Name #> 23                                    Family Name #> 24                                Name Identifier #> 25                                    Affiliation #> 26                         Affiliation Identifier #> 27             Creators 5                    Name #> 28                                     Given Name #> 29                                    Family Name #> 30                                Name Identifier #> 31                                    Affiliation #> 32                         Affiliation Identifier #> 33             Creators 6                    Name #> 34                                     Given Name #> 35                                    Family Name #> 36                                Name Identifier #> 37                                    Affiliation #> 38                         Affiliation Identifier #> 39             Creators 7                    Name #> 40                                     Given Name #> 41                                    Family Name #> 42                                Name Identifier #> 43                                    Affiliation #> 44                         Affiliation Identifier #> 45             Creators 8                    Name #> 46                                     Given Name #> 47                                    Family Name #> 48                                Name Identifier #> 49                                    Affiliation #> 50                         Affiliation Identifier #> 51             Creators 9                    Name #> 52                                     Given Name #> 53                                    Family Name #> 54                                Name Identifier #> 55                                    Affiliation #> 56                         Affiliation Identifier #> 57            Creators 10                    Name #> 58                                     Given Name #> 59                                    Family Name #> 60                                Name Identifier #> 61                                    Affiliation #> 62                         Affiliation Identifier #> 63               Titles 1                   Title #> 64             Identifier              Identifier #> 65                                Identifier Type #> 66             Subjects 1                 Subject #> 67             Subjects 2                 Subject #> 68             Subjects 3                 Subject #> 69             Subjects 4                 Subject #> 70             Subjects 5                 Subject #> 71       Publication Year        Publication Year #> 72                 Rights                  Rights #> 73               Language                Language #> 74         Descriptions 1             Description #> 75                               Description Type #> 76   Funding References 1             Funder Name #> 77                              Funder Identifier #> 78                                   Award Number #> 79                                      Award URI #> 80                                    Award Title #> 81   Funding References 2             Funder Name #> 82                              Funder Identifier #> 83                                   Award Number #> 84                                      Award URI #> 85                                    Award Title #> 86   Funding References 3             Funder Name #> 87                              Funder Identifier #> 88                                   Award Number #> 89                                      Award URI #> 90                                    Award Title #> 91   Funding References 4             Funder Name #> 92                              Funder Identifier #> 93                                   Award Number #> 94                                      Award URI #> 95                                    Award Title #> 96  Related Identifiers 1      Related Identifier #> 97                        Related Identifier Type #> 98                                  Relation Type #> 99  Related Identifiers 2      Related Identifier #> 100                       Related Identifier Type #> 101                                 Relation Type #> 102 Related Identifiers 3      Related Identifier #> 103                       Related Identifier Type #> 104                                 Relation Type #> 105 Related Identifiers 4      Related Identifier #> 106                       Related Identifier Type #> 107                                 Relation Type #> 108 Related Identifiers 5      Related Identifier #> 109                       Related Identifier Type #> 110                                 Relation Type #>                                   Value #> 1                                  TRUE #> 2                                 FALSE #> 3                                       #> 4                                       #> 5                                       #> 6                                       #> 7                                       #> 8                                       #> 9                                       #> 10                                      #> 11                                      #> 12                                      #> 13                                      #> 14                                      #> 15                                      #> 16                                      #> 17                                      #> 18                                      #> 19                                      #> 20                                      #> 21                                      #> 22                                      #> 23                                      #> 24                                      #> 25                                      #> 26                                      #> 27                                      #> 28                                      #> 29                                      #> 30                                      #> 31                                      #> 32                                      #> 33                                      #> 34                                      #> 35                                      #> 36                                      #> 37                                      #> 38                                      #> 39                                      #> 40                                      #> 41                                      #> 42                                      #> 43                                      #> 44                                      #> 45                                      #> 46                                      #> 47                                      #> 48                                      #> 49                                      #> 50                                      #> 51                                      #> 52                                      #> 53                                      #> 54                                      #> 55                                      #> 56                                      #> 57                                      #> 58                                      #> 59                                      #> 60                                      #> 61                                      #> 62                                      #> 63                                      #> 64  https://doi.org/10.1080/example.doi #> 65                                  doi #> 66                                      #> 67                                      #> 68                                      #> 69                                      #> 70                                      #> 71                                 2025 #> 72                                cc-by #> 73                                   en #> 74                                      #> 75                                      #> 76                                      #> 77                                      #> 78                                      #> 79                                      #> 80                                      #> 81                                      #> 82                                      #> 83                                      #> 84                                      #> 85                                      #> 86                                      #> 87                                      #> 88                                      #> 89                                      #> 90                                      #> 91                                      #> 92                                      #> 93                                      #> 94                                      #> 95                                      #> 96                                      #> 97                                      #> 98                                      #> 99                                      #> 100                                     #> 101                                     #> 102                                     #> 103                                     #> 104                                     #> 105                                     #> 106                                     #> 107                                     #> 108                                     #> 109                                     #> 110"},{"path":"https://viralemergence.github.io/wddsWizard/reference/generate_repeat_dfs.html","id":null,"dir":"Reference","previous_headings":"","what":"generate_repeat_dfs ‚Äî generate_repeat_dfs","title":"generate_repeat_dfs ‚Äî generate_repeat_dfs","text":"generate_repeat_dfs","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/generate_repeat_dfs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate_repeat_dfs ‚Äî generate_repeat_dfs","text":"","code":"generate_repeat_dfs(num_groups, group_prefix, group_variables)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/generate_repeat_dfs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate_repeat_dfs ‚Äî generate_repeat_dfs","text":"num_groups Numeric. Number groups group_prefix Character. group name group_variables Character. comma separated scalar string variables.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/generate_repeat_dfs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate_repeat_dfs ‚Äî generate_repeat_dfs","text":"data frame. Structured appropriately metadata csv.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/generate_repeat_dfs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generate_repeat_dfs ‚Äî generate_repeat_dfs","text":"","code":"related_ids_df <- generate_repeat_dfs(num_groups = 5, group_prefix = \"Related Identifiers\", group_variables = \"Related Identifier,Related Identifier Type,Relation Type\")"},{"path":"https://viralemergence.github.io/wddsWizard/reference/get_entity.html","id":null,"dir":"Reference","previous_headings":"","what":"Get entity ‚Äî get_entity","title":"Get entity ‚Äî get_entity","text":"get_entity function creates standard entities easier transform json.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/get_entity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get entity ‚Äî get_entity","text":"","code":"get_entity(x)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/get_entity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get entity ‚Äî get_entity","text":"x data frame. \"long\" form data frame fields Group, entity_id, Value, variable.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/get_entity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get entity ‚Äî get_entity","text":"data frame \"wide\" form","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/get_entity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get entity ‚Äî get_entity","text":"Pivots data long wide formats column names.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/get_entity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get entity ‚Äî get_entity","text":"","code":"df <- data.frame(Group = 1, entity_id = 1, Value = 1:3, Variable = letters[1:3])  get_entity(df) #> # A tibble: 1 √ó 3 #>       a     b     c #>   <int> <int> <int> #> 1     1     2     3"},{"path":"https://viralemergence.github.io/wddsWizard/reference/get_ref.html","id":null,"dir":"Reference","previous_headings":"","what":"Get schema references ‚Äî get_ref","title":"Get schema references ‚Äî get_ref","text":"Parses $ref calls schema. Can retrieve internal ('\"$ref\":\"#/definitions/someDef\") external references ('\"$ref\":\"schemas/datacite/datacite.json\"').","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/get_ref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get schema references ‚Äî get_ref","text":"","code":"get_ref(x, schema_dir)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/get_ref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get schema references ‚Äî get_ref","text":"x List. Must property \"$ref\" schema_dir Character. Directory current schema.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/get_ref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get schema references ‚Äî get_ref","text":"List Character. Character returned entire schema referenced.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/get_ref.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get schema references ‚Äî get_ref","text":"external references, can handle pointers references entire schemas. function navigates parent child schemas manipulating variables  package environment .","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/get_required_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the required fields ‚Äî get_required_fields","title":"Get the required fields ‚Äî get_required_fields","text":"Gets required fields object schema","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/get_required_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the required fields ‚Äî get_required_fields","text":"","code":"get_required_fields(schema_list)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/get_required_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the required fields ‚Äî get_required_fields","text":"schema_list List jsonlite::read_json","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/get_required_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the required fields ‚Äî get_required_fields","text":"character vector required fields","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/get_required_fields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the required fields ‚Äî get_required_fields","text":"","code":"schema_list <- jsonlite::read_json(wdds_json(\"latest\", \"schemas/disease_data.json\")) get_required_fields(schema_list) #> [1] \"sampleID\"               \"latitude\"               \"longitude\"              #> [4] \"sampleCollectionMethod\" \"hostIdentification\"     \"detectionTarget\"        #> [7] \"detectionMethod\"        \"detectionOutcome\"       \"parasiteIdentification\""},{"path":"https://viralemergence.github.io/wddsWizard/reference/increase_docs_depth.html","id":null,"dir":"Reference","previous_headings":"","what":"Increase documentation depth ‚Äî increase_docs_depth","title":"Increase documentation depth ‚Äî increase_docs_depth","text":"Pads left side list items extra 4 spaces","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/increase_docs_depth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Increase documentation depth ‚Äî increase_docs_depth","text":"","code":"increase_docs_depth(string)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/increase_docs_depth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Increase documentation depth ‚Äî increase_docs_depth","text":"string Character. item parsed","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/increase_docs_depth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Increase documentation depth ‚Äî increase_docs_depth","text":"character","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/list_deposit_versions.html","id":null,"dir":"Reference","previous_headings":"","what":"List Versions of a deposit on Zenodo ‚Äî list_deposit_versions","title":"List Versions of a deposit on Zenodo ‚Äî list_deposit_versions","text":"function list versions deposit associated parent id. parent id used identify set works different versions work. parent id provided Zenodo API. download JSON representation deposit (export json), attribute json called parent looks like \"https://zenodo.org/api/records/15020049\". 8 digit string end url parent id.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/list_deposit_versions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Versions of a deposit on Zenodo ‚Äî list_deposit_versions","text":"","code":"list_deposit_versions(parent_id = \"15020049\")"},{"path":"https://viralemergence.github.io/wddsWizard/reference/list_deposit_versions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Versions of a deposit on Zenodo ‚Äî list_deposit_versions","text":"parent_id String. Identifier Zenodo deposit multiple versions. Default parent id wdds zenodo deposit.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/list_deposit_versions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Versions of a deposit on Zenodo ‚Äî list_deposit_versions","text":"Data frame. data frame contains Zenodo id version deposit, well version name, logical field called latest indicates latest version.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/list_deposit_versions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Versions of a deposit on Zenodo ‚Äî list_deposit_versions","text":"","code":"list_deposit_versions() #>   zenodo_id version latest_version #> 1  17095076 v.1.0.4           TRUE #> 2  15270582 v.1.0.3          FALSE #> 3  15257971 v.1.0.2          FALSE #> 4  15133410 v.1.0.1          FALSE #> 5  15020050 v.1.0.0          FALSE"},{"path":"https://viralemergence.github.io/wddsWizard/reference/list_wdds_templates.html","id":null,"dir":"Reference","previous_headings":"","what":"File paths for wdds templates ‚Äî list_wdds_templates","title":"File paths for wdds templates ‚Äî list_wdds_templates","text":"Displays file paths Wildlife Disease Data Standard templates","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/list_wdds_templates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"File paths for wdds templates ‚Äî list_wdds_templates","text":"","code":"list_wdds_templates(template_file = NULL)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/list_wdds_templates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"File paths for wdds templates ‚Äî list_wdds_templates","text":"template_file character. file name template. Default NULL return template files","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/list_wdds_templates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"File paths for wdds templates ‚Äî list_wdds_templates","text":"file paths , path = NULL, list file names","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/list_wdds_templates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"File paths for wdds templates ‚Äî list_wdds_templates","text":"path null, displays files templates folder.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/make_simple_df.html","id":null,"dir":"Reference","previous_headings":"","what":"A convenience function for making non-repeating items ‚Äî make_simple_df","title":"A convenience function for making non-repeating items ‚Äî make_simple_df","text":"convenience function making non-repeating items","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/make_simple_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A convenience function for making non-repeating items ‚Äî make_simple_df","text":"","code":"make_simple_df(property, value)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/make_simple_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A convenience function for making non-repeating items ‚Äî make_simple_df","text":"property string. Metadata group variable name value value property.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/make_simple_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A convenience function for making non-repeating items ‚Äî make_simple_df","text":"data frame. data frame conforms non-repeatable structure template.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/make_simple_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A convenience function for making non-repeating items ‚Äî make_simple_df","text":"","code":"language_df <- make_simple_df(property = \"language\", value = \"fr\")"},{"path":"https://viralemergence.github.io/wddsWizard/reference/minimal_disease_data.html","id":null,"dir":"Reference","previous_headings":"","what":"An example of minimal disease data ‚Äî minimal_disease_data","title":"An example of minimal disease data ‚Äî minimal_disease_data","text":"minimal disease data example. data frame minimal items required disease data.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/minimal_disease_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example of minimal disease data ‚Äî minimal_disease_data","text":"","code":"minimal_disease_data"},{"path":"https://viralemergence.github.io/wddsWizard/reference/minimal_disease_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example of minimal disease data ‚Äî minimal_disease_data","text":"object class data.frame 3 rows 15 columns.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/minimal_project_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"An example of minimal project metadata ‚Äî minimal_project_metadata","title":"An example of minimal project metadata ‚Äî minimal_project_metadata","text":"minimal project metadata example. list minimal items required project metadata.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/minimal_project_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example of minimal project metadata ‚Äî minimal_project_metadata","text":"","code":"minimal_project_metadata"},{"path":"https://viralemergence.github.io/wddsWizard/reference/minimal_project_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example of minimal project metadata ‚Äî minimal_project_metadata","text":"object class list length 7.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/na_to_blank.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert NA's to blanks ‚Äî na_to_blank","title":"Convert NA's to blanks ‚Äî na_to_blank","text":"Converts columns character converts NA's blanks.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/na_to_blank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert NA's to blanks ‚Äî na_to_blank","text":"","code":"na_to_blank(df)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/na_to_blank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert NA's to blanks ‚Äî na_to_blank","text":"df data frame. data frame NAs coverted blanks. tibble nested columns.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/na_to_blank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert NA's to blanks ‚Äî na_to_blank","text":"data frame. columns character NA's replaced \"\".","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/na_to_blank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert NA's to blanks ‚Äî na_to_blank","text":"","code":"data.frame(a = 1:10, b = c(1:9,NA)) |>   na_to_blank() #> # A tibble: 10 √ó 2 #>    a     b     #>    <chr> <chr> #>  1 1     \"1\"   #>  2 2     \"2\"   #>  3 3     \"3\"   #>  4 4     \"4\"   #>  5 5     \"5\"   #>  6 6     \"6\"   #>  7 7     \"7\"   #>  8 8     \"8\"   #>  9 9     \"9\"   #> 10 10    \"\""},{"path":"https://viralemergence.github.io/wddsWizard/reference/paste_reduce.html","id":null,"dir":"Reference","previous_headings":"","what":"Paste Reduce ‚Äî paste_reduce","title":"Paste Reduce ‚Äî paste_reduce","text":"paste function can used purrr::reduce build nested documentation items","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/paste_reduce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paste Reduce ‚Äî paste_reduce","text":"","code":"paste_reduce(x, y, sep = \"\\n\")"},{"path":"https://viralemergence.github.io/wddsWizard/reference/paste_reduce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Paste Reduce ‚Äî paste_reduce","text":"x Character y Character sep Character. Default line break \"\\n\"","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/paste_reduce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Paste Reduce ‚Äî paste_reduce","text":"Character","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/paste_reduce.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Paste Reduce ‚Äî paste_reduce","text":"","code":"text_a <- \"hello\" text_b <- \"world\" paste_reduce(text_a, text_b) #> [1] \"hello\\nworld\""},{"path":"https://viralemergence.github.io/wddsWizard/reference/paste_reduce_ul.html","id":null,"dir":"Reference","previous_headings":"","what":"Paste Reduce unordered list item ‚Äî paste_reduce_ul","title":"Paste Reduce unordered list item ‚Äî paste_reduce_ul","text":"paste function can used purrr::reduce build nested documentation items","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/paste_reduce_ul.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paste Reduce unordered list item ‚Äî paste_reduce_ul","text":"","code":"paste_reduce_ul(x, y, sep = \"\\n - \")"},{"path":"https://viralemergence.github.io/wddsWizard/reference/paste_reduce_ul.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Paste Reduce unordered list item ‚Äî paste_reduce_ul","text":"x Character y Character sep Character. Default line break followed dash \"\\n - \" create unordered list markdown.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/paste_reduce_ul.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Paste Reduce unordered list item ‚Äî paste_reduce_ul","text":"Character","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/paste_reduce_ul.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Paste Reduce unordered list item ‚Äî paste_reduce_ul","text":"","code":"text_a <- \"hello\" text_b <- \"world\" paste_reduce_ul(text_a, text_b) #> [1] \"hello\\n - world\""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_affiliation.html","id":null,"dir":"Reference","previous_headings":"","what":"prep affiliation ‚Äî prep_affiliation","title":"prep affiliation ‚Äî prep_affiliation","text":"affiliations associated creator.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_affiliation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prep affiliation ‚Äî prep_affiliation","text":"","code":"prep_affiliation(x)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_affiliation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prep affiliation ‚Äî prep_affiliation","text":"x Data frame prep_creators","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_affiliation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"prep affiliation ‚Äî prep_affiliation","text":"Data frame affiliation fields list column called affiliation","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_affiliation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"prep affiliation ‚Äî prep_affiliation","text":"Affiliation datacite array objects properties name, affiliationIdentifier, affiliationIdentifierScheme, schemeURI. function takes affiliation fields restructures list within dataframe. Affiliation fields converted list: \"affiliation\", #' \"affiliationIdentifier\", \"affiliationIdentifierScheme\" , \"schemeUri\"","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_affiliation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"prep affiliation ‚Äî prep_affiliation","text":"","code":"creator_df <- wddsWizard::becker_project_metadata$creators[[1]] creator_df_aff_prepped <- prep_affiliation(creator_df)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_array.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep array ‚Äî prep_array","title":"Prep array ‚Äî prep_array","text":"Prep array","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep array ‚Äî prep_array","text":"","code":"prep_array(x)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep array ‚Äî prep_array","text":"x list object.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_array.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prep array ‚Äî prep_array","text":"unnamed vector","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_array.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prep array ‚Äî prep_array","text":"","code":"# this form can arise because of the csv template nested_list <- list(list(\"formats\" = list(\"formats\" = \"csv\", \"formats\" = \"fasta\")))  prep_array(nested_list) #> [1] \"csv\"   \"fasta\""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_array_objects.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare an array of objects ‚Äî prep_array_objects","title":"Prepare an array of objects ‚Äî prep_array_objects","text":"wraps data frame list unboxes list items 1 row dataframes. result array objects created.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_array_objects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare an array of objects ‚Äî prep_array_objects","text":"","code":"prep_array_objects(x, unbox = TRUE)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_array_objects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare an array of objects ‚Äî prep_array_objects","text":"x list data frames data frame unbox logical. things unboxed?","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_array_objects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare an array of objects ‚Äî prep_array_objects","text":"list single row unboxed data frames","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_array_objects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare an array of objects ‚Äî prep_array_objects","text":"","code":"# note that you cannot unbox data frames with more than 1 row  x <- list(   tibble::tibble(age = 1, group = letters[1]),   tibble::tibble(age = 2, group = letters[2]) )  # running jsonlite::toJSON on an unmodified object results in # extra square brackets - an array of arrays of objects jsonlite::toJSON(x, pretty = TRUE) #> [ #>   [ #>     { #>       \"age\": 1, #>       \"group\": \"a\" #>     } #>   ], #>   [ #>     { #>       \"age\": 2, #>       \"group\": \"b\" #>     } #>   ] #> ]   # with the prepped data we get an array of objects x_prepped <- prep_array_objects(x)  x_prepped |>   jsonlite::toJSON(pretty = TRUE) #> [ #>   { #>       \"age\": 1, #>       \"group\": \"a\" #>     }, #>   { #>       \"age\": 2, #>       \"group\": \"b\" #>     } #> ]"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_atomic.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare atomic ‚Äî prep_atomic","title":"Prepare atomic ‚Äî prep_atomic","text":"thin wrapper jsonlite::unbox. stops jsonlite representing single character, numeric, logical, etc. items arrays.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_atomic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare atomic ‚Äî prep_atomic","text":"","code":"prep_atomic(x, unbox = TRUE)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_atomic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare atomic ‚Äî prep_atomic","text":"x vector single row data frame unbox Logical. value unboxed? See jsonlite::unbox","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_atomic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare atomic ‚Äî prep_atomic","text":"unboxed dataframe 1 row","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_atomic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare atomic ‚Äî prep_atomic","text":"useful property definition type string, number, logical length 1.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_atomic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare atomic ‚Äî prep_atomic","text":"","code":"x <- 1  # values in x are stored in an array x |>   jsonlite::toJSON() #> [1]  # output is [1]  # values in x are NOT stored in an array (no square brackets) prep_atomic(x) |>   jsonlite::toJSON() #> 1  # output is 1"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_creators.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare creators ‚Äî prep_creators","title":"Prepare creators ‚Äî prep_creators","text":"creator object can complex prepare components final object (e.g. affiliation, nameIdentifiers) run prep_array_objects","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_creators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare creators ‚Äî prep_creators","text":"","code":"prep_creators(x)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_creators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare creators ‚Äî prep_creators","text":"x data frame named list.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_creators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare creators ‚Äî prep_creators","text":"List unboxed data frames","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_creators.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare creators ‚Äî prep_creators","text":"","code":"wddsWizard::becker_project_metadata$creators |>   prep_creators() #> [[1]] #>                 name givenName familyName #> [x] Daniel J. Becker Daniel J.     Becker #>                                                                                   affiliation #> [x] Department of Biology, University of Oklahoma, Norman, OK, USA, https://ror.org/02aqsxs83 #>                                  nameIdentifiers #> [x] https://orcid.org/0000-0003-4315-8628, ORCID #>  #> [[2]] #>                name   givenName familyName #> [x] Guang-Sheng Lei Guang-Sheng        Lei #>                                                                                                                                  affiliation #> [x] Department of Pathology and Laboratory Medicine, Indiana University School of Medicine, Indianapolis, IN, USA, https://ror.org/02ets8c94 #>"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Data ‚Äî prep_data","title":"Prepare Data ‚Äî prep_data","text":"Prepares object arrays.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Data ‚Äî prep_data","text":"","code":"prep_data(x)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Data ‚Äî prep_data","text":"x named vector, list, data frame","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Data ‚Äî prep_data","text":"List formatted objects","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare Data ‚Äî prep_data","text":"Note unboxing work items 1:1 key value pair. dataframe multiple rows list  multiple values given position, work.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Data ‚Äî prep_data","text":"","code":"cars_small <- datasets::cars[1:10, ]  # creates an array of objects where each # row is an object cars_small |>   jsonlite::toJSON(pretty = TRUE) #> [ #>   { #>     \"speed\": 4, #>     \"dist\": 2 #>   }, #>   { #>     \"speed\": 4, #>     \"dist\": 10 #>   }, #>   { #>     \"speed\": 7, #>     \"dist\": 4 #>   }, #>   { #>     \"speed\": 7, #>     \"dist\": 22 #>   }, #>   { #>     \"speed\": 8, #>     \"dist\": 16 #>   }, #>   { #>     \"speed\": 9, #>     \"dist\": 10 #>   }, #>   { #>     \"speed\": 10, #>     \"dist\": 18 #>   }, #>   { #>     \"speed\": 10, #>     \"dist\": 26 #>   }, #>   { #>     \"speed\": 10, #>     \"dist\": 34 #>   }, #>   { #>     \"speed\": 11, #>     \"dist\": 17 #>   } #> ]   # creates an object with 2 arrays prep_object(cars_small) |>   jsonlite::toJSON(pretty = TRUE) #> { #>   \"speed\": [4, 4, 7, 7, 8, 9, 10, 10, 10, 11], #>   \"dist\": [2, 10, 4, 22, 16, 10, 18, 26, 34, 17] #> }   # this makes no difference x <- list(\"hello\" = 1:10, \"world\" = \"Earth\")  prep_object(x) |>   jsonlite::toJSON(pretty = TRUE) #> { #>   \"hello\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], #>   \"world\": [\"Earth\"] #> }"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_descriptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare descriptions ‚Äî prep_descriptions","title":"Prepare descriptions ‚Äî prep_descriptions","text":"Wrapper prep_array_objects.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_descriptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare descriptions ‚Äî prep_descriptions","text":"","code":"prep_descriptions(x)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_descriptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare descriptions ‚Äî prep_descriptions","text":"x Data frame/Tibble containing description items","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_descriptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare descriptions ‚Äî prep_descriptions","text":"List x marked unbox (make array)","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_descriptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare descriptions ‚Äî prep_descriptions","text":"","code":"x <- wddsWizard::becker_project_metadata$descriptions  prep_descriptions(x) |> jsonlite::toJSON() #> [{\"description\":\"Bats can harbor many pathogens without showing disease. However, the mechanisms by which bats resolve these infections or limit pathology remain unclear. To illuminate the bat immune response to coronaviruses, viruses with high public health significance, we will use serum proteomics to assess broad differences in immune proteins of uninfected and infected vampire bats (Desmodus rotundus). In contrast to global profiling techniques of blood such as transcriptomics, proteomics provides a unique perspective into immunology, as the serum proteome includes proteins from not only blood but also those secreted from proximal tissues. Here, we expand our recent work on the serum proteome of wild vampire bats (Desmodus rotundus) to better understand CoV pathogenesis. Across 19 bats sampled in 2019 in northern Belize with available sera, we detected CoVs in oral or rectal swabs from four individuals. We used data independent acquisition-based mass spectrometry to profile and compare the undepleted serum proteome of these 19 bats. These results will provide much needed insight into changes in the bat serum proteome in response to coronavirus infection.\",\"descriptionType\":\"Abstract\"}]"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_for_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data for json ‚Äî prep_for_json","title":"Prepare data for json ‚Äî prep_for_json","text":"Usespurrr::modify_at apply set methods specific locations list.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_for_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data for json ‚Äî prep_for_json","text":"","code":"prep_for_json(x, prep_methods_list = prep_methods())"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_for_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data for json ‚Äî prep_for_json","text":"x list. Named list data frames, lists, vectors. methods applied, names list items match names methods list prep_methods_list list. Named list methods items function applied corresponding items x. Default full list methods prep_methods().","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_for_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare data for json ‚Äî prep_for_json","text":"Named list methods applied.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_for_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare data for json ‚Äî prep_for_json","text":"","code":"wddsWizard::becker_project_metadata |>   prep_for_json() #> $creators #> $creators[[1]] #>                 name givenName familyName #> [x] Daniel J. Becker Daniel J.     Becker #>                                                                                   affiliation #> [x] Department of Biology, University of Oklahoma, Norman, OK, USA, https://ror.org/02aqsxs83 #>                                  nameIdentifiers #> [x] https://orcid.org/0000-0003-4315-8628, ORCID #>  #> $creators[[2]] #>                name   givenName familyName #> [x] Guang-Sheng Lei Guang-Sheng        Lei #>                                                                                                                                  affiliation #> [x] Department of Pathology and Laboratory Medicine, Indiana University School of Medicine, Indianapolis, IN, USA, https://ror.org/02ets8c94 #>  #>  #> $descriptions #> $descriptionsdescription #> [x] Bats can harbor many pathogens without showing disease. However, the mechanisms by which bats resolve these infections or limit pathology remain unclear. To illuminate the bat immune response to coronaviruses, viruses with high public health significance, we will use serum proteomics to assess broad differences in immune proteins of uninfected and infected vampire bats (Desmodus rotundus). In contrast to global profiling techniques of blood such as transcriptomics, proteomics provides a unique perspective into immunology, as the serum proteome includes proteins from not only blood but also those secreted from proximal tissues. Here, we expand our recent work on the serum proteome of wild vampire bats (Desmodus rotundus) to better understand CoV pathogenesis. Across 19 bats sampled in 2019 in northern Belize with available sera, we detected CoVs in oral or rectal swabs from four individuals. We used data independent acquisition-based mass spectrometry to profile and compare the undepleted serum proteome of these 19 bats. These results will provide much needed insight into changes in the bat serum proteome in response to coronavirus infection. #>     descriptionType #> [x]        Abstract #>  #>  #> $fundingReferences #> $fundingReferences[[1]] #>                      funderName                     funderIdentifier #> [x] National Geographic Society http://dx.doi.org/10.13039/100006733 #>       awardNumber #> [x] NGS-55503R-19 #>  #> $fundingReferences[[2]] #>             funderName                     funderIdentifier #> [x] Indiana University http://dx.doi.org/10.13039/100006733 #>  #> $fundingReferences[[3]] #>                funderName                     funderIdentifier #> [x] College of Charleston http://dx.doi.org/10.13039/100009789 #>  #>  #> $identifier #> $identifier[[1]] #>                identifier identifierType #> [x] 10.5072/zenodo.168108            DOI #>  #>  #> $language #> [x] \"en\" #>  #> $methodology #> $methodology$eventBased #> [x] false #>  #> $methodology$archival #> [x] false #>  #>  #> $publicationYear #> [x] \"2022\" #>  #> $relatedIdentifiers #> $relatedIdentifiers[[1]] #>                                                 relatedIdentifier #> [x] https://pharos.viralemergence.org/projects/?prj=prjRPayEvMecN #>     relatedIdentifierType relationType #> [x]                   URL  IsVersionOf #>  #> $relatedIdentifiers[[2]] #>             relatedIdentifier relatedIdentifierType relationType #> [x] 10.3389/fviro.2022.862961                   DOI     IsPartOf #>  #>  #> $rights #> $rights[[1]] #>     rights #> [x]    CC0 #>  #>  #> $subjects #> $subjects[[1]] #>        subject #> [x] Proteomics #>  #> $subjects[[2]] #>             subject #> [x] Immune Response #>  #>  #> $titles #> $titles[[1]] #>                                                                            title #> [x] Serum proteomics of coronavirus shedding in vampire bats (Desmodus rotundus) #>  #>   a <- list(\"hello_world\" = 1:10) methods_list <- list(   \"hello_world\" = function(x) {     x * 2   },   \"unused_method\" = function(x) {     x / 2   } ) prep_for_json(a, methods_list) #> $hello_world #>  [1]  2  4  6  8 10 12 14 16 18 20 #>"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_from_metadata_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare metadata created from the metadata template for conversion to JSON ‚Äî prep_from_metadata_template","title":"Prepare metadata created from the metadata template for conversion to JSON ‚Äî prep_from_metadata_template","text":"convenience function used metadata template create project metadata data.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_from_metadata_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare metadata created from the metadata template for conversion to JSON ‚Äî prep_from_metadata_template","text":"","code":"prep_from_metadata_template(   project_metadata,   prep_methods_list = prep_methods(),   schema_properties = wddsWizard::schema_properties,   json_prep = TRUE )"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_from_metadata_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare metadata created from the metadata template for conversion to JSON ‚Äî prep_from_metadata_template","text":"project_metadata Data frame. correspond structure project_metadata_template.csv prep_methods_list list. Named list methods items function applied corresponding items x.Default prep_methods(). schema_properties Data frame. data frame schema properties types. json_prep Logical. metadata prepped JSON?","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_from_metadata_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare metadata created from the metadata template for conversion to JSON ‚Äî prep_from_metadata_template","text":"Named list ready converted json","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_from_metadata_template.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare metadata created from the metadata template for conversion to JSON ‚Äî prep_from_metadata_template","text":"light data formatting make conversion json easier.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_from_metadata_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare metadata created from the metadata template for conversion to JSON ‚Äî prep_from_metadata_template","text":"","code":"if (FALSE) { # \\dontrun{ # create wddsWizard::use_template(\"project_metadata_template.csv\",   folder = \"data\",   file_name = \"my_project_metadata.csv\" ) project_metadata <- read.csv(\"data/my_project_metadata.csv\")  prepped_project_metadata <- wddsWizard::prep_from_metadata_template(project_metadata)  project_metadat_json <- jsonlite::toJSON(prepped_project_metadata, pretty = TRUE) } # }"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_fundingReferences.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare funding references ‚Äî prep_fundingReferences","title":"Prepare funding references ‚Äî prep_fundingReferences","text":"creates array objects","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_fundingReferences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare funding references ‚Äî prep_fundingReferences","text":"","code":"prep_fundingReferences(x)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_fundingReferences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare funding references ‚Äî prep_fundingReferences","text":"x list tibbles/data frames tibble/data frame","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_fundingReferences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare funding references ‚Äî prep_fundingReferences","text":"list single row unboxed data frames","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_fundingReferences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare funding references ‚Äî prep_fundingReferences","text":"","code":"wddsWizard::becker_project_metadata$fundingReferences |>   prep_fundingReferences() #> [[1]] #>                      funderName                     funderIdentifier #> [x] National Geographic Society http://dx.doi.org/10.13039/100006733 #>       awardNumber #> [x] NGS-55503R-19 #>  #> [[2]] #>             funderName                     funderIdentifier #> [x] Indiana University http://dx.doi.org/10.13039/100006733 #>  #> [[3]] #>                funderName                     funderIdentifier #> [x] College of Charleston http://dx.doi.org/10.13039/100009789 #>"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_identifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep identifier ‚Äî prep_identifier","title":"Prep identifier ‚Äî prep_identifier","text":"Prepare identifier scholarly work. Wrapper prep_array_objects","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_identifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep identifier ‚Äî prep_identifier","text":"","code":"prep_identifier(x)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_identifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep identifier ‚Äî prep_identifier","text":"x data frame identifier properties","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_identifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prep identifier ‚Äî prep_identifier","text":"List x marked unbox","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_identifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prep identifier ‚Äî prep_identifier","text":"","code":"wddsWizard::becker_project_metadata$identifier |> prep_identifier() #> [[1]] #>                identifier identifierType #> [x] 10.5072/zenodo.168108            DOI #>"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_language.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep language ‚Äî prep_language","title":"Prep language ‚Äî prep_language","text":"Prepare language property - describe language scholarly work.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_language.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep language ‚Äî prep_language","text":"","code":"prep_language(x)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_language.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep language ‚Äî prep_language","text":"x named list, vector, data.frame 1:1 name:value pairs","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_language.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prep language ‚Äî prep_language","text":"unboxed dataframe 1 row","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_language.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prep language ‚Äî prep_language","text":"","code":"a <- data.frame(\"language\" = \"en\")  prep_language(a) #> [x] \"en\""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_methodology.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep methodology for conversion to json ‚Äî prep_methodology","title":"Prep methodology for conversion to json ‚Äî prep_methodology","text":"Prep methodology conversion json","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_methodology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep methodology for conversion to json ‚Äî prep_methodology","text":"","code":"prep_methodology(x)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_methodology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep methodology for conversion to json ‚Äî prep_methodology","text":"x List. methodology component list","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_methodology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prep methodology for conversion to json ‚Äî prep_methodology","text":"properly formatted list","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_methodology.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prep methodology for conversion to json ‚Äî prep_methodology","text":"","code":"if (FALSE) { # \\dontrun{ prepped_list <- project_metadata_list_entities prepped_list$methodology <- prep_methodology(project_metadata_list_entities$methodology)  OR  prepped_list <- purrr::modify_at(project_metadata_list_entities, \"methodology\", prep_methodology) } # }"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare methods ‚Äî prep_methods","title":"Prepare methods ‚Äî prep_methods","text":"Collection methods preparing data conveniently named make preparing easier","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare methods ‚Äî prep_methods","text":"","code":"prep_methods()"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare methods ‚Äî prep_methods","text":"list methods","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare methods ‚Äî prep_methods","text":"","code":"prep_methods() #> $data #> function (x)  #> { #>     prep_object(x) #> } #> <bytecode: 0x5595f49079e8> #> <environment: namespace:wddsWizard> #>  #> $creators #> function (x)  #> { #>     assertthat::assert_that(is.list(x), msg = \"x must be a list\") #>     x_aff <- purrr::map(x, prep_affiliation) #>     x_nid <- purrr::map(x_aff, prep_nameIdentifiers) #>     out <- prep_array_objects(x_nid) #>     return(out) #> } #> <bytecode: 0x5595f2987cd8> #> <environment: namespace:wddsWizard> #>  #> $descriptions #> function (x)  #> { #>     prep_array_objects(x) #> } #> <bytecode: 0x5595f06ac628> #> <environment: namespace:wddsWizard> #>  #> $fundingReferences #> function (x)  #> { #>     prep_array_objects(x) #> } #> <bytecode: 0x5595f4904408> #> <environment: namespace:wddsWizard> #>  #> $identifier #> function (x)  #> { #>     prep_array_objects(x) #> } #> <bytecode: 0x5595f4904bb0> #> <environment: namespace:wddsWizard> #>  #> $relatedIdentifiers #> function (x)  #> { #>     prep_array_objects(x) #> } #> <bytecode: 0x5595f4905358> #> <environment: namespace:wddsWizard> #>  #> $language #> function (x)  #> { #>     prep_atomic(x) #> } #> <bytecode: 0x5595f4905b38> #> <environment: namespace:wddsWizard> #>  #> $methodology #> function (x)  #> { #>     assertthat::assert_that(is.list(x), msg = \"x must be a list\") #>     check_for_names <- c(\"eventBased\", \"archival\") %in% names(x) #>     assertthat::assert_that(all(check_for_names), msg = \"x must have items `eventBased` and `archival`\") #>     x <- dplyr::mutate(x, eventBased = as.logical(.data$eventBased),  #>         archival = as.logical(.data$archival)) #>     prep_object(x, unbox = TRUE) #> } #> <bytecode: 0x5595f48ece50> #> <environment: namespace:wddsWizard> #>  #> $publicationYear #> function (x)  #> { #>     prep_atomic(x) #> } #> <bytecode: 0x5595f48ee510> #> <environment: namespace:wddsWizard> #>  #> $rights #> function (x)  #> { #>     prep_array_objects(x) #> } #> <bytecode: 0x5595f48e12e8> #> <environment: namespace:wddsWizard> #>  #> $subjects #> function (x)  #> { #>     prep_array_objects(x) #> } #> <bytecode: 0x5595f48e1a90> #> <environment: namespace:wddsWizard> #>  #> $titles #> function (x)  #> { #>     prep_array_objects(x) #> } #> <bytecode: 0x5595f48e2238> #> <environment: namespace:wddsWizard> #>"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_nameIdentifiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Name identifiers ‚Äî prep_nameIdentifiers","title":"Prepare Name identifiers ‚Äî prep_nameIdentifiers","text":"Persistent identifiers associated creator.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_nameIdentifiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Name identifiers ‚Äî prep_nameIdentifiers","text":"","code":"prep_nameIdentifiers(x)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_nameIdentifiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Name identifiers ‚Äî prep_nameIdentifiers","text":"x Data frame \"creators\"","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_nameIdentifiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Name identifiers ‚Äî prep_nameIdentifiers","text":"data frame nameIdentifiers column list","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_nameIdentifiers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare Name identifiers ‚Äî prep_nameIdentifiers","text":"Name identifiers datacite array objects properties \"nameIdentifier\", \"nameIdentifierScheme\" , \"schemeUri\". function takes name identifiers fields restructures list within data frame.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_nameIdentifiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Name identifiers ‚Äî prep_nameIdentifiers","text":"","code":"creator_df <- wddsWizard::becker_project_metadata$creators[[1]] creator_df_nameID_prepped <- prep_nameIdentifiers(creator_df)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare an object ‚Äî prep_object","title":"Prepare an object ‚Äî prep_object","text":"Converts named vector, list, data frame list, optionally unboxes , recorded object.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare an object ‚Äî prep_object","text":"","code":"prep_object(x, unbox = FALSE)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare an object ‚Äî prep_object","text":"x named vector, list, data frame unbox logical items unboxed (arrays)? Default FALSE meaning items remain arrays converted json.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare an object ‚Äî prep_object","text":"List formatted objects","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_object.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare an object ‚Äî prep_object","text":"Note unboxing work items 1:1 key value pair. dataframe multiple rows list  multiple values given position, work.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_object.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare an object ‚Äî prep_object","text":"","code":"cars_small <- datasets::cars[1:10, ]  # creates an array of objects where each # row is an object cars_small |>   jsonlite::toJSON(pretty = TRUE) #> [ #>   { #>     \"speed\": 4, #>     \"dist\": 2 #>   }, #>   { #>     \"speed\": 4, #>     \"dist\": 10 #>   }, #>   { #>     \"speed\": 7, #>     \"dist\": 4 #>   }, #>   { #>     \"speed\": 7, #>     \"dist\": 22 #>   }, #>   { #>     \"speed\": 8, #>     \"dist\": 16 #>   }, #>   { #>     \"speed\": 9, #>     \"dist\": 10 #>   }, #>   { #>     \"speed\": 10, #>     \"dist\": 18 #>   }, #>   { #>     \"speed\": 10, #>     \"dist\": 26 #>   }, #>   { #>     \"speed\": 10, #>     \"dist\": 34 #>   }, #>   { #>     \"speed\": 11, #>     \"dist\": 17 #>   } #> ]   # creates an object with 2 arrays prep_object(cars_small) |>   jsonlite::toJSON(pretty = TRUE) #> { #>   \"speed\": [4, 4, 7, 7, 8, 9, 10, 10, 10, 11], #>   \"dist\": [2, 10, 4, 22, 16, 10, 18, 26, 34, 17] #> }   # this makes no difference x <- list(\"hello\" = 1:10, \"world\" = \"Earth\")  prep_object(x) |>   jsonlite::toJSON(pretty = TRUE) #> { #>   \"hello\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], #>   \"world\": [\"Earth\"] #> }"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_publicationYear.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare publication year items ‚Äî prep_publicationYear","title":"Prepare publication year items ‚Äî prep_publicationYear","text":"wrapper prep atomic","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_publicationYear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare publication year items ‚Äî prep_publicationYear","text":"","code":"prep_publicationYear(x)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_publicationYear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare publication year items ‚Äî prep_publicationYear","text":"x Named vector, data frame, list","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_publicationYear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare publication year items ‚Äî prep_publicationYear","text":"unboxed dataframe 1 row","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_publicationYear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare publication year items ‚Äî prep_publicationYear","text":"","code":"pub_year <- data.frame(\"publicationYear\" = \"2025\")  prep_language(pub_year) #> [x] \"2025\""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_relatedIdentifiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare related identifiers ‚Äî prep_relatedIdentifiers","title":"Prepare related identifiers ‚Äî prep_relatedIdentifiers","text":"Prepare related identifiers","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_relatedIdentifiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare related identifiers ‚Äî prep_relatedIdentifiers","text":"","code":"prep_relatedIdentifiers(x)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_relatedIdentifiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare related identifiers ‚Äî prep_relatedIdentifiers","text":"x data frame related identifier properties","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_relatedIdentifiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare related identifiers ‚Äî prep_relatedIdentifiers","text":"List x marked unbox","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_relatedIdentifiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare related identifiers ‚Äî prep_relatedIdentifiers","text":"","code":"wddsWizard::becker_project_metadata$relatedIdentifiers |> prep_relatedIdentifiers() #> [[1]] #>                                                 relatedIdentifier #> [x] https://pharos.viralemergence.org/projects/?prj=prjRPayEvMecN #>     relatedIdentifierType relationType #> [x]                   URL  IsVersionOf #>  #> [[2]] #>             relatedIdentifier relatedIdentifierType relationType #> [x] 10.3389/fviro.2022.862961                   DOI     IsPartOf #>"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_rights.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare rights ‚Äî prep_rights","title":"Prepare rights ‚Äî prep_rights","text":"Prepares array objects","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_rights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare rights ‚Äî prep_rights","text":"","code":"prep_rights(x)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_rights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare rights ‚Äî prep_rights","text":"x named list, vector, data.frame 1:1 name:value pairs","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_rights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare rights ‚Äî prep_rights","text":"list unboxed data frames","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_rights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare rights ‚Äî prep_rights","text":"","code":"wddsWizard::becker_project_metadata$rights |> prep_rights() #> [[1]] #>     rights #> [x]    CC0 #>"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_subjects.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare subjects ‚Äî prep_subjects","title":"Prepare subjects ‚Äî prep_subjects","text":"Subjects keywords describing work. Prepares array objects.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_subjects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare subjects ‚Äî prep_subjects","text":"","code":"prep_subjects(x)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_subjects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare subjects ‚Äî prep_subjects","text":"x named list, vector, data.frame 1:1 name:value pairs","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_subjects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare subjects ‚Äî prep_subjects","text":"list unboxed data frames","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_subjects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare subjects ‚Äî prep_subjects","text":"","code":"wddsWizard::becker_project_metadata$subjects |> prep_subjects() #> [[1]] #>        subject #> [x] Proteomics #>  #> [[2]] #>             subject #> [x] Immune Response #>"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_titles.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Titles ‚Äî prep_titles","title":"Prepare Titles ‚Äî prep_titles","text":"Prepares array objects","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_titles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Titles ‚Äî prep_titles","text":"","code":"prep_titles(x)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_titles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Titles ‚Äî prep_titles","text":"x list data frames data frame","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_titles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Titles ‚Äî prep_titles","text":"list single row unboxed data frames","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/prep_titles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Titles ‚Äî prep_titles","text":"","code":"wddsWizard::becker_project_metadata$titles |>   prep_titles() #> [[1]] #>                                                                            title #> [x] Serum proteomics of coronavirus shedding in vampire bats (Desmodus rotundus) #>"},{"path":"https://viralemergence.github.io/wddsWizard/reference/project_metadata_required_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Required fields in the project metadata object ‚Äî project_metadata_required_fields","title":"Required fields in the project metadata object ‚Äî project_metadata_required_fields","text":"See data standard JSON file field descriptions.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/project_metadata_required_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Required fields in the project metadata object ‚Äî project_metadata_required_fields","text":"","code":"project_metadata_required_fields"},{"path":"https://viralemergence.github.io/wddsWizard/reference/project_metadata_required_fields.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Required fields in the project metadata object ‚Äî project_metadata_required_fields","text":"object class character length 7.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/project_metadata_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Wildlife Disease Data Standard - project_metadata ‚Äî project_metadata_schema","title":"Wildlife Disease Data Standard - project_metadata ‚Äî project_metadata_schema","text":"See data standard JSON file field descriptions.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/project_metadata_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wildlife Disease Data Standard - project_metadata ‚Äî project_metadata_schema","text":"","code":"project_metadata_schema"},{"path":"https://viralemergence.github.io/wddsWizard/reference/project_metadata_schema.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Wildlife Disease Data Standard - project_metadata ‚Äî project_metadata_schema","text":"object class list length 6.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/sanitize_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanitize version ids ‚Äî sanitize_version","title":"Sanitize version ids ‚Äî sanitize_version","text":"function replaces periods scores. different versions data standard stored folders respective names; however, periods folder names can cause problems certain operating systems makes difficult parse file extensions.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/sanitize_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanitize version ids ‚Äî sanitize_version","text":"","code":"sanitize_version(version)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/sanitize_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanitize version ids ‚Äî sanitize_version","text":"version Character. Version identifier.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/sanitize_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sanitize version ids ‚Äî sanitize_version","text":"Character. Version identifier periods.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/sanitize_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sanitize version ids ‚Äî sanitize_version","text":"","code":"sanitize_version(\"v.1.1.0\") #> [1] \"v_1_1_0\""},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Schema Object ‚Äî schema_obj","title":"Schema Object ‚Äî schema_obj","text":"class getting schema properties.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Schema Object ‚Äî schema_obj","text":"List data frames. Create list schema object Creates data.frame fields name type data frame type name Get schema references Parses $ref calls schema. Can retrieve internal ('\"$ref\":\"#/definitions/someDef\") external references ('\"$ref\":\"schemas/datacite/datacite.json\"'). external references, can handle pointers references entire schemas. function navigates parent child schemas manipulating variables package environment . data frame name type. Process Array Items Processes array items can added data frame. data frames name type array items objects character strings atomic (string, null, Boolean, etc) array items.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_obj.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Schema Object ‚Äî schema_obj","text":"schema_path (character(1)) path schema file. schema_list_out (list()) List data frames schema properties. wdds_version (character(1)) version wdds used current_schema_path (character(1)) current schema file path current_schema_dir (character(1)) current schema directory path current_sub_schema_dir (character(1)) current sub schema directory path parent_schema_path (character(1)) parent schema file path parent_schema_dir (character(1)) parent schema directory array_items (c()) array items array_items_skip (logical(1)) array items skip array_items_parent (logical(1)) parent array items","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_obj.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Schema Object ‚Äî schema_obj","text":"schema_obj$new() schema_obj$create_schema_list() schema_obj$create_object_list() schema_obj$get_ref_list() schema_obj$process_array_items() schema_obj$clone()","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_obj.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Schema Object ‚Äî schema_obj","text":"Creates new instance R6 class.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_obj.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Schema Object ‚Äî schema_obj","text":"","code":"schema_obj$new(schema_path, wdds_version = \"latest\")"},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Schema Object ‚Äî schema_obj","text":"schema_path Character. File path schema (character(1)) wdds_version Character. Version wdds used (character(1))","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_obj.html","id":"method-create-schema-list-","dir":"Reference","previous_headings":"","what":"Method create_schema_list()","title":"Schema Object ‚Äî schema_obj","text":"Create expanded schema object Produces list data frame name type schema. recursive set function may expanded get properties.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_obj.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Schema Object ‚Äî schema_obj","text":"","code":"schema_obj$create_schema_list(schema_path = self$current_schema_path)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_obj.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Schema Object ‚Äî schema_obj","text":"schema_path Character. Path json-schema. Default current schema path package environment,","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_obj.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Schema Object ‚Äî schema_obj","text":"","code":"schema_obj$create_object_list(x, idx, schema_dir)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_obj.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Schema Object ‚Äî schema_obj","text":"x List. Schema property definition idx Name schema property schema_dir Character. directory schema stored","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_obj.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Schema Object ‚Äî schema_obj","text":"","code":"schema_obj$get_ref_list(x, schema_dir)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_obj.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Schema Object ‚Äî schema_obj","text":"x List. Must property \"$ref\" schema_dir Character. Directory current schema.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_obj.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Schema Object ‚Äî schema_obj","text":"","code":"schema_obj$process_array_items(array_items, out)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_obj.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Schema Object ‚Äî schema_obj","text":"array_items list. List array items processing. data frame. Data frame name type.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_obj.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Schema Object ‚Äî schema_obj","text":"objects class cloneable method.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_obj.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Schema Object ‚Äî schema_obj","text":"","code":"schema_obj$clone(deep = FALSE)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_obj.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Schema Object ‚Äî schema_obj","text":"deep Whether make deep clone.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Wildlife Disease Data Standard - schema properties ‚Äî schema_properties","title":"Wildlife Disease Data Standard - schema properties ‚Äî schema_properties","text":"data frame schema names types.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wildlife Disease Data Standard - schema properties ‚Äî schema_properties","text":"","code":"schema_properties"},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_properties.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Wildlife Disease Data Standard - schema properties ‚Äî schema_properties","text":"object class data.frame 78 rows 4 columns.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_required_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Wildlife Disease Data Standard required fields ‚Äî schema_required_fields","title":"Wildlife Disease Data Standard required fields ‚Äî schema_required_fields","text":"See data standard JSON file field descriptions. vector required fields entire schema.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_required_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wildlife Disease Data Standard required fields ‚Äî schema_required_fields","text":"","code":"schema_required_fields"},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_required_fields.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Wildlife Disease Data Standard required fields ‚Äî schema_required_fields","text":"object class character length 2.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Wildlife Disease Data Standard - schema terms ‚Äî schema_terms","title":"Wildlife Disease Data Standard - schema terms ‚Äî schema_terms","text":"Markdown schema terms","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wildlife Disease Data Standard - schema terms ‚Äî schema_terms","text":"","code":"schema_terms"},{"path":"https://viralemergence.github.io/wddsWizard/reference/schema_terms.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Wildlife Disease Data Standard - schema terms ‚Äî schema_terms","text":"object class character length 1.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/set_wdds_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the wdds version for the package ‚Äî set_wdds_version","title":"Set the wdds version for the package ‚Äî set_wdds_version","text":"Used keep package data standard alignment.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/set_wdds_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the wdds version for the package ‚Äî set_wdds_version","text":"","code":"set_wdds_version(version = \"latest\")"},{"path":"https://viralemergence.github.io/wddsWizard/reference/set_wdds_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the wdds version for the package ‚Äî set_wdds_version","text":"version Character. identifier version e.g. \"v.1.0.2\" \"latest\". Default \"latest\".","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/set_wdds_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the wdds version for the package ‚Äî set_wdds_version","text":"Character. Current schema version.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/spdx_licenses.html","id":null,"dir":"Reference","previous_headings":"","what":"Data frame of SPDX licenses ‚Äî spdx_licenses","title":"Data frame of SPDX licenses ‚Äî spdx_licenses","text":"table SPDX license metadata. Use spdx_licenses$licenseId uploading data Zenodo.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/spdx_licenses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data frame of SPDX licenses ‚Äî spdx_licenses","text":"","code":"spdx_licenses"},{"path":"https://viralemergence.github.io/wddsWizard/reference/spdx_licenses.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data frame of SPDX licenses ‚Äî spdx_licenses","text":"object class data.frame 706 rows 9 columns.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/spdx_licenses.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data frame of SPDX licenses ‚Äî spdx_licenses","text":"https://github.com/spdx/license-list-data/blob/main/json/licenses.json","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/translate_to_dcmi.html","id":null,"dir":"Reference","previous_headings":"","what":"translate to dcmi ‚Äî translate_to_dcmi","title":"translate to dcmi ‚Äî translate_to_dcmi","text":"translate dcmi","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/translate_to_dcmi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"translate to dcmi ‚Äî translate_to_dcmi","text":"","code":"translate_to_dcmi(item, translation_map)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/translate_to_dcmi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"translate to dcmi ‚Äî translate_to_dcmi","text":"item List. Item translated. translation_map List. Instructions translating item","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/translate_to_dcmi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"translate to dcmi ‚Äî translate_to_dcmi","text":"List. Item translated DCMI","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/use_wdds_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a wildlife disease data standard template ‚Äî use_wdds_template","title":"Use a wildlife disease data standard template ‚Äî use_wdds_template","text":"function allows easily copy open template package.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/use_wdds_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a wildlife disease data standard template ‚Äî use_wdds_template","text":"","code":"use_wdds_template(   template_file = NULL,   folder = fs::path_wd(),   file_name = NULL,   open = rlang::is_interactive(),   overwrite = FALSE )"},{"path":"https://viralemergence.github.io/wddsWizard/reference/use_wdds_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use a wildlife disease data standard template ‚Äî use_wdds_template","text":"template_file character. File name template. Defaults NULL return template files. folder character. template copied ? Default current working directory. file_name character. copied file called? Default use whatever value supplied template_file. open logical. file opened? Defaults TRUE interactive. overwrite logical. file name destination folder overwritten? Default FALSE avoid accidentally overwriting data.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/use_wdds_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use a wildlife disease data standard template ‚Äî use_wdds_template","text":"Character. template_file value provided, lists template files package. file created, returns file path new file.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/use_wdds_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use a wildlife disease data standard template ‚Äî use_wdds_template","text":"","code":"# return available templates use_wdds_template() #> ‚Ñπ Provide a value to `template_file` to use the template #> [1] \"disease_data_template.csv\"     \"disease_data_template.xlsx\"    #> [3] \"project_metadata_template.csv\"  if (FALSE) { # \\dontrun{  # makes a copy of the disease data template in the current working directory use_wdds_template(\"disease_data_template.csv\") } # }"},{"path":"https://viralemergence.github.io/wddsWizard/reference/wddsWizard-package.html","id":null,"dir":"Reference","previous_headings":"","what":"wddsWizard: Data Wizard for a Minimal Wildlife Disease Data Standard ‚Äî wddsWizard-package","title":"wddsWizard: Data Wizard for a Minimal Wildlife Disease Data Standard ‚Äî wddsWizard-package","text":"Facilitates compliance use Wildlife Disease Data Standard stored Zenodo https://doi.org/10.5281/zenodo.15020049. allows users restructure validate datasets.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/wddsWizard-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"wddsWizard: Data Wizard for a Minimal Wildlife Disease Data Standard ‚Äî wddsWizard-package","text":"Maintainer: Collin Schwantes collin@viralemergence.org (ORCID)","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_data_templates.html","id":null,"dir":"Reference","previous_headings":"","what":"Provides Access to Versioned Data Template Files ‚Äî wdds_data_templates","title":"Provides Access to Versioned Data Template Files ‚Äî wdds_data_templates","text":"Since schema versions may change life cycle project, important users access schema versions via package. function allows quickly retrieve whichever version data templates may need.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_data_templates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provides Access to Versioned Data Template Files ‚Äî wdds_data_templates","text":"","code":"wdds_data_templates(version = NULL, file = NULL)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_data_templates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provides Access to Versioned Data Template Files ‚Äî wdds_data_templates","text":"version Character. Version wdds deposit. Leave NULL see versions. file Character. Specific file wdds deposit. Leave NULL see files version.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_data_templates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provides Access to Versioned Data Template Files ‚Äî wdds_data_templates","text":"Character. Either version identifiers file paths.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_data_templates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Provides Access to Versioned Data Template Files ‚Äî wdds_data_templates","text":"function three things. Shows versions schema package version NULL Provides paths example data files associated version schema version NULL file NULL Provides specific file path specific version example data version file specified.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_data_templates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provides Access to Versioned Data Template Files ‚Äî wdds_data_templates","text":"","code":"# see which versions are in the package  wdds_data_templates() #> The following versions of the standard are availble in the package: #>         -  latest #>         -  v_1_0_0 #>         -  v_1_0_1 #>         -  v_1_0_2 #>         -  v_1_0_3 #>         -  v_1_0_4 #> [1] \"latest\"  \"v_1_0_0\" \"v_1_0_1\" \"v_1_0_2\" \"v_1_0_3\" \"v_1_0_4\"  # see files associated with a version  wdds_data_templates(version = \"latest\") #> /home/runner/work/_temp/Library/wddsWizard/extdata/wdds_archive/latest/data_templates/disease_data_template.csv #> /home/runner/work/_temp/Library/wddsWizard/extdata/wdds_archive/latest/data_templates/disease_data_template.xlsx #> /home/runner/work/_temp/Library/wddsWizard/extdata/wdds_archive/latest/data_templates/project_metadata_template.csv  # get the file path for a specific file  wdds_data_templates(version = \"v_1_0_2\", file = \"disease_data_template.csv\") #> [1] \"/home/runner/work/_temp/Library/wddsWizard/extdata/wdds_archive/v_1_0_2/data_templates/disease_data_template.csv\""},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Provides Access to Versioned Example Data Files ‚Äî wdds_example_data","title":"Provides Access to Versioned Example Data Files ‚Äî wdds_example_data","text":"Since schema versions may change life cycle project, important users access schema versions via package. function allows quickly retrieve whichever version example data may need.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provides Access to Versioned Example Data Files ‚Äî wdds_example_data","text":"","code":"wdds_example_data(version = NULL, file = NULL)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provides Access to Versioned Example Data Files ‚Äî wdds_example_data","text":"version Character NULL. Version wdds deposit. Leave NULL see versions. Default NULL return character vector versions. file Character NULL. Specific file wdds deposit. Leave NULL see files version. Default NULL return files associated given version.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provides Access to Versioned Example Data Files ‚Äî wdds_example_data","text":"Character. Either version identifiers file paths.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_example_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Provides Access to Versioned Example Data Files ‚Äî wdds_example_data","text":"function three things. Shows versions schema package version NULL. Provides paths example data files associated version schema version provided file NULL. Provides specific file path specific version example data file version provided.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provides Access to Versioned Example Data Files ‚Äî wdds_example_data","text":"","code":"# see which versions are in the package  wdds_example_data() #> The following versions of the standard are availble in the package: #>         -  latest #>         -  v_1_0_0 #>         -  v_1_0_1 #>         -  v_1_0_2 #>         -  v_1_0_3 #>         -  v_1_0_4 #> [1] \"latest\"  \"v_1_0_0\" \"v_1_0_1\" \"v_1_0_2\" \"v_1_0_3\" \"v_1_0_4\"  # see files associated with a version  wdds_example_data(version = \"latest\") #> /home/runner/work/_temp/Library/wddsWizard/extdata/wdds_archive/latest/example_data/Becker_demo_dataset.xlsx #> /home/runner/work/_temp/Library/wddsWizard/extdata/wdds_archive/latest/example_data/becker_demo_dataset.csv #> /home/runner/work/_temp/Library/wddsWizard/extdata/wdds_archive/latest/example_data/becker_project_metadata.csv #> /home/runner/work/_temp/Library/wddsWizard/extdata/wdds_archive/latest/example_data/example_project_metadata.csv #> /home/runner/work/_temp/Library/wddsWizard/extdata/wdds_archive/latest/example_data/minimal_example.json #> /home/runner/work/_temp/Library/wddsWizard/extdata/wdds_archive/latest/example_data/minimal_example_disease_data.csv #> /home/runner/work/_temp/Library/wddsWizard/extdata/wdds_archive/latest/example_data/minimal_example_project_metadata.csv #> /home/runner/work/_temp/Library/wddsWizard/extdata/wdds_archive/latest/example_data/my_interesting_disease_data.csv #> /home/runner/work/_temp/Library/wddsWizard/extdata/wdds_archive/latest/example_data/my_project_metadata.csv  # get the file path for a specific file  wdds_example_data(version = \"v_1_0_2\", file = \"Becker_demo_dataset.xlsx\") #> [1] \"/home/runner/work/_temp/Library/wddsWizard/extdata/wdds_archive/v_1_0_2/example_data/Becker_demo_dataset.xlsx\""},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Provides Access to Versioned Schema Files ‚Äî wdds_json","title":"Provides Access to Versioned Schema Files ‚Äî wdds_json","text":"Since schema versions may change life cycle project, important users access schema versions via package. function allows quickly retrieve whichever schema version may need.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provides Access to Versioned Schema Files ‚Äî wdds_json","text":"","code":"wdds_json(version = NULL, file = NULL)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provides Access to Versioned Schema Files ‚Äî wdds_json","text":"version Character NULL. Version wdds deposit. Leave NULL see versions. Default NULL return character vector versions. file Character NULL. Specific file wdds deposit. Leave NULL see files version. Default NULL return character vector relative file paths.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provides Access to Versioned Schema Files ‚Äî wdds_json","text":"Character. Either version identifiers, relative file paths within version, specific file path.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_json.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Provides Access to Versioned Schema Files ‚Äî wdds_json","text":"function three things: Shows versions schema package version file NULL. Provides relative paths schema files associated version schema version provided. Provides specific file path specific version schema version file path provided.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provides Access to Versioned Schema Files ‚Äî wdds_json","text":"","code":"# see which versions are in the package  wdds_json() #> The following versions of the standard are availble in the package: #>         -  latest #>         -  v_1_0_0 #>         -  v_1_0_1 #>         -  v_1_0_2 #>         -  v_1_0_3 #>         -  v_1_0_4 #> [1] \"latest\"  \"v_1_0_0\" \"v_1_0_1\" \"v_1_0_2\" \"v_1_0_3\" \"v_1_0_4\"  # see files associated with a version  wdds_json(version = \"latest\") #> [1] \"schemas/datacite/datacite-v4.5.json\" \"schemas/disease_data.json\"           #> [3] \"schemas/project_metadata.json\"       \"wdds_schema.json\"                     # get the file path for a specific file  wdds_json(version = \"v_1_0_2\", file = \"schemas/disease_data.json\") #> [1] \"/home/runner/work/_temp/Library/wddsWizard/extdata/wdds_archive/v_1_0_2/wdds_schema/schemas/disease_data.json\""},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Wildlife Disease Data Standard ‚Äî wdds_schema","title":"Wildlife Disease Data Standard ‚Äî wdds_schema","text":"See data standard JSON file field descriptions.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wildlife Disease Data Standard ‚Äî wdds_schema","text":"","code":"wdds_schema"},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_schema.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Wildlife Disease Data Standard ‚Äî wdds_schema","text":"object class list length 6.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_to_dcmi.html","id":null,"dir":"Reference","previous_headings":"","what":"WDDS to the Dublin Core Metadata Initiative ‚Äî wdds_to_dcmi","title":"WDDS to the Dublin Core Metadata Initiative ‚Äî wdds_to_dcmi","text":"Converts WDDS project metadata Zenodo flavored DCMI metadata.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_to_dcmi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WDDS to the Dublin Core Metadata Initiative ‚Äî wdds_to_dcmi","text":"","code":"wdds_to_dcmi(   metadata_to_translate,   translation_map = wddsWizard::wdds_to_dcmi_map )"},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_to_dcmi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WDDS to the Dublin Core Metadata Initiative ‚Äî wdds_to_dcmi","text":"metadata_to_translate List. Metadata conforms WDDS data standard prepped JSON. See prep_from_metadata_template translation_map List. list describes translate WDDS DCMI.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_to_dcmi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"WDDS to the Dublin Core Metadata Initiative ‚Äî wdds_to_dcmi","text":"List. Translated metadata appropriate names.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_to_dcmi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"WDDS to the Dublin Core Metadata Initiative ‚Äî wdds_to_dcmi","text":"","code":"project_metadata <- wdds_example_data(version = \"latest\",                                     file = \"example_project_metadata.csv\")|>     read.csv()  test_pmd <- project_metadata |>   prep_from_metadata_template(json_prep = FALSE)  test_pmd$rights$rights <- \"CC0-1.0\"  dcmi_metadata <- wdds_to_dcmi(metadata_to_translate = test_pmd,                               translation_map =  wddsWizard::wdds_to_dcmi_map)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_to_dcmi_map.html","id":null,"dir":"Reference","previous_headings":"","what":"WDDS to DCMI metadata mapping ‚Äî wdds_to_dcmi_map","title":"WDDS to DCMI metadata mapping ‚Äî wdds_to_dcmi_map","text":"list maps variables WDDS DCMI data standards.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_to_dcmi_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WDDS to DCMI metadata mapping ‚Äî wdds_to_dcmi_map","text":"","code":"wdds_to_dcmi_map"},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_to_dcmi_map.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"WDDS to DCMI metadata mapping ‚Äî wdds_to_dcmi_map","text":"object class list length 2.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_to_dcmi_map.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"WDDS to DCMI metadata mapping ‚Äî wdds_to_dcmi_map","text":"https://github.com/ropenscilabs/deposits/blob/main/inst/extdata/dc/schema.json","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_to_pharos.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert WDDS disease data to PHAROS data ‚Äî wdds_to_pharos","title":"Convert WDDS disease data to PHAROS data ‚Äî wdds_to_pharos","text":"11 September 2025, WDDS PHAROS data model fully aligned. function converts data conforms WDDS PHAROS data model. See wdds_to_pharos_map data model crosswalk.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_to_pharos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert WDDS disease data to PHAROS data ‚Äî wdds_to_pharos","text":"","code":"wdds_to_pharos(wdds_disease_data)"},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_to_pharos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert WDDS disease data to PHAROS data ‚Äî wdds_to_pharos","text":"wdds_disease_data Data frame. Disease Data set conforms wdds data standard.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_to_pharos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert WDDS disease data to PHAROS data ‚Äî wdds_to_pharos","text":"Data frame. tabular data set conforms PHAROS data model.","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_to_pharos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert WDDS disease data to PHAROS data ‚Äî wdds_to_pharos","text":"","code":"wdds_to_pharos(wdds_disease_data = wddsWizard::minimal_disease_data) #> `sampleCollectionMethod` does not map perfectly to `Collection method or tissue`. Please review those entries. #> # A tibble: 3 √ó 13 #>   `Animal ID` `Collection day` `Collection month` `Collection year` #>   <chr>       <chr>            <chr>              <chr>             #> 1 d           1                12                 1                 #> 2 e           1                10                 2024              #> 3 f           1                1                  2025              #> # ‚Ñπ 9 more variables: `Detection method` <chr>, `Detection outcome` <chr>, #> #   `Detection target` <chr>, `Host species` <chr>, Latitude <chr>, #> #   Longitude <chr>, Pathogen <chr>, `Collection method or tissue` <chr>, #> #   `Sample ID` <chr>  # data must be written to CSV then uploaded to PHAROS"},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_to_pharos_map.html","id":null,"dir":"Reference","previous_headings":"","what":"WDDS to PHAROS metadata mapping ‚Äî wdds_to_pharos_map","title":"WDDS to PHAROS metadata mapping ‚Äî wdds_to_pharos_map","text":"table maps variables WDDS PHAROS data standard (11 September 2025). deprecated PHARSO wdds aligned.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_to_pharos_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WDDS to PHAROS metadata mapping ‚Äî wdds_to_pharos_map","text":"","code":"wdds_to_pharos_map"},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_to_pharos_map.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"WDDS to PHAROS metadata mapping ‚Äî wdds_to_pharos_map","text":"object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 45 rows 2 columns.","code":""},{"path":"https://viralemergence.github.io/wddsWizard/reference/wdds_to_pharos_map.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"WDDS to PHAROS metadata mapping ‚Äî wdds_to_pharos_map","text":"https://pharos.viralemergence.org/","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/news/index.html","id":"wddswizard-021","dir":"Changelog","previous_headings":"","what":"wddsWizard 0.2.1","title":"wddsWizard 0.2.1","text":"fix issue regex prep_project_metadata","code":""},{"path":"https://viralemergence.github.io/wddsWizard/news/index.html","id":"wddswizard-020","dir":"Changelog","previous_headings":"","what":"wddsWizard 0.2.0","title":"wddsWizard 0.2.0","text":"extract metadata DOIs projects translate data standards generate metadata templates","code":""},{"path":[]},{"path":"https://viralemergence.github.io/wddsWizard/news/index.html","id":"wddswizard-003","dir":"Changelog","previous_headings":"","what":"wddsWizard 0.0.3","title":"wddsWizard 0.0.3","text":"fixes issue tibble row names set","code":""},{"path":"https://viralemergence.github.io/wddsWizard/news/index.html","id":"wddswizard-002","dir":"Changelog","previous_headings":"","what":"wddsWizard 0.0.2","title":"wddsWizard 0.0.2","text":"using wdds_* functions users can use different schema versions access files versions quickly. helpful built system use data standard version 1.0.0 standard progressed 1.0.2. made improvements re-build process make updating package easier. added version archive avialable files","code":""},{"path":"https://viralemergence.github.io/wddsWizard/news/index.html","id":"wddswizard-001","dir":"Changelog","previous_headings":"","what":"wddsWizard 0.0.1","title":"wddsWizard 0.0.1","text":"Dropping healthNotes recommended field","code":""}]
